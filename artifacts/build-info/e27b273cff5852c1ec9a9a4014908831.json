{
	"id": "e27b273cff5852c1ec9a9a4014908831",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"kcbreward.sol": {
				"content": "/**\n *Submitted for verification at Etherscan.io on 2020-09-16\n*/\n\n/**\n *Submitted for verification at Etherscan.io on 2020-09-15\n*/\n\npragma solidity ^0.5.16;\npragma experimental ABIEncoderV2;\n\n// From https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/math/Math.sol\n// Subject to the MIT license.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting with custom message on overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, errorMessage);\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on underflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot underflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction underflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on underflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot underflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, errorMessage);\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers.\n     * Reverts on division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers.\n     * Reverts with custom message on division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n\ncontract Uni {\n    /// @notice EIP-20 token name for this token\n    string public constant name = \"Uniswap\";\n\n    /// @notice EIP-20 token symbol for this token\n    string public constant symbol = \"UNI\";\n\n    /// @notice EIP-20 token decimals for this token\n    uint8 public constant decimals = 18;\n\n    /// @notice Total number of tokens in circulation\n    uint public totalSupply = 1_000_000_000e18; // 1 billion Uni\n\n    /// @notice Address which may mint new tokens\n    address public minter;\n\n    /// @notice The timestamp after which minting may occur\n    uint public mintingAllowedAfter;\n\n    /// @notice Minimum time between mints\n    uint32 public constant minimumTimeBetweenMints = 1 days * 365;\n\n    /// @notice Cap on the percentage of totalSupply that can be minted at each mint\n    uint8 public constant mintCap = 2;\n\n    /// @notice Allowance amounts on behalf of others\n    mapping (address => mapping (address => uint96)) internal allowances;\n\n    /// @notice Official record of token balances for each account\n    mapping (address => uint96) internal balances;\n\n    /// @notice A record of each accounts delegate\n    mapping (address => address) public delegates;\n\n    /// @notice A checkpoint for marking number of votes from a given block\n    struct Checkpoint {\n        uint32 fromBlock;\n        uint96 votes;\n    }\n\n    /// @notice A record of votes checkpoints for each account, by index\n    mapping (address => mapping (uint32 => Checkpoint)) public checkpoints;\n\n    /// @notice The number of checkpoints for each account\n    mapping (address => uint32) public numCheckpoints;\n\n    /// @notice The EIP-712 typehash for the contract's domain\n    bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\");\n\n    /// @notice The EIP-712 typehash for the delegation struct used by the contract\n    bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    /// @notice The EIP-712 typehash for the permit struct used by the contract\n    bytes32 public constant PERMIT_TYPEHASH = keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /// @notice A record of states for signing / validating signatures\n    mapping (address => uint) public nonces;\n\n    /// @notice An event thats emitted when the minter address is changed\n    event MinterChanged(address minter, address newMinter);\n\n    /// @notice An event thats emitted when an account changes its delegate\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /// @notice An event thats emitted when a delegate account's vote balance changes\n    event DelegateVotesChanged(address indexed delegate, uint previousBalance, uint newBalance);\n\n    /// @notice The standard EIP-20 transfer event\n    event Transfer(address indexed from, address indexed to, uint256 amount);\n\n    /// @notice The standard EIP-20 approval event\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\n\n    /**\n     * @notice Construct a new Uni token\n     * @param account The initial account to grant all the tokens\n     * @param minter_ The account with minting ability\n     * @param mintingAllowedAfter_ The timestamp after which minting may occur\n     */\n    constructor(address account, address minter_, uint mintingAllowedAfter_) public {\n        require(mintingAllowedAfter_ >= block.timestamp, \"Uni::constructor: minting can only begin after deployment\");\n\n        balances[account] = uint96(totalSupply);\n        emit Transfer(address(0), account, totalSupply);\n        minter = minter_;\n        emit MinterChanged(address(0), minter);\n        mintingAllowedAfter = mintingAllowedAfter_;\n    }\n\n    /**\n     * @notice Change the minter address\n     * @param minter_ The address of the new minter\n     */\n    function setMinter(address minter_) external {\n        require(msg.sender == minter, \"Uni::setMinter: only the minter can change the minter address\");\n        emit MinterChanged(minter, minter_);\n        minter = minter_;\n    }\n\n    /**\n     * @notice Mint new tokens\n     * @param dst The address of the destination account\n     * @param rawAmount The number of tokens to be minted\n     */\n    function mint(address dst, uint rawAmount) external {\n        require(msg.sender == minter, \"Uni::mint: only the minter can mint\");\n        require(block.timestamp >= mintingAllowedAfter, \"Uni::mint: minting not allowed yet\");\n        require(dst != address(0), \"Uni::mint: cannot transfer to the zero address\");\n\n        // record the mint\n        mintingAllowedAfter = SafeMath.add(block.timestamp, minimumTimeBetweenMints);\n\n        // mint the amount\n        uint96 amount = safe96(rawAmount, \"Uni::mint: amount exceeds 96 bits\");\n        require(amount <= SafeMath.div(SafeMath.mul(totalSupply, mintCap), 100), \"Uni::mint: exceeded mint cap\");\n        totalSupply = safe96(SafeMath.add(totalSupply, amount), \"Uni::mint: totalSupply exceeds 96 bits\");\n\n        // transfer the amount to the recipient\n        balances[dst] = add96(balances[dst], amount, \"Uni::mint: transfer amount overflows\");\n        emit Transfer(address(0), dst, amount);\n\n        // move delegates\n        _moveDelegates(address(0), delegates[dst], amount);\n    }\n\n    /**\n     * @notice Get the number of tokens `spender` is approved to spend on behalf of `account`\n     * @param account The address of the account holding the funds\n     * @param spender The address of the account spending the funds\n     * @return The number of tokens approved\n     */\n    function allowance(address account, address spender) external view returns (uint) {\n        return allowances[account][spender];\n    }\n\n    /**\n     * @notice Approve `spender` to transfer up to `amount` from `src`\n     * @dev This will overwrite the approval amount for `spender`\n     *  and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)\n     * @param spender The address of the account which may transfer tokens\n     * @param rawAmount The number of tokens that are approved (2^256-1 means infinite)\n     * @return Whether or not the approval succeeded\n     */\n    function approve(address spender, uint rawAmount) external returns (bool) {\n        uint96 amount;\n        if (rawAmount == uint(-1)) {\n            amount = uint96(-1);\n        } else {\n            amount = safe96(rawAmount, \"Uni::approve: amount exceeds 96 bits\");\n        }\n\n        allowances[msg.sender][spender] = amount;\n\n        emit Approval(msg.sender, spender, amount);\n        return true;\n    }\n\n    /**\n     * @notice Triggers an approval from owner to spends\n     * @param owner The address to approve from\n     * @param spender The address to be approved\n     * @param rawAmount The number of tokens that are approved (2^256-1 means infinite)\n     * @param deadline The time at which to expire the signature\n     * @param v The recovery byte of the signature\n     * @param r Half of the ECDSA signature pair\n     * @param s Half of the ECDSA signature pair\n     */\n    function permit(address owner, address spender, uint rawAmount, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\n        uint96 amount;\n        if (rawAmount == uint(-1)) {\n            amount = uint96(-1);\n        } else {\n            amount = safe96(rawAmount, \"Uni::permit: amount exceeds 96 bits\");\n        }\n\n        bytes32 domainSeparator = keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this)));\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, rawAmount, nonces[owner]++, deadline));\n        bytes32 digest = keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\n        address signatory = ecrecover(digest, v, r, s);\n        require(signatory != address(0), \"Uni::permit: invalid signature\");\n        require(signatory == owner, \"Uni::permit: unauthorized\");\n        require(now <= deadline, \"Uni::permit: signature expired\");\n\n        allowances[owner][spender] = amount;\n\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @notice Get the number of tokens held by the `account`\n     * @param account The address of the account to get the balance of\n     * @return The number of tokens held\n     */\n    function balanceOf(address account) external view returns (uint) {\n        return balances[account];\n    }\n\n    /**\n     * @notice Transfer `amount` tokens from `msg.sender` to `dst`\n     * @param dst The address of the destination account\n     * @param rawAmount The number of tokens to transfer\n     * @return Whether or not the transfer succeeded\n     */\n    function transfer(address dst, uint rawAmount) external returns (bool) {\n        uint96 amount = safe96(rawAmount, \"Uni::transfer: amount exceeds 96 bits\");\n        _transferTokens(msg.sender, dst, amount);\n        return true;\n    }\n\n    /**\n     * @notice Transfer `amount` tokens from `src` to `dst`\n     * @param src The address of the source account\n     * @param dst The address of the destination account\n     * @param rawAmount The number of tokens to transfer\n     * @return Whether or not the transfer succeeded\n     */\n    function transferFrom(address src, address dst, uint rawAmount) external returns (bool) {\n        address spender = msg.sender;\n        uint96 spenderAllowance = allowances[src][spender];\n        uint96 amount = safe96(rawAmount, \"Uni::approve: amount exceeds 96 bits\");\n\n        if (spender != src && spenderAllowance != uint96(-1)) {\n            uint96 newAllowance = sub96(spenderAllowance, amount, \"Uni::transferFrom: transfer amount exceeds spender allowance\");\n            allowances[src][spender] = newAllowance;\n\n            emit Approval(src, spender, newAllowance);\n        }\n\n        _transferTokens(src, dst, amount);\n        return true;\n    }\n\n    /**\n     * @notice Delegate votes from `msg.sender` to `delegatee`\n     * @param delegatee The address to delegate votes to\n     */\n    function delegate(address delegatee) public {\n        return _delegate(msg.sender, delegatee);\n    }\n\n    /**\n     * @notice Delegates votes from signatory to `delegatee`\n     * @param delegatee The address to delegate votes to\n     * @param nonce The contract state required to match the signature\n     * @param expiry The time at which to expire the signature\n     * @param v The recovery byte of the signature\n     * @param r Half of the ECDSA signature pair\n     * @param s Half of the ECDSA signature pair\n     */\n    function delegateBySig(address delegatee, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s) public {\n        bytes32 domainSeparator = keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this)));\n        bytes32 structHash = keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry));\n        bytes32 digest = keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\n        address signatory = ecrecover(digest, v, r, s);\n        require(signatory != address(0), \"Uni::delegateBySig: invalid signature\");\n        require(nonce == nonces[signatory]++, \"Uni::delegateBySig: invalid nonce\");\n        require(now <= expiry, \"Uni::delegateBySig: signature expired\");\n        return _delegate(signatory, delegatee);\n    }\n\n    /**\n     * @notice Gets the current votes balance for `account`\n     * @param account The address to get votes balance\n     * @return The number of current votes for `account`\n     */\n    function getCurrentVotes(address account) external view returns (uint96) {\n        uint32 nCheckpoints = numCheckpoints[account];\n        return nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0;\n    }\n\n    /**\n     * @notice Determine the prior number of votes for an account as of a block number\n     * @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n     * @param account The address of the account to check\n     * @param blockNumber The block number to get the vote balance at\n     * @return The number of votes the account had as of the given block\n     */\n    function getPriorVotes(address account, uint blockNumber) public view returns (uint96) {\n        require(blockNumber < block.number, \"Uni::getPriorVotes: not yet determined\");\n\n        uint32 nCheckpoints = numCheckpoints[account];\n        if (nCheckpoints == 0) {\n            return 0;\n        }\n\n        // First check most recent balance\n        if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {\n            return checkpoints[account][nCheckpoints - 1].votes;\n        }\n\n        // Next check implicit zero balance\n        if (checkpoints[account][0].fromBlock > blockNumber) {\n            return 0;\n        }\n\n        uint32 lower = 0;\n        uint32 upper = nCheckpoints - 1;\n        while (upper > lower) {\n            uint32 center = upper - (upper - lower) / 2; // ceil, avoiding overflow\n            Checkpoint memory cp = checkpoints[account][center];\n            if (cp.fromBlock == blockNumber) {\n                return cp.votes;\n            } else if (cp.fromBlock < blockNumber) {\n                lower = center;\n            } else {\n                upper = center - 1;\n            }\n        }\n        return checkpoints[account][lower].votes;\n    }\n\n    function _delegate(address delegator, address delegatee) internal {\n        address currentDelegate = delegates[delegator];\n        uint96 delegatorBalance = balances[delegator];\n        delegates[delegator] = delegatee;\n\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\n\n        _moveDelegates(currentDelegate, delegatee, delegatorBalance);\n    }\n\n    function _transferTokens(address src, address dst, uint96 amount) internal {\n        require(src != address(0), \"Uni::_transferTokens: cannot transfer from the zero address\");\n        require(dst != address(0), \"Uni::_transferTokens: cannot transfer to the zero address\");\n\n        balances[src] = sub96(balances[src], amount, \"Uni::_transferTokens: transfer amount exceeds balance\");\n        balances[dst] = add96(balances[dst], amount, \"Uni::_transferTokens: transfer amount overflows\");\n        emit Transfer(src, dst, amount);\n\n        _moveDelegates(delegates[src], delegates[dst], amount);\n    }\n\n    function _moveDelegates(address srcRep, address dstRep, uint96 amount) internal {\n        if (srcRep != dstRep && amount > 0) {\n            if (srcRep != address(0)) {\n                uint32 srcRepNum = numCheckpoints[srcRep];\n                uint96 srcRepOld = srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0;\n                uint96 srcRepNew = sub96(srcRepOld, amount, \"Uni::_moveVotes: vote amount underflows\");\n                _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew);\n            }\n\n            if (dstRep != address(0)) {\n                uint32 dstRepNum = numCheckpoints[dstRep];\n                uint96 dstRepOld = dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0;\n                uint96 dstRepNew = add96(dstRepOld, amount, \"Uni::_moveVotes: vote amount overflows\");\n                _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew);\n            }\n        }\n    }\n\n    function _writeCheckpoint(address delegatee, uint32 nCheckpoints, uint96 oldVotes, uint96 newVotes) internal {\n      uint32 blockNumber = safe32(block.number, \"Uni::_writeCheckpoint: block number exceeds 32 bits\");\n\n      if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {\n          checkpoints[delegatee][nCheckpoints - 1].votes = newVotes;\n      } else {\n          checkpoints[delegatee][nCheckpoints] = Checkpoint(blockNumber, newVotes);\n          numCheckpoints[delegatee] = nCheckpoints + 1;\n      }\n\n      emit DelegateVotesChanged(delegatee, oldVotes, newVotes);\n    }\n\n    function safe32(uint n, string memory errorMessage) internal pure returns (uint32) {\n        require(n < 2**32, errorMessage);\n        return uint32(n);\n    }\n\n    function safe96(uint n, string memory errorMessage) internal pure returns (uint96) {\n        require(n < 2**96, errorMessage);\n        return uint96(n);\n    }\n\n    function add96(uint96 a, uint96 b, string memory errorMessage) internal pure returns (uint96) {\n        uint96 c = a + b;\n        require(c >= a, errorMessage);\n        return c;\n    }\n\n    function sub96(uint96 a, uint96 b, string memory errorMessage) internal pure returns (uint96) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    function getChainId() internal pure returns (uint) {\n        uint256 chainId;\n        assembly { chainId := chainid() }\n        return chainId;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"kcbreward.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"kcbreward.sol\":889:6579  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"kcbreward.sol\":889:6579  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa365627a7a72315820642d0e9a51e217b1dd37b639d16370c88ae55c541aafd0abaf1072c3abed61616c6578706572696d656e74616cf564736f6c63430005110040\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60636023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea365627a7a72315820642d0e9a51e217b1dd37b639d16370c88ae55c541aafd0abaf1072c3abed61616c6578706572696d656e74616cf564736f6c63430005110040",
							"opcodes": "PUSH1 0x63 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG3 PUSH6 0x627A7A723158 KECCAK256 PUSH5 0x2D0E9A51E2 OR 0xB1 0xDD CALLDATACOPY 0xB6 CODECOPY 0xD1 PUSH4 0x70C88AE5 0x5C SLOAD BYTE 0xAF 0xD0 0xAB 0xAF LT PUSH19 0xC3ABED61616C6578706572696D656E74616CF5 PUSH5 0x736F6C6343 STOP SDIV GT STOP BLOCKHASH ",
							"sourceMap": "889:5690:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea365627a7a72315820642d0e9a51e217b1dd37b639d16370c88ae55c541aafd0abaf1072c3abed61616c6578706572696d656e74616cf564736f6c63430005110040",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG3 PUSH6 0x627A7A723158 KECCAK256 PUSH5 0x2D0E9A51E2 OR 0xB1 0xDD CALLDATACOPY 0xB6 CODECOPY 0xD1 PUSH4 0x70C88AE5 0x5C SLOAD BYTE 0xAF 0xD0 0xAB 0xAF LT PUSH19 0xC3ABED61616C6578706572696D656E74616CF5 PUSH5 0x736F6C6343 STOP SDIV GT STOP BLOCKHASH ",
							"sourceMap": "889:5690:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "19800",
								"executionCost": "100",
								"totalCost": "19900"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"add(uint256,uint256,string memory)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"mul(uint256,uint256,string memory)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 889,
									"end": 6579,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 889,
									"end": 6579,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a365627a7a72315820642d0e9a51e217b1dd37b639d16370c88ae55c541aafd0abaf1072c3abed61616c6578706572696d656e74616cf564736f6c63430005110040",
									".code": [
										{
											"begin": 889,
											"end": 6579,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 889,
											"end": 6579,
											"name": "ADDRESS"
										},
										{
											"begin": 889,
											"end": 6579,
											"name": "EQ"
										},
										{
											"begin": 889,
											"end": 6579,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 889,
											"end": 6579,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 889,
											"end": 6579,
											"name": "MSTORE"
										},
										{
											"begin": 889,
											"end": 6579,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 889,
											"end": 6579,
											"name": "DUP1"
										},
										{
											"begin": 889,
											"end": 6579,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"kcbreward.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"kcbreward.sol\":{\"keccak256\":\"0x112df1c09207e46636533fc5f793e46d1ccf407848b8d1a30fd8ade7b5e040c1\",\"urls\":[\"bzz-raw://ae14de1143e3fb460ce7ce7fca2da4bcc845b1704aacea07c632386747e9e503\",\"dweb:/ipfs/QmY7sKYtRFw9KsVjHgNDFcPsJUZ21YHKcVeGh18pzVTd4C\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Uni": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "minter_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "mintingAllowedAfter_",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "fromDelegate",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "toDelegate",
									"type": "address"
								}
							],
							"name": "DelegateChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "previousBalance",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newBalance",
									"type": "uint256"
								}
							],
							"name": "DelegateVotesChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "minter",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newMinter",
									"type": "address"
								}
							],
							"name": "MinterChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DELEGATION_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rawAmount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"name": "checkpoints",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "fromBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint96",
									"name": "votes",
									"type": "uint96"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatee",
									"type": "address"
								}
							],
							"name": "delegate",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatee",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "expiry",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "delegateBySig",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "delegates",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getCurrentVotes",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "",
									"type": "uint96"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"name": "getPriorVotes",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "",
									"type": "uint96"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "minimumTimeBetweenMints",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "dst",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rawAmount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "mintCap",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "minter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "mintingAllowedAfter",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "numCheckpoints",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rawAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "minter_",
									"type": "address"
								}
							],
							"name": "setMinter",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "dst",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rawAmount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "src",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "dst",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rawAmount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"params": {
									"account": "The address of the account holding the funds",
									"spender": "The address of the account spending the funds"
								},
								"return": "The number of tokens approved"
							},
							"approve(address,uint256)": {
								"details": "This will overwrite the approval amount for `spender` and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)",
								"params": {
									"rawAmount": "The number of tokens that are approved (2^256-1 means infinite)",
									"spender": "The address of the account which may transfer tokens"
								},
								"return": "Whether or not the approval succeeded"
							},
							"balanceOf(address)": {
								"params": {
									"account": "The address of the account to get the balance of"
								},
								"return": "The number of tokens held"
							},
							"constructor": {
								"params": {
									"account": "The initial account to grant all the tokens",
									"minter_": "The account with minting ability",
									"mintingAllowedAfter_": "The timestamp after which minting may occur"
								}
							},
							"delegate(address)": {
								"params": {
									"delegatee": "The address to delegate votes to"
								}
							},
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"delegatee": "The address to delegate votes to",
									"expiry": "The time at which to expire the signature",
									"nonce": "The contract state required to match the signature",
									"r": "Half of the ECDSA signature pair",
									"s": "Half of the ECDSA signature pair",
									"v": "The recovery byte of the signature"
								}
							},
							"getCurrentVotes(address)": {
								"params": {
									"account": "The address to get votes balance"
								},
								"return": "The number of current votes for `account`"
							},
							"getPriorVotes(address,uint256)": {
								"details": "Block number must be a finalized block or else this function will revert to prevent misinformation.",
								"params": {
									"account": "The address of the account to check",
									"blockNumber": "The block number to get the vote balance at"
								},
								"return": "The number of votes the account had as of the given block"
							},
							"mint(address,uint256)": {
								"params": {
									"dst": "The address of the destination account",
									"rawAmount": "The number of tokens to be minted"
								}
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"deadline": "The time at which to expire the signature",
									"owner": "The address to approve from",
									"r": "Half of the ECDSA signature pair",
									"rawAmount": "The number of tokens that are approved (2^256-1 means infinite)",
									"s": "Half of the ECDSA signature pair",
									"spender": "The address to be approved",
									"v": "The recovery byte of the signature"
								}
							},
							"setMinter(address)": {
								"params": {
									"minter_": "The address of the new minter"
								}
							},
							"transfer(address,uint256)": {
								"params": {
									"dst": "The address of the destination account",
									"rawAmount": "The number of tokens to transfer"
								},
								"return": "Whether or not the transfer succeeded"
							},
							"transferFrom(address,address,uint256)": {
								"params": {
									"dst": "The address of the destination account",
									"rawAmount": "The number of tokens to transfer",
									"src": "The address of the source account"
								},
								"return": "Whether or not the transfer succeeded"
							}
						}
					},
					"evm": {
						"assembly": "    /* \"kcbreward.sol\":6581:23344  contract Uni {... */\n  mstore(0x40, 0x80)\n    /* \"kcbreward.sol\":6965:6981  1_000_000_000e18 */\n  0x033b2e3c9fd0803ce8000000\n    /* \"kcbreward.sol\":6939:6981  uint public totalSupply = 1_000_000_000e18 */\n  0x00\n  sstore\n    /* \"kcbreward.sol\":9960:10399  constructor(address account, address minter_, uint mintingAllowedAfter_) public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"kcbreward.sol\":9960:10399  constructor(address account, address minter_, uint mintingAllowedAfter_) public {... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  jump(tag_3)\ntag_2:\n    /* \"kcbreward.sol\":10082:10097  block.timestamp */\n  timestamp\n    /* \"kcbreward.sol\":10058:10078  mintingAllowedAfter_ */\n  dup2\n    /* \"kcbreward.sol\":10058:10097  mintingAllowedAfter_ >= block.timestamp */\n  lt\n  iszero\n    /* \"kcbreward.sol\":10050:10159  require(mintingAllowedAfter_ >= block.timestamp, \"Uni::constructor: minting can only begin after deployment\") */\n  tag_6\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  tag_7\n  swap1\n  jump(tag_8)\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_6:\n    /* \"kcbreward.sol\":10197:10208  totalSupply */\n  0x00\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"kcbreward.sol\":10170:10187  balances[account] */\n  dup6\n  and\n  dup1\n  dup4\n  mstore\n    /* \"kcbreward.sol\":10170:10178  balances */\n  0x04\n    /* \"kcbreward.sol\":10170:10187  balances[account] */\n  0x20\n  mstore\n  0x40\n  dup1\n  dup5\n  keccak256\n    /* \"kcbreward.sol\":10170:10209  balances[account] = uint96(totalSupply) */\n  dup1\n  sload\n  not(sub(shl(0x60, 0x01), 0x01))\n  and\n  sub(shl(0x60, 0x01), 0x01)\n  swap1\n  swap5\n  and\n  swap4\n  swap1\n  swap4\n  or\n  swap1\n  swap3\n  sstore\n    /* \"kcbreward.sol\":10254:10265  totalSupply */\n  dup3\n  sload\n    /* \"kcbreward.sol\":10224:10266  Transfer(address(0), account, totalSupply) */\n  swap2\n  mload\n    /* \"kcbreward.sol\":10170:10187  balances[account] */\n  swap1\n  swap3\n    /* \"kcbreward.sol\":10197:10208  totalSupply */\n  swap2\n    /* \"kcbreward.sol\":10224:10266  Transfer(address(0), account, totalSupply) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap2\n  tag_9\n  swap2\n    /* \"kcbreward.sol\":10254:10265  totalSupply */\n  swap1\n    /* \"kcbreward.sol\":10224:10266  Transfer(address(0), account, totalSupply) */\n  jump(tag_10)\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"kcbreward.sol\":10276:10282  minter */\n  0x01\n    /* \"kcbreward.sol\":10276:10292  minter = minter_ */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  dup2\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap2\n  dup3\n  swap1\n  sstore\n    /* \"kcbreward.sol\":10307:10340  MinterChanged(address(0), minter) */\n  mload(0x40)\n  0x3b0007eb941cf645526cbb3a4fdaecda9d28ce4843167d9263b536a1f1edc0f6\n  swap3\n  tag_11\n  swap3\n  0x00\n  swap3\n    /* \"kcbreward.sol\":10333:10339  minter */\n  swap2\n  and\n  swap1\n    /* \"kcbreward.sol\":10307:10340  MinterChanged(address(0), minter) */\n  jump(tag_12)\ntag_11:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"kcbreward.sol\":10350:10369  mintingAllowedAfter */\n  0x02\n    /* \"kcbreward.sol\":10350:10392  mintingAllowedAfter = mintingAllowedAfter_ */\n  sstore\n  pop\n    /* \"kcbreward.sol\":6581:23344  contract Uni {... */\n  tag_14\n  swap1\n  pop\n  jump\n    /* \"--CODEGEN--\":5:139   */\ntag_15:\n    /* \"--CODEGEN--\":83:96   */\n  dup1\n  mload\n    /* \"--CODEGEN--\":101:134   */\n  tag_16\n    /* \"--CODEGEN--\":83:96   */\n  dup2\n    /* \"--CODEGEN--\":101:134   */\n  jump(tag_17)\ntag_16:\n    /* \"--CODEGEN--\":68:139   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\n    /* \"--CODEGEN--\":146:280   */\ntag_18:\n    /* \"--CODEGEN--\":224:237   */\n  dup1\n  mload\n    /* \"--CODEGEN--\":242:275   */\n  tag_16\n    /* \"--CODEGEN--\":224:237   */\n  dup2\n    /* \"--CODEGEN--\":242:275   */\n  jump(tag_20)\n    /* \"--CODEGEN--\":287:822   */\ntag_3:\n  0x00\n  dup1\n  0x00\n    /* \"--CODEGEN--\":436:438   */\n  0x60\n    /* \"--CODEGEN--\":424:433   */\n  dup5\n    /* \"--CODEGEN--\":415:422   */\n  dup7\n    /* \"--CODEGEN--\":411:434   */\n  sub\n    /* \"--CODEGEN--\":407:439   */\n  slt\n    /* \"--CODEGEN--\":404:406   */\n  iszero\n  tag_21\n  jumpi\n    /* \"--CODEGEN--\":452:453   */\n  0x00\n    /* \"--CODEGEN--\":449:450   */\n  dup1\n    /* \"--CODEGEN--\":442:454   */\n  revert\n    /* \"--CODEGEN--\":404:406   */\ntag_21:\n    /* \"--CODEGEN--\":487:488   */\n  0x00\n    /* \"--CODEGEN--\":504:568   */\n  tag_22\n    /* \"--CODEGEN--\":560:567   */\n  dup7\n    /* \"--CODEGEN--\":540:549   */\n  dup7\n    /* \"--CODEGEN--\":504:568   */\n  jump(tag_15)\ntag_22:\n    /* \"--CODEGEN--\":494:568   */\n  swap4\n  pop\n    /* \"--CODEGEN--\":466:574   */\n  pop\n    /* \"--CODEGEN--\":605:607   */\n  0x20\n    /* \"--CODEGEN--\":623:687   */\n  tag_23\n    /* \"--CODEGEN--\":679:686   */\n  dup7\n    /* \"--CODEGEN--\":670:676   */\n  dup3\n    /* \"--CODEGEN--\":659:668   */\n  dup8\n    /* \"--CODEGEN--\":655:677   */\n  add\n    /* \"--CODEGEN--\":623:687   */\n  jump(tag_15)\ntag_23:\n    /* \"--CODEGEN--\":613:687   */\n  swap3\n  pop\n    /* \"--CODEGEN--\":584:693   */\n  pop\n    /* \"--CODEGEN--\":724:726   */\n  0x40\n    /* \"--CODEGEN--\":742:806   */\n  tag_24\n    /* \"--CODEGEN--\":798:805   */\n  dup7\n    /* \"--CODEGEN--\":789:795   */\n  dup3\n    /* \"--CODEGEN--\":778:787   */\n  dup8\n    /* \"--CODEGEN--\":774:796   */\n  add\n    /* \"--CODEGEN--\":742:806   */\n  jump(tag_18)\ntag_24:\n    /* \"--CODEGEN--\":732:806   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":703:812   */\n  pop\n    /* \"--CODEGEN--\":398:822   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\n    /* \"--CODEGEN--\":829:971   */\ntag_25:\n    /* \"--CODEGEN--\":920:965   */\n  tag_26\n    /* \"--CODEGEN--\":959:964   */\n  dup2\n    /* \"--CODEGEN--\":920:965   */\n  jump(tag_27)\ntag_26:\n    /* \"--CODEGEN--\":915:918   */\n  dup3\n    /* \"--CODEGEN--\":908:966   */\n  mstore\n    /* \"--CODEGEN--\":902:971   */\n  pop\n  pop\n  jump\n    /* \"--CODEGEN--\":978:1091   */\ntag_28:\n    /* \"--CODEGEN--\":1061:1085   */\n  tag_26\n    /* \"--CODEGEN--\":1079:1084   */\n  dup2\n    /* \"--CODEGEN--\":1061:1085   */\n  jump(tag_30)\n    /* \"--CODEGEN--\":1099:1493   */\ntag_31:\n  0x00\n    /* \"--CODEGEN--\":1259:1326   */\n  tag_32\n    /* \"--CODEGEN--\":1323:1325   */\n  0x39\n    /* \"--CODEGEN--\":1318:1321   */\n  dup4\n    /* \"--CODEGEN--\":1259:1326   */\n  jump(tag_33)\ntag_32:\n    /* \"--CODEGEN--\":1359:1393   */\n  0x556e693a3a636f6e7374727563746f723a206d696e74696e672063616e206f6e\n    /* \"--CODEGEN--\":1339:1394   */\n  dup2\n  mstore\n    /* \"--CODEGEN--\":1428:1455   */\n  0x6c7920626567696e206166746572206465706c6f796d656e7400000000000000\n    /* \"--CODEGEN--\":1423:1425   */\n  0x20\n    /* \"--CODEGEN--\":1414:1426   */\n  dup3\n  add\n    /* \"--CODEGEN--\":1407:1456   */\n  mstore\n    /* \"--CODEGEN--\":1484:1486   */\n  0x40\n    /* \"--CODEGEN--\":1475:1487   */\n  add\n  swap3\n    /* \"--CODEGEN--\":1245:1493   */\n  swap2\n  pop\n  pop\n  jump\n    /* \"--CODEGEN--\":1501:1614   */\ntag_34:\n    /* \"--CODEGEN--\":1584:1608   */\n  tag_26\n    /* \"--CODEGEN--\":1602:1607   */\n  dup2\n    /* \"--CODEGEN--\":1584:1608   */\n  jump(tag_36)\n    /* \"--CODEGEN--\":1621:1961   */\ntag_12:\n    /* \"--CODEGEN--\":1775:1777   */\n  0x40\n    /* \"--CODEGEN--\":1760:1778   */\n  dup2\n  add\n    /* \"--CODEGEN--\":1789:1868   */\n  tag_37\n    /* \"--CODEGEN--\":1764:1773   */\n  dup3\n    /* \"--CODEGEN--\":1841:1847   */\n  dup6\n    /* \"--CODEGEN--\":1789:1868   */\n  jump(tag_25)\ntag_37:\n    /* \"--CODEGEN--\":1879:1951   */\n  tag_38\n    /* \"--CODEGEN--\":1947:1949   */\n  0x20\n    /* \"--CODEGEN--\":1936:1945   */\n  dup4\n    /* \"--CODEGEN--\":1932:1950   */\n  add\n    /* \"--CODEGEN--\":1923:1929   */\n  dup5\n    /* \"--CODEGEN--\":1879:1951   */\n  jump(tag_28)\ntag_38:\n    /* \"--CODEGEN--\":1746:1961   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\n    /* \"--CODEGEN--\":1968:2375   */\ntag_8:\n    /* \"--CODEGEN--\":2159:2161   */\n  0x20\n    /* \"--CODEGEN--\":2173:2220   */\n  dup1\n  dup3\n  mstore\n    /* \"--CODEGEN--\":2144:2162   */\n  dup2\n  add\n    /* \"--CODEGEN--\":2234:2365   */\n  tag_16\n    /* \"--CODEGEN--\":2144:2162   */\n  dup2\n    /* \"--CODEGEN--\":2234:2365   */\n  jump(tag_31)\n    /* \"--CODEGEN--\":2382:2595   */\ntag_10:\n    /* \"--CODEGEN--\":2500:2502   */\n  0x20\n    /* \"--CODEGEN--\":2485:2503   */\n  dup2\n  add\n    /* \"--CODEGEN--\":2514:2585   */\n  tag_16\n    /* \"--CODEGEN--\":2489:2498   */\n  dup3\n    /* \"--CODEGEN--\":2558:2564   */\n  dup5\n    /* \"--CODEGEN--\":2514:2585   */\n  jump(tag_34)\n    /* \"--CODEGEN--\":2603:2766   */\ntag_33:\n    /* \"--CODEGEN--\":2706:2725   */\n  swap1\n  dup2\n  mstore\n    /* \"--CODEGEN--\":2755:2759   */\n  0x20\n    /* \"--CODEGEN--\":2746:2760   */\n  add\n  swap1\n    /* \"--CODEGEN--\":2699:2766   */\n  jump\n    /* \"--CODEGEN--\":2774:2865   */\ntag_30:\n  0x00\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"--CODEGEN--\":2934:2988   */\n  dup3\n  and\n    /* \"--CODEGEN--\":2836:2860   */\n  tag_16\n    /* \"--CODEGEN--\":2917:2993   */\n  jump\n    /* \"--CODEGEN--\":3000:3072   */\ntag_36:\n    /* \"--CODEGEN--\":3062:3067   */\n  swap1\n    /* \"--CODEGEN--\":3045:3072   */\n  jump\n    /* \"--CODEGEN--\":3079:3208   */\ntag_27:\n  0x00\n    /* \"--CODEGEN--\":3166:3203   */\n  tag_16\n    /* \"--CODEGEN--\":3197:3202   */\n  dup3\n    /* \"--CODEGEN--\":3215:3336   */\n  0x00\n    /* \"--CODEGEN--\":3294:3331   */\n  tag_16\n    /* \"--CODEGEN--\":3325:3330   */\n  dup3\n    /* \"--CODEGEN--\":3294:3331   */\n  jump(tag_30)\n    /* \"--CODEGEN--\":3458:3575   */\ntag_17:\n    /* \"--CODEGEN--\":3527:3551   */\n  tag_48\n    /* \"--CODEGEN--\":3545:3550   */\n  dup2\n    /* \"--CODEGEN--\":3527:3551   */\n  jump(tag_30)\ntag_48:\n    /* \"--CODEGEN--\":3520:3525   */\n  dup2\n    /* \"--CODEGEN--\":3517:3552   */\n  eq\n    /* \"--CODEGEN--\":3507:3509   */\n  tag_49\n  jumpi\n    /* \"--CODEGEN--\":3566:3567   */\n  0x00\n    /* \"--CODEGEN--\":3563:3564   */\n  dup1\n    /* \"--CODEGEN--\":3556:3568   */\n  revert\n    /* \"--CODEGEN--\":3507:3509   */\ntag_49:\n    /* \"--CODEGEN--\":3501:3575   */\n  pop\n  jump\n    /* \"--CODEGEN--\":3582:3699   */\ntag_20:\n    /* \"--CODEGEN--\":3651:3675   */\n  tag_48\n    /* \"--CODEGEN--\":3669:3674   */\n  dup2\n    /* \"--CODEGEN--\":3651:3675   */\n  jump(tag_36)\n    /* \"--CODEGEN--\":3625:3699   */\ntag_14:\n    /* \"kcbreward.sol\":6581:23344  contract Uni {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"kcbreward.sol\":6581:23344  contract Uni {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"kcbreward.sol\":6581:23344  contract Uni {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6fcfff45\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xb4b5ea57\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xe7a324dc\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf1127ed8\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xfca3b5aa\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0xb4b5ea57\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xc3cda520\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x782d6fe1\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x782d6fe1\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x6fcfff45\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x76c71ca1\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0x30adf81f\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x40c10f19\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x587cde1e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x5c11d62f\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x5c19a95c\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x30adf81f\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x30b36cef\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x07546172\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x20606b70\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"kcbreward.sol\":6649:6688  string public constant name = \"Uniswap\" */\n    tag_3:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      jump(tag_39)\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"kcbreward.sol\":7055:7076  address public minter */\n    tag_4:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      jump(tag_43)\n        /* \"kcbreward.sol\":12846:13252  function approve(address spender, uint rawAmount) external returns (bool) {... */\n    tag_5:\n      tag_44\n      tag_45\n      calldatasize\n      0x04\n      jump(tag_46)\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      jump(tag_49)\n        /* \"kcbreward.sol\":6939:6981  uint public totalSupply = 1_000_000_000e18 */\n    tag_6:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      jump(tag_57)\n        /* \"kcbreward.sol\":8251:8373  bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n    tag_7:\n      tag_50\n      tag_55\n      jump\t// in\n        /* \"kcbreward.sol\":15853:16509  function transferFrom(address src, address dst, uint rawAmount) external returns (bool) {... */\n    tag_8:\n      tag_44\n      tag_59\n      calldatasize\n      0x04\n      jump(tag_60)\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"kcbreward.sol\":8668:8805  bytes32 public constant PERMIT_TYPEHASH = keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\") */\n    tag_9:\n      tag_50\n      tag_64\n      jump\t// in\n        /* \"kcbreward.sol\":7143:7174  uint public mintingAllowedAfter */\n    tag_10:\n      tag_50\n      tag_67\n      jump\t// in\n        /* \"kcbreward.sol\":6843:6878  uint8 public constant decimals = 18 */\n    tag_11:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      jump(tag_72)\n        /* \"kcbreward.sol\":10909:11948  function mint(address dst, uint rawAmount) external {... */\n    tag_12:\n      tag_73\n      tag_74\n      calldatasize\n      0x04\n      jump(tag_46)\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      stop\n        /* \"kcbreward.sol\":7716:7761  mapping (address => address) public delegates */\n    tag_13:\n      tag_40\n      tag_77\n      calldatasize\n      0x04\n      jump(tag_78)\n    tag_77:\n      tag_79\n      jump\t// in\n        /* \"kcbreward.sol\":7224:7285  uint32 public constant minimumTimeBetweenMints = 1 days * 365 */\n    tag_14:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      jump(tag_84)\n        /* \"kcbreward.sol\":16651:16751  function delegate(address delegatee) public {... */\n    tag_15:\n      tag_73\n      tag_86\n      calldatasize\n      0x04\n      jump(tag_78)\n    tag_86:\n      tag_87\n      jump\t// in\n        /* \"kcbreward.sol\":8132:8181  mapping (address => uint32) public numCheckpoints */\n    tag_16:\n      tag_81\n      tag_89\n      calldatasize\n      0x04\n      jump(tag_78)\n    tag_89:\n      tag_90\n      jump\t// in\n        /* \"kcbreward.sol\":14957:15063  function balanceOf(address account) external view returns (uint) {... */\n    tag_17:\n      tag_50\n      tag_93\n      calldatasize\n      0x04\n      jump(tag_78)\n    tag_93:\n      tag_94\n      jump\t// in\n        /* \"kcbreward.sol\":7377:7410  uint8 public constant mintCap = 2 */\n    tag_18:\n      tag_69\n      tag_97\n      jump\t// in\n        /* \"kcbreward.sol\":18786:19971  function getPriorVotes(address account, uint blockNumber) public view returns (uint96) {... */\n    tag_19:\n      tag_99\n      tag_100\n      calldatasize\n      0x04\n      jump(tag_46)\n    tag_100:\n      tag_101\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      jump(tag_103)\n        /* \"kcbreward.sol\":8883:8922  mapping (address => uint) public nonces */\n    tag_20:\n      tag_50\n      tag_105\n      calldatasize\n      0x04\n      jump(tag_78)\n    tag_105:\n      tag_106\n      jump\t// in\n        /* \"kcbreward.sol\":6746:6783  string public constant symbol = \"UNI\" */\n    tag_21:\n      tag_36\n      tag_109\n      jump\t// in\n        /* \"kcbreward.sol\":15319:15552  function transfer(address dst, uint rawAmount) external returns (bool) {... */\n    tag_22:\n      tag_44\n      tag_112\n      calldatasize\n      0x04\n      jump(tag_46)\n    tag_112:\n      tag_113\n      jump\t// in\n        /* \"kcbreward.sol\":18145:18364  function getCurrentVotes(address account) external view returns (uint96) {... */\n    tag_23:\n      tag_99\n      tag_116\n      calldatasize\n      0x04\n      jump(tag_78)\n    tag_116:\n      tag_117\n      jump\t// in\n        /* \"kcbreward.sol\":17174:17951  function delegateBySig(address delegatee, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s) public {... */\n    tag_24:\n      tag_73\n      tag_120\n      calldatasize\n      0x04\n      jump(tag_121)\n    tag_120:\n      tag_122\n      jump\t// in\n        /* \"kcbreward.sol\":13730:14761  function permit(address owner, address spender, uint rawAmount, uint deadline, uint8 v, bytes32 r, bytes32 s) external {... */\n    tag_25:\n      tag_73\n      tag_124\n      calldatasize\n      0x04\n      jump(tag_125)\n    tag_124:\n      tag_126\n      jump\t// in\n        /* \"kcbreward.sol\":12244:12378  function allowance(address account, address spender) external view returns (uint) {... */\n    tag_26:\n      tag_50\n      tag_128\n      calldatasize\n      0x04\n      jump(tag_129)\n    tag_128:\n      tag_130\n      jump\t// in\n        /* \"kcbreward.sol\":8464:8581  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n    tag_27:\n      tag_50\n      tag_133\n      jump\t// in\n        /* \"kcbreward.sol\":7996:8066  mapping (address => mapping (uint32 => Checkpoint)) public checkpoints */\n    tag_28:\n      tag_135\n      tag_136\n      calldatasize\n      0x04\n      jump(tag_137)\n    tag_136:\n      tag_138\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      tag_38\n      swap3\n      swap2\n      swap1\n      jump(tag_140)\n        /* \"kcbreward.sol\":10514:10741  function setMinter(address minter_) external {... */\n    tag_29:\n      tag_73\n      tag_142\n      calldatasize\n      0x04\n      jump(tag_78)\n    tag_142:\n      tag_143\n      jump\t// in\n        /* \"kcbreward.sol\":6649:6688  string public constant name = \"Uniswap\" */\n    tag_37:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x07\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xcc, 0x0556e697377617)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"kcbreward.sol\":7055:7076  address public minter */\n    tag_41:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n      dup2\n      jump\t// out\n        /* \"kcbreward.sol\":12846:13252  function approve(address spender, uint rawAmount) external returns (bool) {... */\n    tag_47:\n        /* \"kcbreward.sol\":12914:12918  bool */\n      0x00\n        /* \"kcbreward.sol\":12930:12943  uint96 amount */\n      dup1\n      not(0x00)\n        /* \"kcbreward.sol\":12957:12966  rawAmount */\n      dup4\n        /* \"kcbreward.sol\":12957:12978  rawAmount == uint(-1) */\n      eq\n        /* \"kcbreward.sol\":12953:13121  if (rawAmount == uint(-1)) {... */\n      iszero\n      tag_145\n      jumpi\n      pop\n      not(0x00)\n      jump(tag_146)\n    tag_145:\n        /* \"kcbreward.sol\":13053:13110  safe96(rawAmount, \"Uni::approve: amount exceeds 96 bits\") */\n      tag_147\n        /* \"kcbreward.sol\":13060:13069  rawAmount */\n      dup4\n        /* \"kcbreward.sol\":13053:13110  safe96(rawAmount, \"Uni::approve: amount exceeds 96 bits\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      data_cb3e128da7f3f16c83a901cce3ab145c66bad45a0cd648091fecc9964ebf42fe\n      0x24\n      swap2\n      codecopy\n        /* \"kcbreward.sol\":13053:13059  safe96 */\n      tag_148\n        /* \"kcbreward.sol\":13053:13110  safe96(rawAmount, \"Uni::approve: amount exceeds 96 bits\") */\n      jump\t// in\n    tag_147:\n        /* \"kcbreward.sol\":13044:13110  amount = safe96(rawAmount, \"Uni::approve: amount exceeds 96 bits\") */\n      swap1\n      pop\n        /* \"kcbreward.sol\":12953:13121  if (rawAmount == uint(-1)) {... */\n    tag_146:\n        /* \"kcbreward.sol\":13142:13152  msg.sender */\n      caller\n        /* \"kcbreward.sol\":13131:13153  allowances[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"kcbreward.sol\":13131:13141  allowances */\n      0x03\n        /* \"kcbreward.sol\":13131:13153  allowances[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":13131:13162  allowances[msg.sender][spender] */\n      dup10\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"kcbreward.sol\":13131:13171  allowances[msg.sender][spender] = amount */\n      dup1\n      sload\n      not(sub(shl(0x60, 0x01), 0x01))\n      and\n      sub(shl(0x60, 0x01), 0x01)\n      dup7\n      and\n      or\n      swap1\n      sstore\n        /* \"kcbreward.sol\":13187:13224  Approval(msg.sender, spender, amount) */\n      swap1\n      mload\n        /* \"kcbreward.sol\":13131:13162  allowances[msg.sender][spender] */\n      swap1\n      swap2\n        /* \"kcbreward.sol\":13142:13152  msg.sender */\n      swap1\n        /* \"kcbreward.sol\":13187:13224  Approval(msg.sender, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap1\n      tag_149\n      swap1\n        /* \"kcbreward.sol\":13131:13171  allowances[msg.sender][spender] = amount */\n      dup6\n      swap1\n        /* \"kcbreward.sol\":13187:13224  Approval(msg.sender, spender, amount) */\n      jump(tag_150)\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"kcbreward.sol\":13241:13245  true */\n      0x01\n        /* \"kcbreward.sol\":13234:13245  return true */\n      swap2\n      pop\n      pop\n        /* \"kcbreward.sol\":12846:13252  function approve(address spender, uint rawAmount) external returns (bool) {... */\n    tag_144:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"kcbreward.sol\":6939:6981  uint public totalSupply = 1_000_000_000e18 */\n    tag_51:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"kcbreward.sol\":8251:8373  bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n    tag_55:\n        /* \"kcbreward.sol\":8293:8373  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      mload(0x40)\n      tag_151\n      swap1\n      jump(tag_152)\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"kcbreward.sol\":8251:8373  bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      dup2\n      jump\t// out\n        /* \"kcbreward.sol\":15853:16509  function transferFrom(address src, address dst, uint rawAmount) external returns (bool) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":16015:16030  allowances[src] */\n      dup4\n      and\n        /* \"kcbreward.sol\":15935:15939  bool */\n      0x00\n        /* \"kcbreward.sol\":16015:16030  allowances[src] */\n      swap1\n      dup2\n      mstore\n        /* \"kcbreward.sol\":16015:16025  allowances */\n      0x03\n        /* \"kcbreward.sol\":16015:16030  allowances[src] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"kcbreward.sol\":15969:15979  msg.sender */\n      caller\n        /* \"kcbreward.sol\":16015:16039  allowances[src][spender] */\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n      sload\n        /* \"kcbreward.sol\":16065:16122  safe96(rawAmount, \"Uni::approve: amount exceeds 96 bits\") */\n      dup3\n      mload\n      0x60\n      dup2\n      add\n      swap1\n      swap4\n      mstore\n      0x24\n      dup1\n      dup5\n      mstore\n        /* \"kcbreward.sol\":15969:15979  msg.sender */\n      swap2\n      swap4\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"kcbreward.sol\":16015:16039  allowances[src][spender] */\n      swap1\n      swap2\n      and\n      swap3\n        /* \"kcbreward.sol\":15935:15939  bool */\n      dup6\n      swap3\n        /* \"kcbreward.sol\":16065:16122  safe96(rawAmount, \"Uni::approve: amount exceeds 96 bits\") */\n      tag_154\n      swap3\n        /* \"kcbreward.sol\":16072:16081  rawAmount */\n      dup9\n      swap3\n        /* \"kcbreward.sol\":16065:16122  safe96(rawAmount, \"Uni::approve: amount exceeds 96 bits\") */\n      swap2\n      swap1\n      data_cb3e128da7f3f16c83a901cce3ab145c66bad45a0cd648091fecc9964ebf42fe\n      swap1\n      dup4\n      add\n      codecopy\n        /* \"kcbreward.sol\":16065:16071  safe96 */\n      tag_148\n        /* \"kcbreward.sol\":16065:16122  safe96(rawAmount, \"Uni::approve: amount exceeds 96 bits\") */\n      jump\t// in\n    tag_154:\n        /* \"kcbreward.sol\":16049:16122  uint96 amount = safe96(rawAmount, \"Uni::approve: amount exceeds 96 bits\") */\n      swap1\n      pop\n        /* \"kcbreward.sol\":16148:16151  src */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":16137:16151  spender != src */\n      and\n        /* \"kcbreward.sol\":16137:16144  spender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":16137:16151  spender != src */\n      and\n      eq\n      iszero\n        /* \"kcbreward.sol\":16137:16185  spender != src && spenderAllowance != uint96(-1) */\n      dup1\n      iszero\n      tag_155\n      jumpi\n      pop\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"kcbreward.sol\":16155:16185  spenderAllowance != uint96(-1) */\n      dup3\n      dup2\n      and\n      eq\n      iszero\n        /* \"kcbreward.sol\":16137:16185  spender != src && spenderAllowance != uint96(-1) */\n    tag_155:\n        /* \"kcbreward.sol\":16133:16438  if (spender != src && spenderAllowance != uint96(-1)) {... */\n      iszero\n      tag_156\n      jumpi\n        /* \"kcbreward.sol\":16201:16220  uint96 newAllowance */\n      0x00\n        /* \"kcbreward.sol\":16223:16318  sub96(spenderAllowance, amount, \"Uni::transferFrom: transfer amount exceeds spender allowance\") */\n      tag_157\n        /* \"kcbreward.sol\":16229:16245  spenderAllowance */\n      dup4\n        /* \"kcbreward.sol\":16247:16253  amount */\n      dup4\n        /* \"kcbreward.sol\":16223:16318  sub96(spenderAllowance, amount, \"Uni::transferFrom: transfer amount exceeds spender allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x3c\n      dup2\n      mstore\n      0x20\n      add\n      data_136758788d48ec4d9744ba8c2136a9c9406d6c92cd4a81eff0de4942b636db13\n      0x3c\n      swap2\n      codecopy\n        /* \"kcbreward.sol\":16223:16228  sub96 */\n      tag_158\n        /* \"kcbreward.sol\":16223:16318  sub96(spenderAllowance, amount, \"Uni::transferFrom: transfer amount exceeds spender allowance\") */\n      jump\t// in\n    tag_157:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":16332:16347  allowances[src] */\n      dup10\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"kcbreward.sol\":16332:16342  allowances */\n      0x03\n        /* \"kcbreward.sol\":16332:16347  allowances[src] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"kcbreward.sol\":16332:16356  allowances[src][spender] */\n      swap5\n      dup11\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      swap1\n      swap2\n      mstore\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"kcbreward.sol\":16332:16371  allowances[src][spender] = newAllowance */\n      dup1\n      sload\n      not(sub(shl(0x60, 0x01), 0x01))\n      and\n      sub(shl(0x60, 0x01), 0x01)\n      dup7\n      and\n      or\n      swap1\n      sstore\n        /* \"kcbreward.sol\":16391:16427  Approval(src, spender, newAllowance) */\n      mload\n        /* \"kcbreward.sol\":16332:16371  allowances[src][spender] = newAllowance */\n      swap3\n      swap4\n      pop\n        /* \"kcbreward.sol\":16332:16356  allowances[src][spender] */\n      swap1\n      swap2\n        /* \"kcbreward.sol\":16391:16427  Approval(src, spender, newAllowance) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap1\n      tag_159\n      swap1\n        /* \"kcbreward.sol\":16332:16371  allowances[src][spender] = newAllowance */\n      dup6\n      swap1\n        /* \"kcbreward.sol\":16391:16427  Approval(src, spender, newAllowance) */\n      jump(tag_150)\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"kcbreward.sol\":16133:16438  if (spender != src && spenderAllowance != uint96(-1)) {... */\n      pop\n    tag_156:\n        /* \"kcbreward.sol\":16448:16481  _transferTokens(src, dst, amount) */\n      tag_160\n        /* \"kcbreward.sol\":16464:16467  src */\n      dup8\n        /* \"kcbreward.sol\":16469:16472  dst */\n      dup8\n        /* \"kcbreward.sol\":16474:16480  amount */\n      dup4\n        /* \"kcbreward.sol\":16448:16463  _transferTokens */\n      tag_161\n        /* \"kcbreward.sol\":16448:16481  _transferTokens(src, dst, amount) */\n      jump\t// in\n    tag_160:\n        /* \"kcbreward.sol\":16498:16502  true */\n      0x01\n        /* \"kcbreward.sol\":16491:16502  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"kcbreward.sol\":15853:16509  function transferFrom(address src, address dst, uint rawAmount) external returns (bool) {... */\n    tag_153:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"kcbreward.sol\":8668:8805  bytes32 public constant PERMIT_TYPEHASH = keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\") */\n    tag_64:\n        /* \"kcbreward.sol\":8710:8805  keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\") */\n      mload(0x40)\n      tag_151\n      swap1\n      jump(tag_163)\n        /* \"kcbreward.sol\":7143:7174  uint public mintingAllowedAfter */\n    tag_67:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"kcbreward.sol\":6843:6878  uint8 public constant decimals = 18 */\n    tag_70:\n        /* \"kcbreward.sol\":6876:6878  18 */\n      0x12\n        /* \"kcbreward.sol\":6843:6878  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"kcbreward.sol\":10909:11948  function mint(address dst, uint rawAmount) external {... */\n    tag_75:\n        /* \"kcbreward.sol\":10993:10999  minter */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"kcbreward.sol\":10979:10989  msg.sender */\n      caller\n        /* \"kcbreward.sol\":10979:10999  msg.sender == minter */\n      eq\n        /* \"kcbreward.sol\":10971:11039  require(msg.sender == minter, \"Uni::mint: only the minter can mint\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      jump(tag_167)\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n        /* \"kcbreward.sol\":11076:11095  mintingAllowedAfter */\n      sload(0x02)\n        /* \"kcbreward.sol\":11057:11072  block.timestamp */\n      timestamp\n        /* \"kcbreward.sol\":11057:11095  block.timestamp >= mintingAllowedAfter */\n      lt\n      iszero\n        /* \"kcbreward.sol\":11049:11134  require(block.timestamp >= mintingAllowedAfter, \"Uni::mint: minting not allowed yet\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      jump(tag_170)\n    tag_168:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":11152:11169  dst != address(0) */\n      dup3\n      and\n        /* \"kcbreward.sol\":11144:11220  require(dst != address(0), \"Uni::mint: cannot transfer to the zero address\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      jump(tag_173)\n    tag_171:\n        /* \"kcbreward.sol\":11280:11334  SafeMath.add(block.timestamp, minimumTimeBetweenMints) */\n      tag_174\n        /* \"kcbreward.sol\":11293:11308  block.timestamp */\n      timestamp\n        /* \"kcbreward.sol\":7273:7285  1 days * 365 */\n      0x01e13380\n        /* \"kcbreward.sol\":11280:11292  SafeMath.add */\n      tag_175\n        /* \"kcbreward.sol\":11280:11334  SafeMath.add(block.timestamp, minimumTimeBetweenMints) */\n      jump\t// in\n    tag_174:\n        /* \"kcbreward.sol\":11258:11277  mintingAllowedAfter */\n      0x02\n        /* \"kcbreward.sol\":11258:11334  mintingAllowedAfter = SafeMath.add(block.timestamp, minimumTimeBetweenMints) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"kcbreward.sol\":11372:11385  uint96 amount */\n      0x00\n        /* \"kcbreward.sol\":11388:11442  safe96(rawAmount, \"Uni::mint: amount exceeds 96 bits\") */\n      tag_176\n        /* \"kcbreward.sol\":11395:11404  rawAmount */\n      dup3\n        /* \"kcbreward.sol\":11388:11442  safe96(rawAmount, \"Uni::mint: amount exceeds 96 bits\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      data_bcb6733e7ac2aee3c3602ee664d4b3cb251e429df5c7e9148d412d0b60f07b16\n      0x21\n      swap2\n      codecopy\n        /* \"kcbreward.sol\":11388:11394  safe96 */\n      tag_148\n        /* \"kcbreward.sol\":11388:11442  safe96(rawAmount, \"Uni::mint: amount exceeds 96 bits\") */\n      jump\t// in\n    tag_176:\n        /* \"kcbreward.sol\":11372:11442  uint96 amount = safe96(rawAmount, \"Uni::mint: amount exceeds 96 bits\") */\n      swap1\n      pop\n        /* \"kcbreward.sol\":11470:11523  SafeMath.div(SafeMath.mul(totalSupply, mintCap), 100) */\n      tag_177\n        /* \"kcbreward.sol\":11483:11517  SafeMath.mul(totalSupply, mintCap) */\n      tag_178\n        /* \"kcbreward.sol\":11496:11507  totalSupply */\n      sload(0x00)\n        /* \"kcbreward.sol\":7409:7410  2 */\n      0x02\n        /* \"kcbreward.sol\":11483:11517  SafeMath.mul(totalSupply, mintCap) */\n      0xff\n      and\n        /* \"kcbreward.sol\":11483:11495  SafeMath.mul */\n      tag_179\n        /* \"kcbreward.sol\":11483:11517  SafeMath.mul(totalSupply, mintCap) */\n      jump\t// in\n    tag_178:\n        /* \"kcbreward.sol\":11519:11522  100 */\n      0x64\n        /* \"kcbreward.sol\":11470:11482  SafeMath.div */\n      tag_180\n        /* \"kcbreward.sol\":11470:11523  SafeMath.div(SafeMath.mul(totalSupply, mintCap), 100) */\n      jump\t// in\n    tag_177:\n        /* \"kcbreward.sol\":11460:11466  amount */\n      dup2\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"kcbreward.sol\":11460:11523  amount <= SafeMath.div(SafeMath.mul(totalSupply, mintCap), 100) */\n      and\n      gt\n      iszero\n        /* \"kcbreward.sol\":11452:11556  require(amount <= SafeMath.div(SafeMath.mul(totalSupply, mintCap), 100), \"Uni::mint: exceeded mint cap\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      jump(tag_183)\n    tag_181:\n        /* \"kcbreward.sol\":11580:11663  safe96(SafeMath.add(totalSupply, amount), \"Uni::mint: totalSupply exceeds 96 bits\") */\n      tag_184\n        /* \"kcbreward.sol\":11587:11620  SafeMath.add(totalSupply, amount) */\n      tag_185\n        /* \"kcbreward.sol\":11600:11611  totalSupply */\n      sload(0x00)\n        /* \"kcbreward.sol\":11613:11619  amount */\n      dup4\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"kcbreward.sol\":11587:11620  SafeMath.add(totalSupply, amount) */\n      and\n        /* \"kcbreward.sol\":11587:11599  SafeMath.add */\n      tag_175\n        /* \"kcbreward.sol\":11587:11620  SafeMath.add(totalSupply, amount) */\n      jump\t// in\n    tag_185:\n        /* \"kcbreward.sol\":11580:11663  safe96(SafeMath.add(totalSupply, amount), \"Uni::mint: totalSupply exceeds 96 bits\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_1ef2347f5dbb97e8eb7bc1442a128a1c6e65386b013257fe2b8ad95aaaa96ab8\n      0x26\n      swap2\n      codecopy\n        /* \"kcbreward.sol\":11580:11586  safe96 */\n      tag_148\n        /* \"kcbreward.sol\":11580:11663  safe96(SafeMath.add(totalSupply, amount), \"Uni::mint: totalSupply exceeds 96 bits\") */\n      jump\t// in\n    tag_184:\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"kcbreward.sol\":11566:11663  totalSupply = safe96(SafeMath.add(totalSupply, amount), \"Uni::mint: totalSupply exceeds 96 bits\") */\n      swap1\n      dup2\n      and\n        /* \"kcbreward.sol\":11566:11577  totalSupply */\n      0x00\n        /* \"kcbreward.sol\":11566:11663  totalSupply = safe96(SafeMath.add(totalSupply, amount), \"Uni::mint: totalSupply exceeds 96 bits\") */\n      swap1\n      dup2\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":11744:11757  balances[dst] */\n      dup6\n      and\n      dup2\n      mstore\n        /* \"kcbreward.sol\":11744:11752  balances */\n      0x04\n        /* \"kcbreward.sol\":11744:11757  balances[dst] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n      sload\n        /* \"kcbreward.sol\":11738:11806  add96(balances[dst], amount, \"Uni::mint: transfer amount overflows\") */\n      dup3\n      mload\n      0x60\n      dup2\n      add\n      swap1\n      swap4\n      mstore\n      0x24\n      dup1\n      dup5\n      mstore\n      tag_186\n      swap5\n        /* \"kcbreward.sol\":11744:11757  balances[dst] */\n      swap2\n      swap1\n      swap2\n      and\n      swap3\n        /* \"kcbreward.sol\":11759:11765  amount */\n      dup6\n      swap3\n        /* \"kcbreward.sol\":11738:11806  add96(balances[dst], amount, \"Uni::mint: transfer amount overflows\") */\n      swap1\n      swap2\n      swap1\n      data_0ab5eae08d50cc345c58c2d7d67f9034a98d0a88dd540314c408c39a8dcec01d\n      swap1\n      dup4\n      add\n      codecopy\n        /* \"kcbreward.sol\":11738:11743  add96 */\n      tag_187\n        /* \"kcbreward.sol\":11738:11806  add96(balances[dst], amount, \"Uni::mint: transfer amount overflows\") */\n      jump\t// in\n    tag_186:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":11722:11735  balances[dst] */\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"kcbreward.sol\":11722:11730  balances */\n      0x04\n        /* \"kcbreward.sol\":11722:11735  balances[dst] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"kcbreward.sol\":11722:11806  balances[dst] = add96(balances[dst], amount, \"Uni::mint: transfer amount overflows\") */\n      dup1\n      sload\n      not(sub(shl(0x60, 0x01), 0x01))\n      and\n      sub(shl(0x60, 0x01), 0x01)\n      swap6\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      or\n      swap1\n      swap4\n      sstore\n        /* \"kcbreward.sol\":11821:11854  Transfer(address(0), dst, amount) */\n      swap2\n      mload\n        /* \"kcbreward.sol\":11722:11735  balances[dst] */\n      swap1\n      swap2\n      swap1\n        /* \"kcbreward.sol\":11821:11854  Transfer(address(0), dst, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n      tag_188\n      swap1\n        /* \"kcbreward.sol\":11847:11853  amount */\n      dup6\n      swap1\n        /* \"kcbreward.sol\":11821:11854  Transfer(address(0), dst, amount) */\n      jump(tag_150)\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":11918:11932  delegates[dst] */\n      dup1\n      dup5\n      and\n        /* \"kcbreward.sol\":11914:11915  0 */\n      0x00\n        /* \"kcbreward.sol\":11918:11932  delegates[dst] */\n      swap1\n      dup2\n      mstore\n        /* \"kcbreward.sol\":11918:11927  delegates */\n      0x05\n        /* \"kcbreward.sol\":11918:11932  delegates[dst] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"kcbreward.sol\":11891:11941  _moveDelegates(address(0), delegates[dst], amount) */\n      tag_189\n      swap3\n        /* \"kcbreward.sol\":11918:11932  delegates[dst] */\n      and\n        /* \"kcbreward.sol\":11934:11940  amount */\n      dup4\n        /* \"kcbreward.sol\":11891:11905  _moveDelegates */\n      tag_190\n        /* \"kcbreward.sol\":11891:11941  _moveDelegates(address(0), delegates[dst], amount) */\n      jump\t// in\n    tag_189:\n        /* \"kcbreward.sol\":10909:11948  function mint(address dst, uint rawAmount) external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"kcbreward.sol\":7716:7761  mapping (address => address) public delegates */\n    tag_79:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\t// out\n        /* \"kcbreward.sol\":7224:7285  uint32 public constant minimumTimeBetweenMints = 1 days * 365 */\n    tag_82:\n        /* \"kcbreward.sol\":7273:7285  1 days * 365 */\n      0x01e13380\n        /* \"kcbreward.sol\":7224:7285  uint32 public constant minimumTimeBetweenMints = 1 days * 365 */\n      dup2\n      jump\t// out\n        /* \"kcbreward.sol\":16651:16751  function delegate(address delegatee) public {... */\n    tag_87:\n        /* \"kcbreward.sol\":16712:16744  _delegate(msg.sender, delegatee) */\n      tag_192\n        /* \"kcbreward.sol\":16722:16732  msg.sender */\n      caller\n        /* \"kcbreward.sol\":16734:16743  delegatee */\n      dup3\n        /* \"kcbreward.sol\":16712:16721  _delegate */\n      tag_193\n        /* \"kcbreward.sol\":16712:16744  _delegate(msg.sender, delegatee) */\n      jump\t// in\n    tag_192:\n        /* \"kcbreward.sol\":16651:16751  function delegate(address delegatee) public {... */\n      pop\n      jump\t// out\n        /* \"kcbreward.sol\":8132:8181  mapping (address => uint32) public numCheckpoints */\n    tag_90:\n      mstore(0x20, 0x07)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"kcbreward.sol\":14957:15063  function balanceOf(address account) external view returns (uint) {... */\n    tag_94:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":15039:15056  balances[account] */\n      and\n        /* \"kcbreward.sol\":15016:15020  uint */\n      0x00\n        /* \"kcbreward.sol\":15039:15056  balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"kcbreward.sol\":15039:15047  balances */\n      0x04\n        /* \"kcbreward.sol\":15039:15056  balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0x60, 0x01), 0x01)\n      and\n      swap1\n        /* \"kcbreward.sol\":14957:15063  function balanceOf(address account) external view returns (uint) {... */\n      jump\t// out\n        /* \"kcbreward.sol\":7377:7410  uint8 public constant mintCap = 2 */\n    tag_97:\n        /* \"kcbreward.sol\":7409:7410  2 */\n      0x02\n        /* \"kcbreward.sol\":7377:7410  uint8 public constant mintCap = 2 */\n      dup2\n      jump\t// out\n        /* \"kcbreward.sol\":18786:19971  function getPriorVotes(address account, uint blockNumber) public view returns (uint96) {... */\n    tag_101:\n        /* \"kcbreward.sol\":18865:18871  uint96 */\n      0x00\n        /* \"kcbreward.sol\":18905:18917  block.number */\n      number\n        /* \"kcbreward.sol\":18891:18902  blockNumber */\n      dup3\n        /* \"kcbreward.sol\":18891:18917  blockNumber < block.number */\n      lt\n        /* \"kcbreward.sol\":18883:18960  require(blockNumber < block.number, \"Uni::getPriorVotes: not yet determined\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      jump(tag_198)\n    tag_196:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":18993:19016  numCheckpoints[account] */\n      dup4\n      and\n        /* \"kcbreward.sol\":18971:18990  uint32 nCheckpoints */\n      0x00\n        /* \"kcbreward.sol\":18993:19016  numCheckpoints[account] */\n      swap1\n      dup2\n      mstore\n        /* \"kcbreward.sol\":18993:19007  numCheckpoints */\n      0x07\n        /* \"kcbreward.sol\":18993:19016  numCheckpoints[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xffffffff\n      and\n        /* \"kcbreward.sol\":19030:19047  nCheckpoints == 0 */\n      dup1\n        /* \"kcbreward.sol\":19026:19082  if (nCheckpoints == 0) {... */\n      tag_199\n      jumpi\n        /* \"kcbreward.sol\":19070:19071  0 */\n      0x00\n        /* \"kcbreward.sol\":19063:19071  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_144)\n        /* \"kcbreward.sol\":19026:19082  if (nCheckpoints == 0) {... */\n    tag_199:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":19139:19159  checkpoints[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"kcbreward.sol\":19139:19150  checkpoints */\n      0x06\n        /* \"kcbreward.sol\":19139:19159  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"kcbreward.sol\":19139:19177  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      not(0x00)\n        /* \"kcbreward.sol\":19160:19176  nCheckpoints - 1 */\n      dup7\n      add\n        /* \"kcbreward.sol\":19139:19177  checkpoints[account][nCheckpoints - 1] */\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"kcbreward.sol\":19139:19187  checkpoints[account][nCheckpoints - 1].fromBlock */\n      sload\n      and\n        /* \"kcbreward.sol\":19139:19202  checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber */\n      dup4\n      lt\n        /* \"kcbreward.sol\":19135:19280  if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {... */\n      tag_200\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":19225:19245  checkpoints[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"kcbreward.sol\":19225:19236  checkpoints */\n      0x06\n        /* \"kcbreward.sol\":19225:19245  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      not(0x00)\n        /* \"kcbreward.sol\":19246:19262  nCheckpoints - 1 */\n      swap5\n      swap1\n      swap5\n      add\n        /* \"kcbreward.sol\":19225:19263  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"kcbreward.sol\":19225:19269  checkpoints[account][nCheckpoints - 1].votes */\n      sload\n      shl(0x20, 0x01)\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n      swap1\n      pop\n        /* \"kcbreward.sol\":19218:19269  return checkpoints[account][nCheckpoints - 1].votes */\n      jump(tag_144)\n        /* \"kcbreward.sol\":19135:19280  if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {... */\n    tag_200:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":19338:19358  checkpoints[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"kcbreward.sol\":19338:19349  checkpoints */\n      0x06\n        /* \"kcbreward.sol\":19338:19358  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"kcbreward.sol\":19338:19361  checkpoints[account][0] */\n      dup4\n      dup1\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"kcbreward.sol\":19338:19371  checkpoints[account][0].fromBlock */\n      sload\n        /* \"kcbreward.sol\":19338:19361  checkpoints[account][0] */\n      0xffffffff\n        /* \"kcbreward.sol\":19338:19371  checkpoints[account][0].fromBlock */\n      and\n        /* \"kcbreward.sol\":19338:19385  checkpoints[account][0].fromBlock > blockNumber */\n      dup4\n      lt\n        /* \"kcbreward.sol\":19334:19420  if (checkpoints[account][0].fromBlock > blockNumber) {... */\n      iszero\n      tag_201\n      jumpi\n        /* \"kcbreward.sol\":19408:19409  0 */\n      0x00\n        /* \"kcbreward.sol\":19401:19409  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_144)\n        /* \"kcbreward.sol\":19334:19420  if (checkpoints[account][0].fromBlock > blockNumber) {... */\n    tag_201:\n        /* \"kcbreward.sol\":19430:19442  uint32 lower */\n      0x00\n      not(0x00)\n        /* \"kcbreward.sol\":19471:19487  nCheckpoints - 1 */\n      dup3\n      add\n        /* \"kcbreward.sol\":19497:19915  while (upper > lower) {... */\n    tag_202:\n        /* \"kcbreward.sol\":19512:19517  lower */\n      dup2\n        /* \"kcbreward.sol\":19504:19517  upper > lower */\n      0xffffffff\n      and\n        /* \"kcbreward.sol\":19504:19509  upper */\n      dup2\n        /* \"kcbreward.sol\":19504:19517  upper > lower */\n      0xffffffff\n      and\n      gt\n        /* \"kcbreward.sol\":19497:19915  while (upper > lower) {... */\n      iszero\n      tag_203\n      jumpi\n        /* \"kcbreward.sol\":19575:19576  2 */\n      0x02\n        /* \"kcbreward.sol\":19558:19571  upper - lower */\n      dup3\n      dup3\n      sub\n        /* \"kcbreward.sol\":19557:19576  (upper - lower) / 2 */\n      0xffffffff\n      and\n      div\n        /* \"kcbreward.sol\":19549:19576  upper - (upper - lower) / 2 */\n      dup2\n      sub\n        /* \"kcbreward.sol\":19617:19637  Checkpoint memory cp */\n      tag_205\n      tag_206\n      jump\t// in\n    tag_205:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":19640:19660  checkpoints[account] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"kcbreward.sol\":19640:19651  checkpoints */\n      0x06\n        /* \"kcbreward.sol\":19640:19660  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"kcbreward.sol\":19640:19668  checkpoints[account][center] */\n      0xffffffff\n      dup6\n      dup2\n      and\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"kcbreward.sol\":19617:19668  Checkpoint memory cp = checkpoints[account][center] */\n      dup2\n      mload\n      dup1\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n      sload\n      swap3\n      dup4\n      and\n      dup1\n      dup3\n      mstore\n      shl(0x20, 0x01)\n      swap1\n      swap4\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap1\n        /* \"kcbreward.sol\":19686:19713  cp.fromBlock == blockNumber */\n      dup8\n      eq\n        /* \"kcbreward.sol\":19682:19905  if (cp.fromBlock == blockNumber) {... */\n      iszero\n      tag_207\n      jumpi\n        /* \"kcbreward.sol\":19740:19748  cp.votes */\n      0x20\n      add\n      mload\n      swap5\n      pop\n        /* \"kcbreward.sol\":19733:19748  return cp.votes */\n      tag_144\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"kcbreward.sol\":19682:19905  if (cp.fromBlock == blockNumber) {... */\n    tag_207:\n        /* \"kcbreward.sol\":19773:19785  cp.fromBlock */\n      dup1\n      mload\n        /* \"kcbreward.sol\":19773:19799  cp.fromBlock < blockNumber */\n      0xffffffff\n      and\n      dup8\n      gt\n        /* \"kcbreward.sol\":19769:19905  if (cp.fromBlock < blockNumber) {... */\n      iszero\n      tag_209\n      jumpi\n        /* \"kcbreward.sol\":19827:19833  center */\n      dup2\n        /* \"kcbreward.sol\":19819:19833  lower = center */\n      swap4\n      pop\n        /* \"kcbreward.sol\":19769:19905  if (cp.fromBlock < blockNumber) {... */\n      jump(tag_210)\n    tag_209:\n        /* \"kcbreward.sol\":19889:19890  1 */\n      0x01\n        /* \"kcbreward.sol\":19880:19886  center */\n      dup3\n        /* \"kcbreward.sol\":19880:19890  center - 1 */\n      sub\n        /* \"kcbreward.sol\":19872:19890  upper = center - 1 */\n      swap3\n      pop\n        /* \"kcbreward.sol\":19769:19905  if (cp.fromBlock < blockNumber) {... */\n    tag_210:\n        /* \"kcbreward.sol\":19497:19915  while (upper > lower) {... */\n      pop\n      pop\n      jump(tag_202)\n    tag_203:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":19931:19951  checkpoints[account] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"kcbreward.sol\":19931:19942  checkpoints */\n      0x06\n        /* \"kcbreward.sol\":19931:19951  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"kcbreward.sol\":19931:19958  checkpoints[account][lower] */\n      0xffffffff\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"kcbreward.sol\":19931:19964  checkpoints[account][lower].votes */\n      sload\n      sub(shl(0x60, 0x01), 0x01)\n      shl(0x20, 0x01)\n      swap1\n      swap2\n      div\n      and\n      swap2\n      pop\n      pop\n        /* \"kcbreward.sol\":18786:19971  function getPriorVotes(address account, uint blockNumber) public view returns (uint96) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"kcbreward.sol\":8883:8922  mapping (address => uint) public nonces */\n    tag_106:\n      mstore(0x20, 0x08)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"kcbreward.sol\":6746:6783  string public constant symbol = \"UNI\" */\n    tag_109:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xe8, 0x554e49)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"kcbreward.sol\":15319:15552  function transfer(address dst, uint rawAmount) external returns (bool) {... */\n    tag_113:\n        /* \"kcbreward.sol\":15384:15388  bool */\n      0x00\n        /* \"kcbreward.sol\":15400:15413  uint96 amount */\n      dup1\n        /* \"kcbreward.sol\":15416:15474  safe96(rawAmount, \"Uni::transfer: amount exceeds 96 bits\") */\n      tag_212\n        /* \"kcbreward.sol\":15423:15432  rawAmount */\n      dup4\n        /* \"kcbreward.sol\":15416:15474  safe96(rawAmount, \"Uni::transfer: amount exceeds 96 bits\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_9bc67db7413f33b8f7a9995149809b7b3a4a83b5ba884084bea06cfb35986555\n      0x25\n      swap2\n      codecopy\n        /* \"kcbreward.sol\":15416:15422  safe96 */\n      tag_148\n        /* \"kcbreward.sol\":15416:15474  safe96(rawAmount, \"Uni::transfer: amount exceeds 96 bits\") */\n      jump\t// in\n    tag_212:\n        /* \"kcbreward.sol\":15400:15474  uint96 amount = safe96(rawAmount, \"Uni::transfer: amount exceeds 96 bits\") */\n      swap1\n      pop\n        /* \"kcbreward.sol\":15484:15524  _transferTokens(msg.sender, dst, amount) */\n      tag_213\n        /* \"kcbreward.sol\":15500:15510  msg.sender */\n      caller\n        /* \"kcbreward.sol\":15512:15515  dst */\n      dup6\n        /* \"kcbreward.sol\":15517:15523  amount */\n      dup4\n        /* \"kcbreward.sol\":15484:15499  _transferTokens */\n      tag_161\n        /* \"kcbreward.sol\":15484:15524  _transferTokens(msg.sender, dst, amount) */\n      jump\t// in\n    tag_213:\n      pop\n        /* \"kcbreward.sol\":15541:15545  true */\n      0x01\n      swap4\n        /* \"kcbreward.sol\":15319:15552  function transfer(address dst, uint rawAmount) external returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"kcbreward.sol\":18145:18364  function getCurrentVotes(address account) external view returns (uint96) {... */\n    tag_117:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":18250:18273  numCheckpoints[account] */\n      dup2\n      and\n        /* \"kcbreward.sol\":18210:18216  uint96 */\n      0x00\n        /* \"kcbreward.sol\":18250:18273  numCheckpoints[account] */\n      swap1\n      dup2\n      mstore\n        /* \"kcbreward.sol\":18250:18264  numCheckpoints */\n      0x07\n        /* \"kcbreward.sol\":18250:18273  numCheckpoints[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xffffffff\n      and\n        /* \"kcbreward.sol\":18290:18306  nCheckpoints > 0 */\n      dup1\n        /* \"kcbreward.sol\":18290:18357  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      tag_215\n      jumpi\n        /* \"kcbreward.sol\":18356:18357  0 */\n      0x00\n        /* \"kcbreward.sol\":18290:18357  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      jump(tag_153)\n    tag_215:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":18309:18329  checkpoints[account] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"kcbreward.sol\":18309:18320  checkpoints */\n      0x06\n        /* \"kcbreward.sol\":18309:18329  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      not(0x00)\n        /* \"kcbreward.sol\":18330:18346  nCheckpoints - 1 */\n      dup6\n      add\n        /* \"kcbreward.sol\":18309:18347  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"kcbreward.sol\":18309:18353  checkpoints[account][nCheckpoints - 1].votes */\n      sload\n      shl(0x20, 0x01)\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"kcbreward.sol\":18283:18357  return nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      swap4\n        /* \"kcbreward.sol\":18145:18364  function getCurrentVotes(address account) external view returns (uint96) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"kcbreward.sol\":17174:17951  function delegateBySig(address delegatee, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s) public {... */\n    tag_122:\n        /* \"kcbreward.sol\":17289:17312  bytes32 domainSeparator */\n      0x00\n        /* \"kcbreward.sol\":8293:8373  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      mload(0x40)\n      tag_218\n      swap1\n      jump(tag_152)\n    tag_218:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      dup3\n      keccak256\n        /* \"kcbreward.sol\":17369:17373  name */\n      dup3\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x07\n      dup3\n      mstore\n      shl(0xcc, 0x0556e697377617)\n      0x20\n      swap1\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"kcbreward.sol\":17353:17375  keccak256(bytes(name)) */\n      0x99c45e8ee5dde061ced9c812089094fbd28a020e7e37f2851198887e5ca64985\n        /* \"kcbreward.sol\":17377:17389  getChainId() */\n      tag_219\n        /* \"kcbreward.sol\":17377:17387  getChainId */\n      tag_220\n        /* \"kcbreward.sol\":17377:17389  getChainId() */\n      jump\t// in\n    tag_219:\n        /* \"kcbreward.sol\":17399:17403  this */\n      address\n        /* \"kcbreward.sol\":17325:17405  abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this)) */\n      add(0x20, mload(0x40))\n      tag_221\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      jump(tag_222)\n    tag_221:\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"kcbreward.sol\":17325:17405  abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this)) */\n      swap1\n      0x40\n      mstore\n        /* \"kcbreward.sol\":17315:17406  keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"kcbreward.sol\":17289:17406  bytes32 domainSeparator = keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this))) */\n      swap1\n      pop\n        /* \"kcbreward.sol\":17416:17434  bytes32 structHash */\n      0x00\n        /* \"kcbreward.sol\":8510:8581  keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      mload(0x40)\n      tag_223\n      swap1\n      jump(tag_224)\n    tag_223:\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      dup2\n      keccak256\n        /* \"kcbreward.sol\":17447:17504  abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry) */\n      tag_225\n      swap2\n        /* \"kcbreward.sol\":17479:17488  delegatee */\n      dup11\n      swap1\n        /* \"kcbreward.sol\":17490:17495  nonce */\n      dup11\n      swap1\n        /* \"kcbreward.sol\":17497:17503  expiry */\n      dup11\n      swap1\n        /* \"kcbreward.sol\":17447:17504  abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry) */\n      0x20\n      add\n      jump(tag_226)\n    tag_225:\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"kcbreward.sol\":17447:17504  abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry) */\n      swap1\n      0x40\n      mstore\n        /* \"kcbreward.sol\":17437:17505  keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"kcbreward.sol\":17416:17505  bytes32 structHash = keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry)) */\n      swap1\n      pop\n        /* \"kcbreward.sol\":17515:17529  bytes32 digest */\n      0x00\n        /* \"kcbreward.sol\":17571:17586  domainSeparator */\n      dup3\n        /* \"kcbreward.sol\":17588:17598  structHash */\n      dup3\n        /* \"kcbreward.sol\":17542:17599  abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash) */\n      add(0x20, mload(0x40))\n      tag_227\n      swap3\n      swap2\n      swap1\n      jump(tag_228)\n    tag_227:\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"kcbreward.sol\":17542:17599  abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash) */\n      swap1\n      0x40\n      mstore\n        /* \"kcbreward.sol\":17532:17600  keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"kcbreward.sol\":17515:17600  bytes32 digest = keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash)) */\n      swap1\n      pop\n        /* \"kcbreward.sol\":17610:17627  address signatory */\n      0x00\n        /* \"kcbreward.sol\":17630:17656  ecrecover(digest, v, r, s) */\n      0x01\n        /* \"kcbreward.sol\":17640:17646  digest */\n      dup3\n        /* \"kcbreward.sol\":17648:17649  v */\n      dup9\n        /* \"kcbreward.sol\":17651:17652  r */\n      dup9\n        /* \"kcbreward.sol\":17654:17655  s */\n      dup9\n        /* \"kcbreward.sol\":17630:17656  ecrecover(digest, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      tag_229\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      jump(tag_230)\n    tag_229:\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_231\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_231:\n      pop\n      pop\n        /* \"kcbreward.sol\":17630:17656  ecrecover(digest, v, r, s) */\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":17674:17697  signatory != address(0) */\n      dup2\n      and\n        /* \"kcbreward.sol\":17666:17739  require(signatory != address(0), \"Uni::delegateBySig: invalid signature\") */\n      tag_232\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      jump(tag_234)\n    tag_232:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":17766:17783  nonces[signatory] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"kcbreward.sol\":17766:17772  nonces */\n      0x08\n        /* \"kcbreward.sol\":17766:17783  nonces[signatory] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"kcbreward.sol\":17766:17785  nonces[signatory]++ */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      swap1\n      swap2\n      sstore\n        /* \"kcbreward.sol\":17757:17785  nonce == nonces[signatory]++ */\n      dup10\n      eq\n        /* \"kcbreward.sol\":17749:17823  require(nonce == nonces[signatory]++, \"Uni::delegateBySig: invalid nonce\") */\n      tag_235\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      jump(tag_237)\n    tag_235:\n        /* \"kcbreward.sol\":17848:17854  expiry */\n      dup8\n        /* \"kcbreward.sol\":17841:17844  now */\n      timestamp\n        /* \"kcbreward.sol\":17841:17854  now <= expiry */\n      gt\n      iszero\n        /* \"kcbreward.sol\":17833:17896  require(now <= expiry, \"Uni::delegateBySig: signature expired\") */\n      tag_238\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      jump(tag_240)\n    tag_238:\n        /* \"kcbreward.sol\":17913:17944  _delegate(signatory, delegatee) */\n      tag_241\n        /* \"kcbreward.sol\":17923:17932  signatory */\n      dup2\n        /* \"kcbreward.sol\":17934:17943  delegatee */\n      dup12\n        /* \"kcbreward.sol\":17913:17922  _delegate */\n      tag_193\n        /* \"kcbreward.sol\":17913:17944  _delegate(signatory, delegatee) */\n      jump\t// in\n    tag_241:\n        /* \"kcbreward.sol\":17906:17944  return _delegate(signatory, delegatee) */\n      pop\n      pop\n      pop\n      pop\n        /* \"kcbreward.sol\":17174:17951  function delegateBySig(address delegatee, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s) public {... */\n    tag_217:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"kcbreward.sol\":13730:14761  function permit(address owner, address spender, uint rawAmount, uint deadline, uint8 v, bytes32 r, bytes32 s) external {... */\n    tag_126:\n        /* \"kcbreward.sol\":13859:13872  uint96 amount */\n      0x00\n      not(0x00)\n        /* \"kcbreward.sol\":13886:13895  rawAmount */\n      dup7\n        /* \"kcbreward.sol\":13886:13907  rawAmount == uint(-1) */\n      eq\n        /* \"kcbreward.sol\":13882:14049  if (rawAmount == uint(-1)) {... */\n      iszero\n      tag_243\n      jumpi\n      pop\n      not(0x00)\n      jump(tag_244)\n    tag_243:\n        /* \"kcbreward.sol\":13982:14038  safe96(rawAmount, \"Uni::permit: amount exceeds 96 bits\") */\n      tag_245\n        /* \"kcbreward.sol\":13989:13998  rawAmount */\n      dup7\n        /* \"kcbreward.sol\":13982:14038  safe96(rawAmount, \"Uni::permit: amount exceeds 96 bits\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      data_58da0b91010307ee6a63257c5283618928105e355857d8f79cf7e017ad7082f4\n      0x23\n      swap2\n      codecopy\n        /* \"kcbreward.sol\":13982:13988  safe96 */\n      tag_148\n        /* \"kcbreward.sol\":13982:14038  safe96(rawAmount, \"Uni::permit: amount exceeds 96 bits\") */\n      jump\t// in\n    tag_245:\n        /* \"kcbreward.sol\":13973:14038  amount = safe96(rawAmount, \"Uni::permit: amount exceeds 96 bits\") */\n      swap1\n      pop\n        /* \"kcbreward.sol\":13882:14049  if (rawAmount == uint(-1)) {... */\n    tag_244:\n        /* \"kcbreward.sol\":14059:14082  bytes32 domainSeparator */\n      0x00\n        /* \"kcbreward.sol\":8293:8373  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      mload(0x40)\n      tag_246\n      swap1\n      jump(tag_152)\n    tag_246:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      dup3\n      keccak256\n        /* \"kcbreward.sol\":14139:14143  name */\n      dup3\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x07\n      dup3\n      mstore\n      shl(0xcc, 0x0556e697377617)\n      0x20\n      swap1\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"kcbreward.sol\":14123:14145  keccak256(bytes(name)) */\n      0x99c45e8ee5dde061ced9c812089094fbd28a020e7e37f2851198887e5ca64985\n        /* \"kcbreward.sol\":14147:14159  getChainId() */\n      tag_247\n        /* \"kcbreward.sol\":14147:14157  getChainId */\n      tag_220\n        /* \"kcbreward.sol\":14147:14159  getChainId() */\n      jump\t// in\n    tag_247:\n        /* \"kcbreward.sol\":14169:14173  this */\n      address\n        /* \"kcbreward.sol\":14095:14175  abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this)) */\n      add(0x20, mload(0x40))\n      tag_248\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      jump(tag_222)\n    tag_248:\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"kcbreward.sol\":14095:14175  abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this)) */\n      swap1\n      0x40\n      mstore\n        /* \"kcbreward.sol\":14085:14176  keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"kcbreward.sol\":14059:14176  bytes32 domainSeparator = keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this))) */\n      swap1\n      pop\n        /* \"kcbreward.sol\":14186:14204  bytes32 structHash */\n      0x00\n        /* \"kcbreward.sol\":8710:8805  keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\") */\n      mload(0x40)\n      tag_249\n      swap1\n      jump(tag_163)\n    tag_249:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      dup3\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":14272:14285  nonces[owner] */\n      dup14\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"kcbreward.sol\":14272:14278  nonces */\n      0x08\n        /* \"kcbreward.sol\":14272:14285  nonces[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      swap3\n      swap1\n      keccak256\n        /* \"kcbreward.sol\":14272:14287  nonces[owner]++ */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      swap1\n      swap2\n      sstore\n        /* \"kcbreward.sol\":14217:14298  abi.encode(PERMIT_TYPEHASH, owner, spender, rawAmount, nonces[owner]++, deadline) */\n      tag_250\n      swap4\n        /* \"kcbreward.sol\":8710:8805  keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\") */\n      swap2\n      swap3\n        /* \"kcbreward.sol\":14245:14250  owner */\n      dup15\n      swap3\n        /* \"kcbreward.sol\":14252:14259  spender */\n      dup15\n      swap3\n        /* \"kcbreward.sol\":14261:14270  rawAmount */\n      dup15\n      swap3\n        /* \"kcbreward.sol\":14272:14287  nonces[owner]++ */\n      swap1\n      swap2\n        /* \"kcbreward.sol\":14289:14297  deadline */\n      dup15\n      swap2\n        /* \"kcbreward.sol\":14217:14298  abi.encode(PERMIT_TYPEHASH, owner, spender, rawAmount, nonces[owner]++, deadline) */\n      add\n      jump(tag_251)\n    tag_250:\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"kcbreward.sol\":14217:14298  abi.encode(PERMIT_TYPEHASH, owner, spender, rawAmount, nonces[owner]++, deadline) */\n      swap1\n      0x40\n      mstore\n        /* \"kcbreward.sol\":14207:14299  keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, rawAmount, nonces[owner]++, deadline)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"kcbreward.sol\":14186:14299  bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, rawAmount, nonces[owner]++, deadline)) */\n      swap1\n      pop\n        /* \"kcbreward.sol\":14309:14323  bytes32 digest */\n      0x00\n        /* \"kcbreward.sol\":14365:14380  domainSeparator */\n      dup3\n        /* \"kcbreward.sol\":14382:14392  structHash */\n      dup3\n        /* \"kcbreward.sol\":14336:14393  abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash) */\n      add(0x20, mload(0x40))\n      tag_252\n      swap3\n      swap2\n      swap1\n      jump(tag_228)\n    tag_252:\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"kcbreward.sol\":14336:14393  abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash) */\n      swap1\n      0x40\n      mstore\n        /* \"kcbreward.sol\":14326:14394  keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"kcbreward.sol\":14309:14394  bytes32 digest = keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash)) */\n      swap1\n      pop\n        /* \"kcbreward.sol\":14404:14421  address signatory */\n      0x00\n        /* \"kcbreward.sol\":14424:14450  ecrecover(digest, v, r, s) */\n      0x01\n        /* \"kcbreward.sol\":14434:14440  digest */\n      dup3\n        /* \"kcbreward.sol\":14442:14443  v */\n      dup10\n        /* \"kcbreward.sol\":14445:14446  r */\n      dup10\n        /* \"kcbreward.sol\":14448:14449  s */\n      dup10\n        /* \"kcbreward.sol\":14424:14450  ecrecover(digest, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      tag_253\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      jump(tag_230)\n    tag_253:\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_254\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_254:\n      pop\n      pop\n        /* \"kcbreward.sol\":14424:14450  ecrecover(digest, v, r, s) */\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":14468:14491  signatory != address(0) */\n      dup2\n      and\n        /* \"kcbreward.sol\":14460:14526  require(signatory != address(0), \"Uni::permit: invalid signature\") */\n      tag_255\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      jump(tag_257)\n    tag_255:\n        /* \"kcbreward.sol\":14557:14562  owner */\n      dup12\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":14544:14562  signatory == owner */\n      and\n        /* \"kcbreward.sol\":14544:14553  signatory */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":14544:14562  signatory == owner */\n      and\n      eq\n        /* \"kcbreward.sol\":14536:14592  require(signatory == owner, \"Uni::permit: unauthorized\") */\n      tag_258\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      jump(tag_260)\n    tag_258:\n        /* \"kcbreward.sol\":14617:14625  deadline */\n      dup9\n        /* \"kcbreward.sol\":14610:14613  now */\n      timestamp\n        /* \"kcbreward.sol\":14610:14625  now <= deadline */\n      gt\n      iszero\n        /* \"kcbreward.sol\":14602:14660  require(now <= deadline, \"Uni::permit: signature expired\") */\n      tag_261\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      jump(tag_263)\n    tag_261:\n        /* \"kcbreward.sol\":14700:14706  amount */\n      dup5\n        /* \"kcbreward.sol\":14671:14681  allowances */\n      0x03\n        /* \"kcbreward.sol\":14671:14688  allowances[owner] */\n      0x00\n        /* \"kcbreward.sol\":14682:14687  owner */\n      dup15\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":14671:14688  allowances[owner] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"kcbreward.sol\":14671:14697  allowances[owner][spender] */\n      0x00\n        /* \"kcbreward.sol\":14689:14696  spender */\n      dup14\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":14671:14697  allowances[owner][spender] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"kcbreward.sol\":14671:14706  allowances[owner][spender] = amount */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0x60, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0x60, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"kcbreward.sol\":14738:14745  spender */\n      dup11\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":14722:14754  Approval(owner, spender, amount) */\n      and\n        /* \"kcbreward.sol\":14731:14736  owner */\n      dup13\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":14722:14754  Approval(owner, spender, amount) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"kcbreward.sol\":14747:14753  amount */\n      dup8\n        /* \"kcbreward.sol\":14722:14754  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_264\n      swap2\n      swap1\n      jump(tag_150)\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"kcbreward.sol\":13730:14761  function permit(address owner, address spender, uint rawAmount, uint deadline, uint8 v, bytes32 r, bytes32 s) external {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"kcbreward.sol\":12244:12378  function allowance(address account, address spender) external view returns (uint) {... */\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":12343:12362  allowances[account] */\n      swap2\n      dup3\n      and\n        /* \"kcbreward.sol\":12320:12324  uint */\n      0x00\n        /* \"kcbreward.sol\":12343:12362  allowances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"kcbreward.sol\":12343:12353  allowances */\n      0x03\n        /* \"kcbreward.sol\":12343:12362  allowances[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"kcbreward.sol\":12343:12371  allowances[account][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      sub(shl(0x60, 0x01), 0x01)\n      and\n      swap1\n        /* \"kcbreward.sol\":12244:12378  function allowance(address account, address spender) external view returns (uint) {... */\n      jump\t// out\n        /* \"kcbreward.sol\":8464:8581  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n    tag_133:\n        /* \"kcbreward.sol\":8510:8581  keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      mload(0x40)\n      tag_151\n      swap1\n      jump(tag_224)\n        /* \"kcbreward.sol\":7996:8066  mapping (address => mapping (uint32 => Checkpoint)) public checkpoints */\n    tag_138:\n      0x06\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      0xffffffff\n      dup2\n      and\n      swap1\n      shl(0x20, 0x01)\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n      dup3\n      jump\t// out\n        /* \"kcbreward.sol\":10514:10741  function setMinter(address minter_) external {... */\n    tag_143:\n        /* \"kcbreward.sol\":10591:10597  minter */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"kcbreward.sol\":10577:10587  msg.sender */\n      caller\n        /* \"kcbreward.sol\":10577:10597  msg.sender == minter */\n      eq\n        /* \"kcbreward.sol\":10569:10663  require(msg.sender == minter, \"Uni::setMinter: only the minter can change the minter address\") */\n      tag_268\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      jump(tag_270)\n    tag_268:\n        /* \"kcbreward.sol\":10692:10698  minter */\n      sload(0x01)\n        /* \"kcbreward.sol\":10678:10708  MinterChanged(minter, minter_) */\n      mload(0x40)\n      0x3b0007eb941cf645526cbb3a4fdaecda9d28ce4843167d9263b536a1f1edc0f6\n      swap2\n      tag_271\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":10692:10698  minter */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"kcbreward.sol\":10700:10707  minter_ */\n      dup5\n      swap1\n        /* \"kcbreward.sol\":10678:10708  MinterChanged(minter, minter_) */\n      jump(tag_272)\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"kcbreward.sol\":10718:10724  minter */\n      0x01\n        /* \"kcbreward.sol\":10718:10734  minter = minter_ */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"kcbreward.sol\":10514:10741  function setMinter(address minter_) external {... */\n      jump\t// out\n        /* \"kcbreward.sol\":22671:22829  function safe96(uint n, string memory errorMessage) internal pure returns (uint96) {... */\n    tag_148:\n        /* \"kcbreward.sol\":22746:22752  uint96 */\n      0x00\n        /* \"kcbreward.sol\":22783:22795  errorMessage */\n      dup2\n      shl(0x60, 0x01)\n        /* \"kcbreward.sol\":22772:22781  n < 2**96 */\n      dup5\n      lt\n        /* \"kcbreward.sol\":22764:22796  require(n < 2**96, errorMessage) */\n      tag_274\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap2\n      swap1\n      jump(tag_39)\n    tag_274:\n      pop\n        /* \"kcbreward.sol\":22820:22821  n */\n      swap2\n      swap3\n        /* \"kcbreward.sol\":22671:22829  function safe96(uint n, string memory errorMessage) internal pure returns (uint96) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"kcbreward.sol\":23025:23187  function sub96(uint96 a, uint96 b, string memory errorMessage) internal pure returns (uint96) {... */\n    tag_158:\n        /* \"kcbreward.sol\":23111:23117  uint96 */\n      0x00\n        /* \"kcbreward.sol\":23142:23143  a */\n      dup4\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"kcbreward.sol\":23137:23143  b <= a */\n      and\n        /* \"kcbreward.sol\":23137:23138  b */\n      dup4\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"kcbreward.sol\":23137:23143  b <= a */\n      and\n      gt\n      iszero\n        /* \"kcbreward.sol\":23145:23157  errorMessage */\n      dup3\n        /* \"kcbreward.sol\":23129:23158  require(b <= a, errorMessage) */\n      swap1\n      tag_278\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap2\n      swap1\n      jump(tag_39)\n    tag_278:\n      pop\n      pop\n      pop\n        /* \"kcbreward.sol\":23175:23180  a - b */\n      swap1\n      sub\n      swap1\n        /* \"kcbreward.sol\":23025:23187  function sub96(uint96 a, uint96 b, string memory errorMessage) internal pure returns (uint96) {... */\n      jump\t// out\n        /* \"kcbreward.sol\":20350:20951  function _transferTokens(address src, address dst, uint96 amount) internal {... */\n    tag_161:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":20443:20460  src != address(0) */\n      dup4\n      and\n        /* \"kcbreward.sol\":20435:20524  require(src != address(0), \"Uni::_transferTokens: cannot transfer from the zero address\") */\n      tag_281\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      jump(tag_283)\n    tag_281:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":20542:20559  dst != address(0) */\n      dup3\n      and\n        /* \"kcbreward.sol\":20534:20621  require(dst != address(0), \"Uni::_transferTokens: cannot transfer to the zero address\") */\n      tag_284\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      jump(tag_286)\n    tag_284:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":20654:20667  balances[src] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"kcbreward.sol\":20654:20662  balances */\n      0x04\n        /* \"kcbreward.sol\":20654:20667  balances[src] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n      sload\n        /* \"kcbreward.sol\":20648:20733  sub96(balances[src], amount, \"Uni::_transferTokens: transfer amount exceeds balance\") */\n      dup3\n      mload\n      0x60\n      dup2\n      add\n      swap1\n      swap4\n      mstore\n      0x35\n      dup1\n      dup5\n      mstore\n      tag_287\n      swap4\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"kcbreward.sol\":20654:20667  balances[src] */\n      swap1\n      swap3\n      and\n      swap3\n        /* \"kcbreward.sol\":20669:20675  amount */\n      dup6\n      swap3\n        /* \"kcbreward.sol\":20648:20733  sub96(balances[src], amount, \"Uni::_transferTokens: transfer amount exceeds balance\") */\n      swap2\n      swap1\n      data_3230ba2cb739b33589720b8a5892642694535e935234939514431ff16907d24a\n      swap1\n      dup4\n      add\n      codecopy\n        /* \"kcbreward.sol\":20648:20653  sub96 */\n      tag_158\n        /* \"kcbreward.sol\":20648:20733  sub96(balances[src], amount, \"Uni::_transferTokens: transfer amount exceeds balance\") */\n      jump\t// in\n    tag_287:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":20632:20645  balances[src] */\n      dup5\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"kcbreward.sol\":20632:20640  balances */\n      0x04\n        /* \"kcbreward.sol\":20632:20645  balances[src] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"kcbreward.sol\":20632:20733  balances[src] = sub96(balances[src], amount, \"Uni::_transferTokens: transfer amount exceeds balance\") */\n      dup1\n      sload\n      not(sub(shl(0x60, 0x01), 0x01))\n      and\n      sub(shl(0x60, 0x01), 0x01)\n      swap7\n      dup8\n      and\n      or\n      swap1\n      sstore\n        /* \"kcbreward.sol\":20765:20778  balances[dst] */\n      swap3\n      dup7\n      and\n      dup3\n      mstore\n      swap1\n      dup3\n      swap1\n      keccak256\n      sload\n        /* \"kcbreward.sol\":20759:20838  add96(balances[dst], amount, \"Uni::_transferTokens: transfer amount overflows\") */\n      dup3\n      mload\n      0x60\n      dup2\n      add\n      swap1\n      swap4\n      mstore\n      0x2f\n      dup1\n      dup5\n      mstore\n      tag_288\n      swap5\n        /* \"kcbreward.sol\":20765:20778  balances[dst] */\n      swap2\n      swap1\n      swap2\n      and\n      swap3\n        /* \"kcbreward.sol\":20780:20786  amount */\n      dup6\n      swap3\n        /* \"kcbreward.sol\":20759:20838  add96(balances[dst], amount, \"Uni::_transferTokens: transfer amount overflows\") */\n      swap1\n      swap2\n      swap1\n      data_f838ee8b15c3d07740bb9b304b8146ec63bb435a7703825b5e6424ee2072674a\n      swap1\n      dup4\n      add\n      codecopy\n        /* \"kcbreward.sol\":20759:20764  add96 */\n      tag_187\n        /* \"kcbreward.sol\":20759:20838  add96(balances[dst], amount, \"Uni::_transferTokens: transfer amount overflows\") */\n      jump\t// in\n    tag_288:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":20743:20756  balances[dst] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"kcbreward.sol\":20743:20751  balances */\n      0x04\n        /* \"kcbreward.sol\":20743:20756  balances[dst] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"kcbreward.sol\":20743:20838  balances[dst] = add96(balances[dst], amount, \"Uni::_transferTokens: transfer amount overflows\") */\n      dup1\n      sload\n      not(sub(shl(0x60, 0x01), 0x01))\n      and\n      sub(shl(0x60, 0x01), 0x01)\n      swap6\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      or\n      swap1\n      swap4\n      sstore\n        /* \"kcbreward.sol\":20853:20879  Transfer(src, dst, amount) */\n      swap2\n      mload\n      swap1\n      dup6\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n      tag_289\n      swap1\n        /* \"kcbreward.sol\":20872:20878  amount */\n      dup6\n      swap1\n        /* \"kcbreward.sol\":20853:20879  Transfer(src, dst, amount) */\n      jump(tag_150)\n    tag_289:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":20905:20919  delegates[src] */\n      dup1\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"kcbreward.sol\":20905:20914  delegates */\n      0x05\n        /* \"kcbreward.sol\":20905:20919  delegates[src] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sload\n        /* \"kcbreward.sol\":20921:20935  delegates[dst] */\n      dup6\n      dup5\n      and\n      dup4\n      mstore\n      swap2\n      keccak256\n      sload\n        /* \"kcbreward.sol\":20890:20944  _moveDelegates(delegates[src], delegates[dst], amount) */\n      tag_189\n      swap3\n        /* \"kcbreward.sol\":20905:20919  delegates[src] */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"kcbreward.sol\":20921:20935  delegates[dst] */\n      and\n        /* \"kcbreward.sol\":20937:20943  amount */\n      dup4\n        /* \"kcbreward.sol\":20890:20904  _moveDelegates */\n      tag_190\n        /* \"kcbreward.sol\":20890:20944  _moveDelegates(delegates[src], delegates[dst], amount) */\n      jump\t// in\n        /* \"kcbreward.sol\":1127:1303  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_175:\n        /* \"kcbreward.sol\":1185:1192  uint256 */\n      0x00\n        /* \"kcbreward.sol\":1216:1221  a + b */\n      dup3\n      dup3\n      add\n        /* \"kcbreward.sol\":1239:1245  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"kcbreward.sol\":1231:1277  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      jump(tag_294)\n        /* \"kcbreward.sol\":2824:3283  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_179:\n        /* \"kcbreward.sol\":2882:2889  uint256 */\n      0x00\n        /* \"kcbreward.sol\":3123:3129  a == 0 */\n      dup3\n        /* \"kcbreward.sol\":3119:3164  if (a == 0) {... */\n      tag_296\n      jumpi\n      pop\n        /* \"kcbreward.sol\":3152:3153  0 */\n      0x00\n        /* \"kcbreward.sol\":3145:3153  return 0 */\n      jump(tag_144)\n        /* \"kcbreward.sol\":3119:3164  if (a == 0) {... */\n    tag_296:\n        /* \"kcbreward.sol\":3186:3191  a * b */\n      dup3\n      dup3\n      mul\n        /* \"kcbreward.sol\":3190:3191  b */\n      dup3\n        /* \"kcbreward.sol\":3186:3187  a */\n      dup5\n        /* \"kcbreward.sol\":3186:3191  a * b */\n      dup3\n        /* \"kcbreward.sol\":3186:3187  a */\n      dup2\n        /* \"kcbreward.sol\":3209:3214  c / a */\n      tag_297\n      jumpi\n      invalid\n    tag_297:\n      div\n        /* \"kcbreward.sol\":3209:3219  c / a == b */\n      eq\n        /* \"kcbreward.sol\":3201:3257  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      jump(tag_300)\n        /* \"kcbreward.sol\":4435:4565  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_180:\n        /* \"kcbreward.sol\":4493:4500  uint256 */\n      0x00\n        /* \"kcbreward.sol\":4519:4558  div(a, b, \"SafeMath: division by zero\") */\n      tag_153\n        /* \"kcbreward.sol\":4523:4524  a */\n      dup4\n        /* \"kcbreward.sol\":4526:4527  b */\n      dup4\n        /* \"kcbreward.sol\":4519:4558  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"kcbreward.sol\":4519:4522  div */\n      tag_303\n        /* \"kcbreward.sol\":4519:4558  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n        /* \"kcbreward.sol\":22835:23019  function add96(uint96 a, uint96 b, string memory errorMessage) internal pure returns (uint96) {... */\n    tag_187:\n        /* \"kcbreward.sol\":22921:22927  uint96 */\n      0x00\n        /* \"kcbreward.sol\":22950:22955  a + b */\n      dup4\n      dup4\n      add\n        /* \"kcbreward.sol\":22981:22993  errorMessage */\n      dup3\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"kcbreward.sol\":22973:22979  c >= a */\n      dup1\n      dup8\n      and\n      swap1\n      dup4\n      and\n      lt\n      iszero\n        /* \"kcbreward.sol\":22965:22994  require(c >= a, errorMessage) */\n      tag_305\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap2\n      swap1\n      jump(tag_39)\n    tag_305:\n      pop\n        /* \"kcbreward.sol\":23011:23012  c */\n      swap5\n        /* \"kcbreward.sol\":22835:23019  function add96(uint96 a, uint96 b, string memory errorMessage) internal pure returns (uint96) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"kcbreward.sol\":20957:21878  function _moveDelegates(address srcRep, address dstRep, uint96 amount) internal {... */\n    tag_190:\n        /* \"kcbreward.sol\":21061:21067  dstRep */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":21051:21067  srcRep != dstRep */\n      and\n        /* \"kcbreward.sol\":21051:21057  srcRep */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":21051:21067  srcRep != dstRep */\n      and\n      eq\n      iszero\n        /* \"kcbreward.sol\":21051:21081  srcRep != dstRep && amount > 0 */\n      dup1\n      iszero\n      tag_308\n      jumpi\n      pop\n        /* \"kcbreward.sol\":21080:21081  0 */\n      0x00\n        /* \"kcbreward.sol\":21071:21077  amount */\n      dup2\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"kcbreward.sol\":21071:21081  amount > 0 */\n      and\n      gt\n        /* \"kcbreward.sol\":21051:21081  srcRep != dstRep && amount > 0 */\n    tag_308:\n        /* \"kcbreward.sol\":21047:21872  if (srcRep != dstRep && amount > 0) {... */\n      iszero\n      tag_189\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":21101:21121  srcRep != address(0) */\n      dup4\n      and\n      iszero\n        /* \"kcbreward.sol\":21097:21473  if (srcRep != address(0)) {... */\n      tag_310\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":21160:21182  numCheckpoints[srcRep] */\n      dup4\n      and\n        /* \"kcbreward.sol\":21141:21157  uint32 srcRepNum */\n      0x00\n        /* \"kcbreward.sol\":21160:21182  numCheckpoints[srcRep] */\n      swap1\n      dup2\n      mstore\n        /* \"kcbreward.sol\":21160:21174  numCheckpoints */\n      0x07\n        /* \"kcbreward.sol\":21160:21182  numCheckpoints[srcRep] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xffffffff\n      and\n      swap1\n        /* \"kcbreward.sol\":21219:21232  srcRepNum > 0 */\n      dup2\n        /* \"kcbreward.sol\":21219:21279  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      tag_311\n      jumpi\n        /* \"kcbreward.sol\":21278:21279  0 */\n      0x00\n        /* \"kcbreward.sol\":21219:21279  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      jump(tag_312)\n    tag_311:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":21235:21254  checkpoints[srcRep] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"kcbreward.sol\":21235:21246  checkpoints */\n      0x06\n        /* \"kcbreward.sol\":21235:21254  checkpoints[srcRep] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      not(0x00)\n        /* \"kcbreward.sol\":21255:21268  srcRepNum - 1 */\n      dup7\n      add\n        /* \"kcbreward.sol\":21235:21269  checkpoints[srcRep][srcRepNum - 1] */\n      0xffffffff\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"kcbreward.sol\":21235:21275  checkpoints[srcRep][srcRepNum - 1].votes */\n      sload\n      shl(0x20, 0x01)\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"kcbreward.sol\":21219:21279  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n    tag_312:\n        /* \"kcbreward.sol\":21200:21279  uint96 srcRepOld = srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      swap1\n      pop\n        /* \"kcbreward.sol\":21297:21313  uint96 srcRepNew */\n      0x00\n        /* \"kcbreward.sol\":21316:21383  sub96(srcRepOld, amount, \"Uni::_moveVotes: vote amount underflows\") */\n      tag_313\n        /* \"kcbreward.sol\":21322:21331  srcRepOld */\n      dup3\n        /* \"kcbreward.sol\":21333:21339  amount */\n      dup6\n        /* \"kcbreward.sol\":21316:21383  sub96(srcRepOld, amount, \"Uni::_moveVotes: vote amount underflows\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      data_8f9e8e1e6816d4a772d233c08b8292a576126f7dbd1d9b7cd30ef07f7c3d78d2\n      0x27\n      swap2\n      codecopy\n        /* \"kcbreward.sol\":21316:21321  sub96 */\n      tag_158\n        /* \"kcbreward.sol\":21316:21383  sub96(srcRepOld, amount, \"Uni::_moveVotes: vote amount underflows\") */\n      jump\t// in\n    tag_313:\n        /* \"kcbreward.sol\":21297:21383  uint96 srcRepNew = sub96(srcRepOld, amount, \"Uni::_moveVotes: vote amount underflows\") */\n      swap1\n      pop\n        /* \"kcbreward.sol\":21401:21458  _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew) */\n      tag_314\n        /* \"kcbreward.sol\":21418:21424  srcRep */\n      dup7\n        /* \"kcbreward.sol\":21426:21435  srcRepNum */\n      dup5\n        /* \"kcbreward.sol\":21437:21446  srcRepOld */\n      dup5\n        /* \"kcbreward.sol\":21448:21457  srcRepNew */\n      dup5\n        /* \"kcbreward.sol\":21401:21417  _writeCheckpoint */\n      tag_315\n        /* \"kcbreward.sol\":21401:21458  _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew) */\n      jump\t// in\n    tag_314:\n        /* \"kcbreward.sol\":21097:21473  if (srcRep != address(0)) {... */\n      pop\n      pop\n      pop\n    tag_310:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":21491:21511  dstRep != address(0) */\n      dup3\n      and\n      iszero\n        /* \"kcbreward.sol\":21487:21862  if (dstRep != address(0)) {... */\n      tag_189\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":21550:21572  numCheckpoints[dstRep] */\n      dup3\n      and\n        /* \"kcbreward.sol\":21531:21547  uint32 dstRepNum */\n      0x00\n        /* \"kcbreward.sol\":21550:21572  numCheckpoints[dstRep] */\n      swap1\n      dup2\n      mstore\n        /* \"kcbreward.sol\":21550:21564  numCheckpoints */\n      0x07\n        /* \"kcbreward.sol\":21550:21572  numCheckpoints[dstRep] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xffffffff\n      and\n      swap1\n        /* \"kcbreward.sol\":21609:21622  dstRepNum > 0 */\n      dup2\n        /* \"kcbreward.sol\":21609:21669  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      tag_317\n      jumpi\n        /* \"kcbreward.sol\":21668:21669  0 */\n      0x00\n        /* \"kcbreward.sol\":21609:21669  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      jump(tag_318)\n    tag_317:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":21625:21644  checkpoints[dstRep] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"kcbreward.sol\":21625:21636  checkpoints */\n      0x06\n        /* \"kcbreward.sol\":21625:21644  checkpoints[dstRep] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      not(0x00)\n        /* \"kcbreward.sol\":21645:21658  dstRepNum - 1 */\n      dup7\n      add\n        /* \"kcbreward.sol\":21625:21659  checkpoints[dstRep][dstRepNum - 1] */\n      0xffffffff\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"kcbreward.sol\":21625:21665  checkpoints[dstRep][dstRepNum - 1].votes */\n      sload\n      shl(0x20, 0x01)\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"kcbreward.sol\":21609:21669  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n    tag_318:\n        /* \"kcbreward.sol\":21590:21669  uint96 dstRepOld = dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      swap1\n      pop\n        /* \"kcbreward.sol\":21687:21703  uint96 dstRepNew */\n      0x00\n        /* \"kcbreward.sol\":21706:21772  add96(dstRepOld, amount, \"Uni::_moveVotes: vote amount overflows\") */\n      tag_319\n        /* \"kcbreward.sol\":21712:21721  dstRepOld */\n      dup3\n        /* \"kcbreward.sol\":21723:21729  amount */\n      dup6\n        /* \"kcbreward.sol\":21706:21772  add96(dstRepOld, amount, \"Uni::_moveVotes: vote amount overflows\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_5c6c891434a3c5951db59f5fe43d566b04bf54e07bc444b7f9f72601e608dc42\n      0x26\n      swap2\n      codecopy\n        /* \"kcbreward.sol\":21706:21711  add96 */\n      tag_187\n        /* \"kcbreward.sol\":21706:21772  add96(dstRepOld, amount, \"Uni::_moveVotes: vote amount overflows\") */\n      jump\t// in\n    tag_319:\n        /* \"kcbreward.sol\":21687:21772  uint96 dstRepNew = add96(dstRepOld, amount, \"Uni::_moveVotes: vote amount overflows\") */\n      swap1\n      pop\n        /* \"kcbreward.sol\":21790:21847  _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew) */\n      tag_217\n        /* \"kcbreward.sol\":21807:21813  dstRep */\n      dup6\n        /* \"kcbreward.sol\":21815:21824  dstRepNum */\n      dup5\n        /* \"kcbreward.sol\":21826:21835  dstRepOld */\n      dup5\n        /* \"kcbreward.sol\":21837:21846  dstRepNew */\n      dup5\n        /* \"kcbreward.sol\":21790:21806  _writeCheckpoint */\n      tag_315\n        /* \"kcbreward.sol\":21790:21847  _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew) */\n      jump\t// in\n        /* \"kcbreward.sol\":19977:20344  function _delegate(address delegator, address delegatee) internal {... */\n    tag_193:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":20079:20099  delegates[delegator] */\n      dup1\n      dup4\n      and\n        /* \"kcbreward.sol\":20053:20076  address currentDelegate */\n      0x00\n        /* \"kcbreward.sol\":20079:20099  delegates[delegator] */\n      dup2\n      dup2\n      mstore\n        /* \"kcbreward.sol\":20079:20088  delegates */\n      0x05\n        /* \"kcbreward.sol\":20079:20099  delegates[delegator] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      dup1\n      sload\n        /* \"kcbreward.sol\":20135:20143  balances */\n      0x04\n        /* \"kcbreward.sol\":20135:20154  balances[delegator] */\n      dup5\n      mstore\n      dup3\n      dup7\n      keccak256\n      sload\n        /* \"kcbreward.sol\":20164:20184  delegates[delegator] */\n      swap5\n      swap1\n      swap4\n      mstore\n        /* \"kcbreward.sol\":20164:20196  delegates[delegator] = delegatee */\n      dup8\n      dup8\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup5\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"kcbreward.sol\":20212:20266  DelegateChanged(delegator, currentDelegate, delegatee) */\n      swap1\n      mload\n        /* \"kcbreward.sol\":20079:20099  delegates[delegator] */\n      swap2\n      swap1\n      swap6\n      and\n      swap5\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"kcbreward.sol\":20135:20154  balances[delegator] */\n      swap1\n      swap3\n      and\n      swap4\n        /* \"kcbreward.sol\":20164:20196  delegates[delegator] = delegatee */\n      swap2\n      swap3\n        /* \"kcbreward.sol\":20079:20099  delegates[delegator] */\n      dup6\n      swap3\n      swap2\n        /* \"kcbreward.sol\":20212:20266  DelegateChanged(delegator, currentDelegate, delegatee) */\n      0x3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f\n      swap2\n        /* \"kcbreward.sol\":20053:20076  address currentDelegate */\n      swap1\n        /* \"kcbreward.sol\":20212:20266  DelegateChanged(delegator, currentDelegate, delegatee) */\n      log4\n        /* \"kcbreward.sol\":20277:20337  _moveDelegates(currentDelegate, delegatee, delegatorBalance) */\n      tag_322\n        /* \"kcbreward.sol\":20292:20307  currentDelegate */\n      dup3\n        /* \"kcbreward.sol\":20309:20318  delegatee */\n      dup5\n        /* \"kcbreward.sol\":20320:20336  delegatorBalance */\n      dup4\n        /* \"kcbreward.sol\":20277:20291  _moveDelegates */\n      tag_190\n        /* \"kcbreward.sol\":20277:20337  _moveDelegates(currentDelegate, delegatee, delegatorBalance) */\n      jump\t// in\n    tag_322:\n        /* \"kcbreward.sol\":19977:20344  function _delegate(address delegator, address delegatee) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"kcbreward.sol\":23193:23342  function getChainId() internal pure returns (uint) {... */\n    tag_220:\n        /* \"kcbreward.sol\":23301:23310  chainid() */\n      chainid\n        /* \"kcbreward.sol\":23193:23342  function getChainId() internal pure returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"kcbreward.sol\":5040:5378  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_303:\n        /* \"kcbreward.sol\":5126:5133  uint256 */\n      0x00\n        /* \"kcbreward.sol\":5226:5238  errorMessage */\n      dup2\n        /* \"kcbreward.sol\":5219:5224  b > 0 */\n      dup4\n        /* \"kcbreward.sol\":5211:5239  require(b > 0, errorMessage) */\n      tag_325\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap2\n      swap1\n      jump(tag_39)\n    tag_325:\n      pop\n        /* \"kcbreward.sol\":5249:5258  uint256 c */\n      0x00\n        /* \"kcbreward.sol\":5265:5266  b */\n      dup4\n        /* \"kcbreward.sol\":5261:5262  a */\n      dup6\n        /* \"kcbreward.sol\":5261:5266  a / b */\n      dup2\n      tag_327\n      jumpi\n      invalid\n    tag_327:\n      div\n      swap6\n        /* \"kcbreward.sol\":5040:5378  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"kcbreward.sol\":21884:22501  function _writeCheckpoint(address delegatee, uint32 nCheckpoints, uint96 oldVotes, uint96 newVotes) internal {... */\n    tag_315:\n        /* \"kcbreward.sol\":22001:22019  uint32 blockNumber */\n      0x00\n        /* \"kcbreward.sol\":22022:22097  safe32(block.number, \"Uni::_writeCheckpoint: block number exceeds 32 bits\") */\n      tag_329\n        /* \"kcbreward.sol\":22029:22041  block.number */\n      number\n        /* \"kcbreward.sol\":22022:22097  safe32(block.number, \"Uni::_writeCheckpoint: block number exceeds 32 bits\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x33\n      dup2\n      mstore\n      0x20\n      add\n      data_66157ef8d926a3327823fecd4ce53edfcb6533c37c90dc98acfb91e4f2854725\n      0x33\n      swap2\n      codecopy\n        /* \"kcbreward.sol\":22022:22028  safe32 */\n      tag_330\n        /* \"kcbreward.sol\":22022:22097  safe32(block.number, \"Uni::_writeCheckpoint: block number exceeds 32 bits\") */\n      jump\t// in\n    tag_329:\n        /* \"kcbreward.sol\":22001:22097  uint32 blockNumber = safe32(block.number, \"Uni::_writeCheckpoint: block number exceeds 32 bits\") */\n      swap1\n      pop\n        /* \"kcbreward.sol\":22125:22126  0 */\n      0x00\n        /* \"kcbreward.sol\":22110:22122  nCheckpoints */\n      dup5\n        /* \"kcbreward.sol\":22110:22126  nCheckpoints > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"kcbreward.sol\":22110:22195  nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      dup1\n      iszero\n      tag_331\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":22130:22152  checkpoints[delegatee] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"kcbreward.sol\":22130:22141  checkpoints */\n      0x06\n        /* \"kcbreward.sol\":22130:22152  checkpoints[delegatee] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"kcbreward.sol\":22130:22195  checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      0xffffffff\n      not(0x00)\n        /* \"kcbreward.sol\":22153:22169  nCheckpoints - 1 */\n      dup10\n      add\n        /* \"kcbreward.sol\":22130:22170  checkpoints[delegatee][nCheckpoints - 1] */\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"kcbreward.sol\":22130:22180  checkpoints[delegatee][nCheckpoints - 1].fromBlock */\n      sload\n        /* \"kcbreward.sol\":22130:22195  checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      dup3\n      dup3\n      and\n        /* \"kcbreward.sol\":22130:22180  checkpoints[delegatee][nCheckpoints - 1].fromBlock */\n      swap2\n      and\n        /* \"kcbreward.sol\":22130:22195  checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      eq\n        /* \"kcbreward.sol\":22110:22195  nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n    tag_331:\n        /* \"kcbreward.sol\":22106:22430  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {... */\n      iszero\n      tag_332\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":22209:22231  checkpoints[delegatee] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"kcbreward.sol\":22209:22220  checkpoints */\n      0x06\n        /* \"kcbreward.sol\":22209:22231  checkpoints[delegatee] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      not(0x00)\n        /* \"kcbreward.sol\":22232:22248  nCheckpoints - 1 */\n      dup9\n      add\n        /* \"kcbreward.sol\":22209:22249  checkpoints[delegatee][nCheckpoints - 1] */\n      0xffffffff\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"kcbreward.sol\":22209:22266  checkpoints[delegatee][nCheckpoints - 1].votes = newVotes */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffff00000000)\n      and\n      shl(0x20, 0x01)\n      sub(shl(0x60, 0x01), 0x01)\n      dup6\n      and\n      mul\n      or\n      swap1\n      sstore\n        /* \"kcbreward.sol\":22106:22430  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {... */\n      jump(tag_333)\n    tag_332:\n        /* \"kcbreward.sol\":22332:22365  Checkpoint(blockNumber, newVotes) */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0xffffffff\n      dup1\n      dup5\n      and\n      dup3\n      mstore\n      sub(shl(0x60, 0x01), 0x01)\n      dup1\n      dup7\n      and\n      0x20\n      dup1\n      dup6\n      add\n      swap2\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":22293:22315  checkpoints[delegatee] */\n      dup12\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"kcbreward.sol\":22293:22304  checkpoints */\n      0x06\n        /* \"kcbreward.sol\":22293:22315  checkpoints[delegatee] */\n      dup4\n      mstore\n      dup8\n      dup2\n      keccak256\n        /* \"kcbreward.sol\":22293:22329  checkpoints[delegatee][nCheckpoints] */\n      dup13\n      dup8\n      and\n      dup3\n      mstore\n      dup4\n      mstore\n      dup8\n      dup2\n      keccak256\n        /* \"kcbreward.sol\":22293:22365  checkpoints[delegatee][nCheckpoints] = Checkpoint(blockNumber, newVotes) */\n      swap7\n      mload\n      dup8\n      sload\n      swap5\n      mload\n      swap1\n      swap6\n      and\n      shl(0x20, 0x01)\n      mul\n      not(0xffffffffffffffffffffffff00000000)\n      swap6\n      dup8\n      and\n      not(0xffffffff)\n      swap6\n      dup7\n      and\n      or\n      swap6\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      or\n      swap1\n      swap6\n      sstore\n        /* \"kcbreward.sol\":22377:22402  numCheckpoints[delegatee] */\n      swap4\n      dup3\n      mstore\n        /* \"kcbreward.sol\":22377:22391  numCheckpoints */\n      0x07\n        /* \"kcbreward.sol\":22377:22402  numCheckpoints[delegatee] */\n      swap1\n      swap4\n      mstore\n      swap3\n      swap1\n      swap3\n      keccak256\n        /* \"kcbreward.sol\":22377:22421  numCheckpoints[delegatee] = nCheckpoints + 1 */\n      dup1\n      sload\n        /* \"kcbreward.sol\":22293:22365  checkpoints[delegatee][nCheckpoints] = Checkpoint(blockNumber, newVotes) */\n      0x01\n        /* \"kcbreward.sol\":22405:22421  nCheckpoints + 1 */\n      dup9\n      add\n        /* \"kcbreward.sol\":22377:22421  numCheckpoints[delegatee] = nCheckpoints + 1 */\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"kcbreward.sol\":22106:22430  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {... */\n    tag_333:\n        /* \"kcbreward.sol\":22464:22473  delegatee */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"kcbreward.sol\":22443:22494  DelegateVotesChanged(delegatee, oldVotes, newVotes) */\n      and\n      0xdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724\n        /* \"kcbreward.sol\":22475:22483  oldVotes */\n      dup5\n        /* \"kcbreward.sol\":22485:22493  newVotes */\n      dup5\n        /* \"kcbreward.sol\":22443:22494  DelegateVotesChanged(delegatee, oldVotes, newVotes) */\n      mload(0x40)\n      tag_334\n      swap3\n      swap2\n      swap1\n      jump(tag_335)\n    tag_334:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"kcbreward.sol\":21884:22501  function _writeCheckpoint(address delegatee, uint32 nCheckpoints, uint96 oldVotes, uint96 newVotes) internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"kcbreward.sol\":22507:22665  function safe32(uint n, string memory errorMessage) internal pure returns (uint32) {... */\n    tag_330:\n        /* \"kcbreward.sol\":22582:22588  uint32 */\n      0x00\n        /* \"kcbreward.sol\":22619:22631  errorMessage */\n      dup2\n      shl(0x20, 0x01)\n        /* \"kcbreward.sol\":22608:22617  n < 2**32 */\n      dup5\n      lt\n        /* \"kcbreward.sol\":22600:22632  require(n < 2**32, errorMessage) */\n      tag_274\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap2\n      swap1\n      jump(tag_39)\n        /* \"kcbreward.sol\":6581:23344  contract Uni {... */\n    tag_206:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n      jump\t// out\n        /* \"--CODEGEN--\":5:135   */\n    tag_340:\n        /* \"--CODEGEN--\":72:92   */\n      dup1\n      calldataload\n        /* \"--CODEGEN--\":97:130   */\n      tag_144\n        /* \"--CODEGEN--\":72:92   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      jump(tag_342)\n        /* \"--CODEGEN--\":142:272   */\n    tag_343:\n        /* \"--CODEGEN--\":209:229   */\n      dup1\n      calldataload\n        /* \"--CODEGEN--\":234:267   */\n      tag_144\n        /* \"--CODEGEN--\":209:229   */\n      dup2\n        /* \"--CODEGEN--\":234:267   */\n      jump(tag_345)\n        /* \"--CODEGEN--\":416:544   */\n    tag_349:\n        /* \"--CODEGEN--\":482:502   */\n      dup1\n      calldataload\n        /* \"--CODEGEN--\":507:539   */\n      tag_144\n        /* \"--CODEGEN--\":482:502   */\n      dup2\n        /* \"--CODEGEN--\":507:539   */\n      jump(tag_351)\n        /* \"--CODEGEN--\":551:677   */\n    tag_352:\n        /* \"--CODEGEN--\":616:636   */\n      dup1\n      calldataload\n        /* \"--CODEGEN--\":641:672   */\n      tag_144\n        /* \"--CODEGEN--\":616:636   */\n      dup2\n        /* \"--CODEGEN--\":641:672   */\n      jump(tag_354)\n        /* \"--CODEGEN--\":684:925   */\n    tag_78:\n      0x00\n        /* \"--CODEGEN--\":788:790   */\n      0x20\n        /* \"--CODEGEN--\":776:785   */\n      dup3\n        /* \"--CODEGEN--\":767:774   */\n      dup5\n        /* \"--CODEGEN--\":763:786   */\n      sub\n        /* \"--CODEGEN--\":759:791   */\n      slt\n        /* \"--CODEGEN--\":756:758   */\n      iszero\n      tag_355\n      jumpi\n        /* \"--CODEGEN--\":804:805   */\n      0x00\n        /* \"--CODEGEN--\":801:802   */\n      dup1\n        /* \"--CODEGEN--\":794:806   */\n      revert\n        /* \"--CODEGEN--\":756:758   */\n    tag_355:\n        /* \"--CODEGEN--\":839:840   */\n      0x00\n        /* \"--CODEGEN--\":856:909   */\n      tag_356\n        /* \"--CODEGEN--\":901:908   */\n      dup5\n        /* \"--CODEGEN--\":881:890   */\n      dup5\n        /* \"--CODEGEN--\":856:909   */\n      jump(tag_340)\n    tag_356:\n        /* \"--CODEGEN--\":846:909   */\n      swap5\n        /* \"--CODEGEN--\":750:925   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":932:1298   */\n    tag_129:\n      0x00\n      dup1\n        /* \"--CODEGEN--\":1053:1055   */\n      0x40\n        /* \"--CODEGEN--\":1041:1050   */\n      dup4\n        /* \"--CODEGEN--\":1032:1039   */\n      dup6\n        /* \"--CODEGEN--\":1028:1051   */\n      sub\n        /* \"--CODEGEN--\":1024:1056   */\n      slt\n        /* \"--CODEGEN--\":1021:1023   */\n      iszero\n      tag_357\n      jumpi\n        /* \"--CODEGEN--\":1069:1070   */\n      0x00\n        /* \"--CODEGEN--\":1066:1067   */\n      dup1\n        /* \"--CODEGEN--\":1059:1071   */\n      revert\n        /* \"--CODEGEN--\":1021:1023   */\n    tag_357:\n        /* \"--CODEGEN--\":1104:1105   */\n      0x00\n        /* \"--CODEGEN--\":1121:1174   */\n      tag_358\n        /* \"--CODEGEN--\":1166:1173   */\n      dup6\n        /* \"--CODEGEN--\":1146:1155   */\n      dup6\n        /* \"--CODEGEN--\":1121:1174   */\n      jump(tag_340)\n    tag_358:\n        /* \"--CODEGEN--\":1111:1174   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":1083:1180   */\n      pop\n        /* \"--CODEGEN--\":1211:1213   */\n      0x20\n        /* \"--CODEGEN--\":1229:1282   */\n      tag_359\n        /* \"--CODEGEN--\":1274:1281   */\n      dup6\n        /* \"--CODEGEN--\":1265:1271   */\n      dup3\n        /* \"--CODEGEN--\":1254:1263   */\n      dup7\n        /* \"--CODEGEN--\":1250:1272   */\n      add\n        /* \"--CODEGEN--\":1229:1282   */\n      jump(tag_340)\n    tag_359:\n        /* \"--CODEGEN--\":1219:1282   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":1190:1288   */\n      pop\n        /* \"--CODEGEN--\":1015:1298   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":1305:1796   */\n    tag_60:\n      0x00\n      dup1\n      0x00\n        /* \"--CODEGEN--\":1443:1445   */\n      0x60\n        /* \"--CODEGEN--\":1431:1440   */\n      dup5\n        /* \"--CODEGEN--\":1422:1429   */\n      dup7\n        /* \"--CODEGEN--\":1418:1441   */\n      sub\n        /* \"--CODEGEN--\":1414:1446   */\n      slt\n        /* \"--CODEGEN--\":1411:1413   */\n      iszero\n      tag_360\n      jumpi\n        /* \"--CODEGEN--\":1459:1460   */\n      0x00\n        /* \"--CODEGEN--\":1456:1457   */\n      dup1\n        /* \"--CODEGEN--\":1449:1461   */\n      revert\n        /* \"--CODEGEN--\":1411:1413   */\n    tag_360:\n        /* \"--CODEGEN--\":1494:1495   */\n      0x00\n        /* \"--CODEGEN--\":1511:1564   */\n      tag_361\n        /* \"--CODEGEN--\":1556:1563   */\n      dup7\n        /* \"--CODEGEN--\":1536:1545   */\n      dup7\n        /* \"--CODEGEN--\":1511:1564   */\n      jump(tag_340)\n    tag_361:\n        /* \"--CODEGEN--\":1501:1564   */\n      swap4\n      pop\n        /* \"--CODEGEN--\":1473:1570   */\n      pop\n        /* \"--CODEGEN--\":1601:1603   */\n      0x20\n        /* \"--CODEGEN--\":1619:1672   */\n      tag_362\n        /* \"--CODEGEN--\":1664:1671   */\n      dup7\n        /* \"--CODEGEN--\":1655:1661   */\n      dup3\n        /* \"--CODEGEN--\":1644:1653   */\n      dup8\n        /* \"--CODEGEN--\":1640:1662   */\n      add\n        /* \"--CODEGEN--\":1619:1672   */\n      jump(tag_340)\n    tag_362:\n        /* \"--CODEGEN--\":1609:1672   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":1580:1678   */\n      pop\n        /* \"--CODEGEN--\":1709:1711   */\n      0x40\n        /* \"--CODEGEN--\":1727:1780   */\n      tag_363\n        /* \"--CODEGEN--\":1772:1779   */\n      dup7\n        /* \"--CODEGEN--\":1763:1769   */\n      dup3\n        /* \"--CODEGEN--\":1752:1761   */\n      dup8\n        /* \"--CODEGEN--\":1748:1770   */\n      add\n        /* \"--CODEGEN--\":1727:1780   */\n      jump(tag_343)\n    tag_363:\n        /* \"--CODEGEN--\":1717:1780   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":1688:1786   */\n      pop\n        /* \"--CODEGEN--\":1405:1796   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\n        /* \"--CODEGEN--\":1803:2794   */\n    tag_125:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n        /* \"--CODEGEN--\":2007:2010   */\n      0xe0\n        /* \"--CODEGEN--\":1995:2004   */\n      dup9\n        /* \"--CODEGEN--\":1986:1993   */\n      dup11\n        /* \"--CODEGEN--\":1982:2005   */\n      sub\n        /* \"--CODEGEN--\":1978:2011   */\n      slt\n        /* \"--CODEGEN--\":1975:1977   */\n      iszero\n      tag_364\n      jumpi\n        /* \"--CODEGEN--\":2024:2025   */\n      0x00\n        /* \"--CODEGEN--\":2021:2022   */\n      dup1\n        /* \"--CODEGEN--\":2014:2026   */\n      revert\n        /* \"--CODEGEN--\":1975:1977   */\n    tag_364:\n        /* \"--CODEGEN--\":2059:2060   */\n      0x00\n        /* \"--CODEGEN--\":2076:2129   */\n      tag_365\n        /* \"--CODEGEN--\":2121:2128   */\n      dup11\n        /* \"--CODEGEN--\":2101:2110   */\n      dup11\n        /* \"--CODEGEN--\":2076:2129   */\n      jump(tag_340)\n    tag_365:\n        /* \"--CODEGEN--\":2066:2129   */\n      swap8\n      pop\n        /* \"--CODEGEN--\":2038:2135   */\n      pop\n        /* \"--CODEGEN--\":2166:2168   */\n      0x20\n        /* \"--CODEGEN--\":2184:2237   */\n      tag_366\n        /* \"--CODEGEN--\":2229:2236   */\n      dup11\n        /* \"--CODEGEN--\":2220:2226   */\n      dup3\n        /* \"--CODEGEN--\":2209:2218   */\n      dup12\n        /* \"--CODEGEN--\":2205:2227   */\n      add\n        /* \"--CODEGEN--\":2184:2237   */\n      jump(tag_340)\n    tag_366:\n        /* \"--CODEGEN--\":2174:2237   */\n      swap7\n      pop\n        /* \"--CODEGEN--\":2145:2243   */\n      pop\n        /* \"--CODEGEN--\":2274:2276   */\n      0x40\n        /* \"--CODEGEN--\":2292:2345   */\n      tag_367\n        /* \"--CODEGEN--\":2337:2344   */\n      dup11\n        /* \"--CODEGEN--\":2328:2334   */\n      dup3\n        /* \"--CODEGEN--\":2317:2326   */\n      dup12\n        /* \"--CODEGEN--\":2313:2335   */\n      add\n        /* \"--CODEGEN--\":2292:2345   */\n      jump(tag_343)\n    tag_367:\n        /* \"--CODEGEN--\":2282:2345   */\n      swap6\n      pop\n        /* \"--CODEGEN--\":2253:2351   */\n      pop\n        /* \"--CODEGEN--\":2382:2384   */\n      0x60\n        /* \"--CODEGEN--\":2400:2453   */\n      tag_368\n        /* \"--CODEGEN--\":2445:2452   */\n      dup11\n        /* \"--CODEGEN--\":2436:2442   */\n      dup3\n        /* \"--CODEGEN--\":2425:2434   */\n      dup12\n        /* \"--CODEGEN--\":2421:2443   */\n      add\n        /* \"--CODEGEN--\":2400:2453   */\n      jump(tag_343)\n    tag_368:\n        /* \"--CODEGEN--\":2390:2453   */\n      swap5\n      pop\n        /* \"--CODEGEN--\":2361:2459   */\n      pop\n        /* \"--CODEGEN--\":2490:2493   */\n      0x80\n        /* \"--CODEGEN--\":2509:2560   */\n      tag_369\n        /* \"--CODEGEN--\":2552:2559   */\n      dup11\n        /* \"--CODEGEN--\":2543:2549   */\n      dup3\n        /* \"--CODEGEN--\":2532:2541   */\n      dup12\n        /* \"--CODEGEN--\":2528:2550   */\n      add\n        /* \"--CODEGEN--\":2509:2560   */\n      jump(tag_352)\n    tag_369:\n        /* \"--CODEGEN--\":2499:2560   */\n      swap4\n      pop\n        /* \"--CODEGEN--\":2469:2566   */\n      pop\n        /* \"--CODEGEN--\":2597:2600   */\n      0xa0\n        /* \"--CODEGEN--\":2616:2669   */\n      tag_370\n        /* \"--CODEGEN--\":2661:2668   */\n      dup11\n        /* \"--CODEGEN--\":2652:2658   */\n      dup3\n        /* \"--CODEGEN--\":2641:2650   */\n      dup12\n        /* \"--CODEGEN--\":2637:2659   */\n      add\n        /* \"--CODEGEN--\":2616:2669   */\n      jump(tag_343)\n    tag_370:\n        /* \"--CODEGEN--\":2606:2669   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":2576:2675   */\n      pop\n        /* \"--CODEGEN--\":2706:2709   */\n      0xc0\n        /* \"--CODEGEN--\":2725:2778   */\n      tag_371\n        /* \"--CODEGEN--\":2770:2777   */\n      dup11\n        /* \"--CODEGEN--\":2761:2767   */\n      dup3\n        /* \"--CODEGEN--\":2750:2759   */\n      dup12\n        /* \"--CODEGEN--\":2746:2768   */\n      add\n        /* \"--CODEGEN--\":2725:2778   */\n      jump(tag_343)\n    tag_371:\n        /* \"--CODEGEN--\":2715:2778   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":2685:2784   */\n      pop\n        /* \"--CODEGEN--\":1969:2794   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\n        /* \"--CODEGEN--\":2801:3167   */\n    tag_46:\n      0x00\n      dup1\n        /* \"--CODEGEN--\":2922:2924   */\n      0x40\n        /* \"--CODEGEN--\":2910:2919   */\n      dup4\n        /* \"--CODEGEN--\":2901:2908   */\n      dup6\n        /* \"--CODEGEN--\":2897:2920   */\n      sub\n        /* \"--CODEGEN--\":2893:2925   */\n      slt\n        /* \"--CODEGEN--\":2890:2892   */\n      iszero\n      tag_372\n      jumpi\n        /* \"--CODEGEN--\":2938:2939   */\n      0x00\n        /* \"--CODEGEN--\":2935:2936   */\n      dup1\n        /* \"--CODEGEN--\":2928:2940   */\n      revert\n        /* \"--CODEGEN--\":2890:2892   */\n    tag_372:\n        /* \"--CODEGEN--\":2973:2974   */\n      0x00\n        /* \"--CODEGEN--\":2990:3043   */\n      tag_373\n        /* \"--CODEGEN--\":3035:3042   */\n      dup6\n        /* \"--CODEGEN--\":3015:3024   */\n      dup6\n        /* \"--CODEGEN--\":2990:3043   */\n      jump(tag_340)\n    tag_373:\n        /* \"--CODEGEN--\":2980:3043   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":2952:3049   */\n      pop\n        /* \"--CODEGEN--\":3080:3082   */\n      0x20\n        /* \"--CODEGEN--\":3098:3151   */\n      tag_359\n        /* \"--CODEGEN--\":3143:3150   */\n      dup6\n        /* \"--CODEGEN--\":3134:3140   */\n      dup3\n        /* \"--CODEGEN--\":3123:3132   */\n      dup7\n        /* \"--CODEGEN--\":3119:3141   */\n      add\n        /* \"--CODEGEN--\":3098:3151   */\n      jump(tag_343)\n        /* \"--CODEGEN--\":3174:4039   */\n    tag_121:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n      dup1\n        /* \"--CODEGEN--\":3361:3364   */\n      0xc0\n        /* \"--CODEGEN--\":3349:3358   */\n      dup8\n        /* \"--CODEGEN--\":3340:3347   */\n      dup10\n        /* \"--CODEGEN--\":3336:3359   */\n      sub\n        /* \"--CODEGEN--\":3332:3365   */\n      slt\n        /* \"--CODEGEN--\":3329:3331   */\n      iszero\n      tag_375\n      jumpi\n        /* \"--CODEGEN--\":3378:3379   */\n      0x00\n        /* \"--CODEGEN--\":3375:3376   */\n      dup1\n        /* \"--CODEGEN--\":3368:3380   */\n      revert\n        /* \"--CODEGEN--\":3329:3331   */\n    tag_375:\n        /* \"--CODEGEN--\":3413:3414   */\n      0x00\n        /* \"--CODEGEN--\":3430:3483   */\n      tag_376\n        /* \"--CODEGEN--\":3475:3482   */\n      dup10\n        /* \"--CODEGEN--\":3455:3464   */\n      dup10\n        /* \"--CODEGEN--\":3430:3483   */\n      jump(tag_340)\n    tag_376:\n        /* \"--CODEGEN--\":3420:3483   */\n      swap7\n      pop\n        /* \"--CODEGEN--\":3392:3489   */\n      pop\n        /* \"--CODEGEN--\":3520:3522   */\n      0x20\n        /* \"--CODEGEN--\":3538:3591   */\n      tag_377\n        /* \"--CODEGEN--\":3583:3590   */\n      dup10\n        /* \"--CODEGEN--\":3574:3580   */\n      dup3\n        /* \"--CODEGEN--\":3563:3572   */\n      dup11\n        /* \"--CODEGEN--\":3559:3581   */\n      add\n        /* \"--CODEGEN--\":3538:3591   */\n      jump(tag_343)\n    tag_377:\n        /* \"--CODEGEN--\":3528:3591   */\n      swap6\n      pop\n        /* \"--CODEGEN--\":3499:3597   */\n      pop\n        /* \"--CODEGEN--\":3628:3630   */\n      0x40\n        /* \"--CODEGEN--\":3646:3699   */\n      tag_378\n        /* \"--CODEGEN--\":3691:3698   */\n      dup10\n        /* \"--CODEGEN--\":3682:3688   */\n      dup3\n        /* \"--CODEGEN--\":3671:3680   */\n      dup11\n        /* \"--CODEGEN--\":3667:3689   */\n      add\n        /* \"--CODEGEN--\":3646:3699   */\n      jump(tag_343)\n    tag_378:\n        /* \"--CODEGEN--\":3636:3699   */\n      swap5\n      pop\n        /* \"--CODEGEN--\":3607:3705   */\n      pop\n        /* \"--CODEGEN--\":3736:3738   */\n      0x60\n        /* \"--CODEGEN--\":3754:3805   */\n      tag_379\n        /* \"--CODEGEN--\":3797:3804   */\n      dup10\n        /* \"--CODEGEN--\":3788:3794   */\n      dup3\n        /* \"--CODEGEN--\":3777:3786   */\n      dup11\n        /* \"--CODEGEN--\":3773:3795   */\n      add\n        /* \"--CODEGEN--\":3754:3805   */\n      jump(tag_352)\n    tag_379:\n        /* \"--CODEGEN--\":3744:3805   */\n      swap4\n      pop\n        /* \"--CODEGEN--\":3715:3811   */\n      pop\n        /* \"--CODEGEN--\":3842:3845   */\n      0x80\n        /* \"--CODEGEN--\":3861:3914   */\n      tag_380\n        /* \"--CODEGEN--\":3906:3913   */\n      dup10\n        /* \"--CODEGEN--\":3897:3903   */\n      dup3\n        /* \"--CODEGEN--\":3886:3895   */\n      dup11\n        /* \"--CODEGEN--\":3882:3904   */\n      add\n        /* \"--CODEGEN--\":3861:3914   */\n      jump(tag_343)\n    tag_380:\n        /* \"--CODEGEN--\":3851:3914   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":3821:3920   */\n      pop\n        /* \"--CODEGEN--\":3951:3954   */\n      0xa0\n        /* \"--CODEGEN--\":3970:4023   */\n      tag_381\n        /* \"--CODEGEN--\":4015:4022   */\n      dup10\n        /* \"--CODEGEN--\":4006:4012   */\n      dup3\n        /* \"--CODEGEN--\":3995:4004   */\n      dup11\n        /* \"--CODEGEN--\":3991:4013   */\n      add\n        /* \"--CODEGEN--\":3970:4023   */\n      jump(tag_343)\n    tag_381:\n        /* \"--CODEGEN--\":3960:4023   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":3930:4029   */\n      pop\n        /* \"--CODEGEN--\":3323:4039   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\n        /* \"--CODEGEN--\":4046:4410   */\n    tag_137:\n      0x00\n      dup1\n        /* \"--CODEGEN--\":4166:4168   */\n      0x40\n        /* \"--CODEGEN--\":4154:4163   */\n      dup4\n        /* \"--CODEGEN--\":4145:4152   */\n      dup6\n        /* \"--CODEGEN--\":4141:4164   */\n      sub\n        /* \"--CODEGEN--\":4137:4169   */\n      slt\n        /* \"--CODEGEN--\":4134:4136   */\n      iszero\n      tag_382\n      jumpi\n        /* \"--CODEGEN--\":4182:4183   */\n      0x00\n        /* \"--CODEGEN--\":4179:4180   */\n      dup1\n        /* \"--CODEGEN--\":4172:4184   */\n      revert\n        /* \"--CODEGEN--\":4134:4136   */\n    tag_382:\n        /* \"--CODEGEN--\":4217:4218   */\n      0x00\n        /* \"--CODEGEN--\":4234:4287   */\n      tag_383\n        /* \"--CODEGEN--\":4279:4286   */\n      dup6\n        /* \"--CODEGEN--\":4259:4268   */\n      dup6\n        /* \"--CODEGEN--\":4234:4287   */\n      jump(tag_340)\n    tag_383:\n        /* \"--CODEGEN--\":4224:4287   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":4196:4293   */\n      pop\n        /* \"--CODEGEN--\":4324:4326   */\n      0x20\n        /* \"--CODEGEN--\":4342:4394   */\n      tag_359\n        /* \"--CODEGEN--\":4386:4393   */\n      dup6\n        /* \"--CODEGEN--\":4377:4383   */\n      dup3\n        /* \"--CODEGEN--\":4366:4375   */\n      dup7\n        /* \"--CODEGEN--\":4362:4384   */\n      add\n        /* \"--CODEGEN--\":4342:4394   */\n      jump(tag_349)\n        /* \"--CODEGEN--\":4417:4530   */\n    tag_385:\n        /* \"--CODEGEN--\":4500:4524   */\n      tag_386\n        /* \"--CODEGEN--\":4518:4523   */\n      dup2\n        /* \"--CODEGEN--\":4500:4524   */\n      jump(tag_387)\n    tag_386:\n        /* \"--CODEGEN--\":4495:4498   */\n      dup3\n        /* \"--CODEGEN--\":4488:4525   */\n      mstore\n        /* \"--CODEGEN--\":4482:4530   */\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":4537:4641   */\n    tag_388:\n        /* \"--CODEGEN--\":4614:4635   */\n      tag_386\n        /* \"--CODEGEN--\":4629:4634   */\n      dup2\n        /* \"--CODEGEN--\":4614:4635   */\n      jump(tag_390)\n        /* \"--CODEGEN--\":4648:4761   */\n    tag_391:\n        /* \"--CODEGEN--\":4731:4755   */\n      tag_386\n        /* \"--CODEGEN--\":4749:4754   */\n      dup2\n        /* \"--CODEGEN--\":4731:4755   */\n      jump(tag_393)\n        /* \"--CODEGEN--\":4768:4920   */\n    tag_394:\n        /* \"--CODEGEN--\":4869:4914   */\n      tag_386\n        /* \"--CODEGEN--\":4889:4913   */\n      tag_396\n        /* \"--CODEGEN--\":4907:4912   */\n      dup3\n        /* \"--CODEGEN--\":4889:4913   */\n      jump(tag_393)\n    tag_396:\n        /* \"--CODEGEN--\":4869:4914   */\n      jump(tag_393)\n        /* \"--CODEGEN--\":4927:5274   */\n    tag_398:\n      0x00\n        /* \"--CODEGEN--\":5039:5078   */\n      tag_399\n        /* \"--CODEGEN--\":5072:5077   */\n      dup3\n        /* \"--CODEGEN--\":5039:5078   */\n      jump(tag_409)\n    tag_399:\n        /* \"--CODEGEN--\":5090:5161   */\n      tag_401\n        /* \"--CODEGEN--\":5154:5160   */\n      dup2\n        /* \"--CODEGEN--\":5149:5152   */\n      dup6\n        /* \"--CODEGEN--\":5090:5161   */\n      jump(tag_402)\n    tag_401:\n        /* \"--CODEGEN--\":5083:5161   */\n      swap4\n      pop\n        /* \"--CODEGEN--\":5166:5218   */\n      tag_403\n        /* \"--CODEGEN--\":5211:5217   */\n      dup2\n        /* \"--CODEGEN--\":5206:5209   */\n      dup6\n        /* \"--CODEGEN--\":5199:5203   */\n      0x20\n        /* \"--CODEGEN--\":5192:5197   */\n      dup7\n        /* \"--CODEGEN--\":5188:5204   */\n      add\n        /* \"--CODEGEN--\":5166:5218   */\n      jump(tag_404)\n    tag_403:\n        /* \"--CODEGEN--\":5239:5268   */\n      tag_405\n        /* \"--CODEGEN--\":5261:5267   */\n      dup2\n        /* \"--CODEGEN--\":5239:5268   */\n      jump(tag_406)\n    tag_405:\n        /* \"--CODEGEN--\":5230:5269   */\n      swap1\n      swap4\n      add\n      swap4\n        /* \"--CODEGEN--\":5019:5274   */\n      swap3\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":5628:6002   */\n    tag_413:\n      0x00\n        /* \"--CODEGEN--\":5788:5855   */\n      tag_414\n        /* \"--CODEGEN--\":5852:5854   */\n      0x25\n        /* \"--CODEGEN--\":5847:5850   */\n      dup4\n        /* \"--CODEGEN--\":5788:5855   */\n      jump(tag_402)\n    tag_414:\n        /* \"--CODEGEN--\":5888:5922   */\n      0x556e693a3a64656c656761746542795369673a207369676e6174757265206578\n        /* \"--CODEGEN--\":5868:5923   */\n      dup2\n      mstore\n      shl(0xda, 0x1c1a5c9959)\n        /* \"--CODEGEN--\":5952:5954   */\n      0x20\n        /* \"--CODEGEN--\":5943:5955   */\n      dup3\n      add\n        /* \"--CODEGEN--\":5936:5965   */\n      mstore\n        /* \"--CODEGEN--\":5993:5995   */\n      0x40\n        /* \"--CODEGEN--\":5984:5996   */\n      add\n      swap3\n        /* \"--CODEGEN--\":5774:6002   */\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":6011:6409   */\n    tag_415:\n      0x00\n        /* \"--CODEGEN--\":6189:6273   */\n      tag_416\n        /* \"--CODEGEN--\":6271:6272   */\n      0x02\n        /* \"--CODEGEN--\":6266:6269   */\n      dup4\n        /* \"--CODEGEN--\":6189:6273   */\n      jump(tag_417)\n    tag_416:\n      shl(0xf0, 0x1901)\n        /* \"--CODEGEN--\":6286:6373   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":6401:6402   */\n      0x02\n        /* \"--CODEGEN--\":6392:6403   */\n      add\n      swap3\n        /* \"--CODEGEN--\":6175:6409   */\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":6418:6745   */\n    tag_418:\n      0x00\n        /* \"--CODEGEN--\":6578:6645   */\n      tag_419\n        /* \"--CODEGEN--\":6642:6644   */\n      0x1b\n        /* \"--CODEGEN--\":6637:6640   */\n      dup4\n        /* \"--CODEGEN--\":6578:6645   */\n      jump(tag_402)\n    tag_419:\n        /* \"--CODEGEN--\":6678:6707   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"--CODEGEN--\":6658:6708   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":6736:6738   */\n      0x20\n        /* \"--CODEGEN--\":6727:6739   */\n      add\n      swap3\n        /* \"--CODEGEN--\":6564:6745   */\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":6754:7128   */\n    tag_420:\n      0x00\n        /* \"--CODEGEN--\":6914:6981   */\n      tag_421\n        /* \"--CODEGEN--\":6978:6980   */\n      0x25\n        /* \"--CODEGEN--\":6973:6976   */\n      dup4\n        /* \"--CODEGEN--\":6914:6981   */\n      jump(tag_402)\n    tag_421:\n        /* \"--CODEGEN--\":7014:7048   */\n      0x556e693a3a64656c656761746542795369673a20696e76616c6964207369676e\n        /* \"--CODEGEN--\":6994:7049   */\n      dup2\n      mstore\n      shl(0xd8, 0x6174757265)\n        /* \"--CODEGEN--\":7078:7080   */\n      0x20\n        /* \"--CODEGEN--\":7069:7081   */\n      dup3\n      add\n        /* \"--CODEGEN--\":7062:7091   */\n      mstore\n        /* \"--CODEGEN--\":7119:7121   */\n      0x40\n        /* \"--CODEGEN--\":7110:7122   */\n      add\n      swap3\n        /* \"--CODEGEN--\":6900:7128   */\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":7137:7512   */\n    tag_422:\n      0x00\n        /* \"--CODEGEN--\":7297:7364   */\n      tag_423\n        /* \"--CODEGEN--\":7361:7363   */\n      0x26\n        /* \"--CODEGEN--\":7356:7359   */\n      dup4\n        /* \"--CODEGEN--\":7297:7364   */\n      jump(tag_402)\n    tag_423:\n        /* \"--CODEGEN--\":7397:7431   */\n      0x556e693a3a6765745072696f72566f7465733a206e6f74207965742064657465\n        /* \"--CODEGEN--\":7377:7432   */\n      dup2\n      mstore\n      shl(0xd2, 0x1c9b5a5b9959)\n        /* \"--CODEGEN--\":7461:7463   */\n      0x20\n        /* \"--CODEGEN--\":7452:7464   */\n      dup3\n      add\n        /* \"--CODEGEN--\":7445:7475   */\n      mstore\n        /* \"--CODEGEN--\":7503:7505   */\n      0x40\n        /* \"--CODEGEN--\":7494:7506   */\n      add\n      swap3\n        /* \"--CODEGEN--\":7283:7512   */\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":7521:7904   */\n    tag_424:\n      0x00\n        /* \"--CODEGEN--\":7681:7748   */\n      tag_425\n        /* \"--CODEGEN--\":7745:7747   */\n      0x2e\n        /* \"--CODEGEN--\":7740:7743   */\n      dup4\n        /* \"--CODEGEN--\":7681:7748   */\n      jump(tag_402)\n    tag_425:\n        /* \"--CODEGEN--\":7781:7815   */\n      0x556e693a3a6d696e743a2063616e6e6f74207472616e7366657220746f207468\n        /* \"--CODEGEN--\":7761:7816   */\n      dup2\n      mstore\n      shl(0x90, 0x65207a65726f2061646472657373)\n        /* \"--CODEGEN--\":7845:7847   */\n      0x20\n        /* \"--CODEGEN--\":7836:7848   */\n      dup3\n      add\n        /* \"--CODEGEN--\":7829:7867   */\n      mstore\n        /* \"--CODEGEN--\":7895:7897   */\n      0x40\n        /* \"--CODEGEN--\":7886:7898   */\n      add\n      swap3\n        /* \"--CODEGEN--\":7667:7904   */\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":7913:8405   */\n    tag_426:\n      0x00\n        /* \"--CODEGEN--\":8091:8176   */\n      tag_427\n        /* \"--CODEGEN--\":8173:8175   */\n      0x52\n        /* \"--CODEGEN--\":8168:8171   */\n      dup4\n        /* \"--CODEGEN--\":8091:8176   */\n      jump(tag_417)\n    tag_427:\n        /* \"--CODEGEN--\":8209:8243   */\n      0x5065726d69742861646472657373206f776e65722c6164647265737320737065\n        /* \"--CODEGEN--\":8189:8244   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":8278:8312   */\n      0x6e6465722c75696e743235362076616c75652c75696e74323536206e6f6e6365\n        /* \"--CODEGEN--\":8273:8275   */\n      0x20\n        /* \"--CODEGEN--\":8264:8276   */\n      dup3\n      add\n        /* \"--CODEGEN--\":8257:8313   */\n      mstore\n      shl(0x70, 0x2c75696e7432353620646561646c696e6529)\n        /* \"--CODEGEN--\":8342:8344   */\n      0x40\n        /* \"--CODEGEN--\":8333:8345   */\n      dup3\n      add\n        /* \"--CODEGEN--\":8326:8368   */\n      mstore\n        /* \"--CODEGEN--\":8396:8398   */\n      0x52\n        /* \"--CODEGEN--\":8387:8399   */\n      add\n      swap3\n        /* \"--CODEGEN--\":8077:8405   */\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":8414:8785   */\n    tag_428:\n      0x00\n        /* \"--CODEGEN--\":8574:8641   */\n      tag_429\n        /* \"--CODEGEN--\":8638:8640   */\n      0x22\n        /* \"--CODEGEN--\":8633:8636   */\n      dup4\n        /* \"--CODEGEN--\":8574:8641   */\n      jump(tag_402)\n    tag_429:\n        /* \"--CODEGEN--\":8674:8708   */\n      0x556e693a3a6d696e743a206d696e74696e67206e6f7420616c6c6f7765642079\n        /* \"--CODEGEN--\":8654:8709   */\n      dup2\n      mstore\n      shl(0xf2, 0x195d)\n        /* \"--CODEGEN--\":8738:8740   */\n      0x20\n        /* \"--CODEGEN--\":8729:8741   */\n      dup3\n      add\n        /* \"--CODEGEN--\":8722:8748   */\n      mstore\n        /* \"--CODEGEN--\":8776:8778   */\n      0x40\n        /* \"--CODEGEN--\":8767:8779   */\n      add\n      swap3\n        /* \"--CODEGEN--\":8560:8785   */\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":8794:9271   */\n    tag_430:\n      0x00\n        /* \"--CODEGEN--\":8972:9057   */\n      tag_431\n        /* \"--CODEGEN--\":9054:9056   */\n      0x43\n        /* \"--CODEGEN--\":9049:9052   */\n      dup4\n        /* \"--CODEGEN--\":8972:9057   */\n      jump(tag_417)\n    tag_431:\n        /* \"--CODEGEN--\":9090:9124   */\n      0x454950373132446f6d61696e28737472696e67206e616d652c75696e74323536\n        /* \"--CODEGEN--\":9070:9125   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":9159:9193   */\n      0x20636861696e49642c6164647265737320766572696679696e67436f6e747261\n        /* \"--CODEGEN--\":9154:9156   */\n      0x20\n        /* \"--CODEGEN--\":9145:9157   */\n      dup3\n      add\n        /* \"--CODEGEN--\":9138:9194   */\n      mstore\n      shl(0xe8, 0x637429)\n        /* \"--CODEGEN--\":9223:9225   */\n      0x40\n        /* \"--CODEGEN--\":9214:9226   */\n      dup3\n      add\n        /* \"--CODEGEN--\":9207:9234   */\n      mstore\n        /* \"--CODEGEN--\":9262:9264   */\n      0x43\n        /* \"--CODEGEN--\":9253:9265   */\n      add\n      swap3\n        /* \"--CODEGEN--\":8958:9271   */\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":9280:9674   */\n    tag_432:\n      0x00\n        /* \"--CODEGEN--\":9440:9507   */\n      tag_433\n        /* \"--CODEGEN--\":9504:9506   */\n      0x39\n        /* \"--CODEGEN--\":9499:9502   */\n      dup4\n        /* \"--CODEGEN--\":9440:9507   */\n      jump(tag_402)\n    tag_433:\n        /* \"--CODEGEN--\":9540:9574   */\n      0x556e693a3a5f7472616e73666572546f6b656e733a2063616e6e6f7420747261\n        /* \"--CODEGEN--\":9520:9575   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":9609:9636   */\n      0x6e7366657220746f20746865207a65726f206164647265737300000000000000\n        /* \"--CODEGEN--\":9604:9606   */\n      0x20\n        /* \"--CODEGEN--\":9595:9607   */\n      dup3\n      add\n        /* \"--CODEGEN--\":9588:9637   */\n      mstore\n        /* \"--CODEGEN--\":9665:9667   */\n      0x40\n        /* \"--CODEGEN--\":9656:9668   */\n      add\n      swap3\n        /* \"--CODEGEN--\":9426:9674   */\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":9683:10053   */\n    tag_434:\n      0x00\n        /* \"--CODEGEN--\":9843:9910   */\n      tag_435\n        /* \"--CODEGEN--\":9907:9909   */\n      0x21\n        /* \"--CODEGEN--\":9902:9905   */\n      dup4\n        /* \"--CODEGEN--\":9843:9910   */\n      jump(tag_402)\n    tag_435:\n        /* \"--CODEGEN--\":9943:9977   */\n      0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f\n        /* \"--CODEGEN--\":9923:9978   */\n      dup2\n      mstore\n      shl(0xf8, 0x77)\n        /* \"--CODEGEN--\":10007:10009   */\n      0x20\n        /* \"--CODEGEN--\":9998:10010   */\n      dup3\n      add\n        /* \"--CODEGEN--\":9991:10016   */\n      mstore\n        /* \"--CODEGEN--\":10044:10046   */\n      0x40\n        /* \"--CODEGEN--\":10035:10047   */\n      add\n      swap3\n        /* \"--CODEGEN--\":9829:10053   */\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":10062:10390   */\n    tag_436:\n      0x00\n        /* \"--CODEGEN--\":10222:10289   */\n      tag_437\n        /* \"--CODEGEN--\":10286:10288   */\n      0x1c\n        /* \"--CODEGEN--\":10281:10284   */\n      dup4\n        /* \"--CODEGEN--\":10222:10289   */\n      jump(tag_402)\n    tag_437:\n        /* \"--CODEGEN--\":10322:10352   */\n      0x556e693a3a6d696e743a206578636565646564206d696e742063617000000000\n        /* \"--CODEGEN--\":10302:10353   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":10381:10383   */\n      0x20\n        /* \"--CODEGEN--\":10372:10384   */\n      add\n      swap3\n        /* \"--CODEGEN--\":10208:10390   */\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":10399:10771   */\n    tag_438:\n      0x00\n        /* \"--CODEGEN--\":10559:10626   */\n      tag_439\n        /* \"--CODEGEN--\":10623:10625   */\n      0x23\n        /* \"--CODEGEN--\":10618:10621   */\n      dup4\n        /* \"--CODEGEN--\":10559:10626   */\n      jump(tag_402)\n    tag_439:\n        /* \"--CODEGEN--\":10659:10693   */\n      0x556e693a3a6d696e743a206f6e6c7920746865206d696e7465722063616e206d\n        /* \"--CODEGEN--\":10639:10694   */\n      dup2\n      mstore\n      shl(0xea, 0x1a5b9d)\n        /* \"--CODEGEN--\":10723:10725   */\n      0x20\n        /* \"--CODEGEN--\":10714:10726   */\n      dup3\n      add\n        /* \"--CODEGEN--\":10707:10734   */\n      mstore\n        /* \"--CODEGEN--\":10762:10764   */\n      0x40\n        /* \"--CODEGEN--\":10753:10765   */\n      add\n      swap3\n        /* \"--CODEGEN--\":10545:10771   */\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":10780:11178   */\n    tag_440:\n      0x00\n        /* \"--CODEGEN--\":10940:11007   */\n      tag_441\n        /* \"--CODEGEN--\":11004:11006   */\n      0x3d\n        /* \"--CODEGEN--\":10999:11002   */\n      dup4\n        /* \"--CODEGEN--\":10940:11007   */\n      jump(tag_402)\n    tag_441:\n        /* \"--CODEGEN--\":11040:11074   */\n      0x556e693a3a7365744d696e7465723a206f6e6c7920746865206d696e74657220\n        /* \"--CODEGEN--\":11020:11075   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":11109:11140   */\n      0x63616e206368616e676520746865206d696e7465722061646472657373000000\n        /* \"--CODEGEN--\":11104:11106   */\n      0x20\n        /* \"--CODEGEN--\":11095:11107   */\n      dup3\n      add\n        /* \"--CODEGEN--\":11088:11141   */\n      mstore\n        /* \"--CODEGEN--\":11169:11171   */\n      0x40\n        /* \"--CODEGEN--\":11160:11172   */\n      add\n      swap3\n        /* \"--CODEGEN--\":10926:11178   */\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":11187:11557   */\n    tag_442:\n      0x00\n        /* \"--CODEGEN--\":11347:11414   */\n      tag_443\n        /* \"--CODEGEN--\":11411:11413   */\n      0x21\n        /* \"--CODEGEN--\":11406:11409   */\n      dup4\n        /* \"--CODEGEN--\":11347:11414   */\n      jump(tag_402)\n    tag_443:\n        /* \"--CODEGEN--\":11447:11481   */\n      0x556e693a3a64656c656761746542795369673a20696e76616c6964206e6f6e63\n        /* \"--CODEGEN--\":11427:11482   */\n      dup2\n      mstore\n      shl(0xf8, 0x65)\n        /* \"--CODEGEN--\":11511:11513   */\n      0x20\n        /* \"--CODEGEN--\":11502:11514   */\n      dup3\n      add\n        /* \"--CODEGEN--\":11495:11520   */\n      mstore\n        /* \"--CODEGEN--\":11548:11550   */\n      0x40\n        /* \"--CODEGEN--\":11539:11551   */\n      add\n      swap3\n        /* \"--CODEGEN--\":11333:11557   */\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":11566:11962   */\n    tag_444:\n      0x00\n        /* \"--CODEGEN--\":11726:11793   */\n      tag_445\n        /* \"--CODEGEN--\":11790:11792   */\n      0x3b\n        /* \"--CODEGEN--\":11785:11788   */\n      dup4\n        /* \"--CODEGEN--\":11726:11793   */\n      jump(tag_402)\n    tag_445:\n        /* \"--CODEGEN--\":11826:11860   */\n      0x556e693a3a5f7472616e73666572546f6b656e733a2063616e6e6f7420747261\n        /* \"--CODEGEN--\":11806:11861   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":11895:11924   */\n      0x6e736665722066726f6d20746865207a65726f20616464726573730000000000\n        /* \"--CODEGEN--\":11890:11892   */\n      0x20\n        /* \"--CODEGEN--\":11881:11893   */\n      dup3\n      add\n        /* \"--CODEGEN--\":11874:11925   */\n      mstore\n        /* \"--CODEGEN--\":11953:11955   */\n      0x40\n        /* \"--CODEGEN--\":11944:11956   */\n      add\n      swap3\n        /* \"--CODEGEN--\":11712:11962   */\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":11971:12301   */\n    tag_446:\n      0x00\n        /* \"--CODEGEN--\":12131:12198   */\n      tag_447\n        /* \"--CODEGEN--\":12195:12197   */\n      0x1e\n        /* \"--CODEGEN--\":12190:12193   */\n      dup4\n        /* \"--CODEGEN--\":12131:12198   */\n      jump(tag_402)\n    tag_447:\n        /* \"--CODEGEN--\":12231:12263   */\n      0x556e693a3a7065726d69743a207369676e617475726520657870697265640000\n        /* \"--CODEGEN--\":12211:12264   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":12292:12294   */\n      0x20\n        /* \"--CODEGEN--\":12283:12295   */\n      add\n      swap3\n        /* \"--CODEGEN--\":12117:12301   */\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":12310:12741   */\n    tag_448:\n      0x00\n        /* \"--CODEGEN--\":12488:12573   */\n      tag_449\n        /* \"--CODEGEN--\":12570:12572   */\n      0x3a\n        /* \"--CODEGEN--\":12565:12568   */\n      dup4\n        /* \"--CODEGEN--\":12488:12573   */\n      jump(tag_417)\n    tag_449:\n        /* \"--CODEGEN--\":12606:12640   */\n      0x44656c65676174696f6e28616464726573732064656c6567617465652c75696e\n        /* \"--CODEGEN--\":12586:12641   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":12675:12703   */\n      0x74323536206e6f6e63652c75696e743235362065787069727929000000000000\n        /* \"--CODEGEN--\":12670:12672   */\n      0x20\n        /* \"--CODEGEN--\":12661:12673   */\n      dup3\n      add\n        /* \"--CODEGEN--\":12654:12704   */\n      mstore\n        /* \"--CODEGEN--\":12732:12734   */\n      0x3a\n        /* \"--CODEGEN--\":12723:12735   */\n      add\n      swap3\n        /* \"--CODEGEN--\":12474:12741   */\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":12750:13080   */\n    tag_450:\n      0x00\n        /* \"--CODEGEN--\":12910:12977   */\n      tag_451\n        /* \"--CODEGEN--\":12974:12976   */\n      0x1e\n        /* \"--CODEGEN--\":12969:12972   */\n      dup4\n        /* \"--CODEGEN--\":12910:12977   */\n      jump(tag_402)\n    tag_451:\n        /* \"--CODEGEN--\":13010:13042   */\n      0x556e693a3a7065726d69743a20696e76616c6964207369676e61747572650000\n        /* \"--CODEGEN--\":12990:13043   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":13071:13073   */\n      0x20\n        /* \"--CODEGEN--\":13062:13074   */\n      add\n      swap3\n        /* \"--CODEGEN--\":12896:13080   */\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":13089:13414   */\n    tag_452:\n      0x00\n        /* \"--CODEGEN--\":13249:13316   */\n      tag_453\n        /* \"--CODEGEN--\":13313:13315   */\n      0x19\n        /* \"--CODEGEN--\":13308:13311   */\n      dup4\n        /* \"--CODEGEN--\":13249:13316   */\n      jump(tag_402)\n    tag_453:\n        /* \"--CODEGEN--\":13349:13376   */\n      0x556e693a3a7065726d69743a20756e617574686f72697a656400000000000000\n        /* \"--CODEGEN--\":13329:13377   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":13405:13407   */\n      0x20\n        /* \"--CODEGEN--\":13396:13408   */\n      add\n      swap3\n        /* \"--CODEGEN--\":13235:13414   */\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":13542:13652   */\n    tag_457:\n        /* \"--CODEGEN--\":13623:13646   */\n      tag_386\n        /* \"--CODEGEN--\":13640:13645   */\n      dup2\n        /* \"--CODEGEN--\":13623:13646   */\n      jump(tag_459)\n        /* \"--CODEGEN--\":13659:13766   */\n    tag_460:\n        /* \"--CODEGEN--\":13738:13760   */\n      tag_386\n        /* \"--CODEGEN--\":13754:13759   */\n      dup2\n        /* \"--CODEGEN--\":13738:13760   */\n      jump(tag_462)\n        /* \"--CODEGEN--\":13773:13897   */\n    tag_463:\n        /* \"--CODEGEN--\":13855:13891   */\n      tag_386\n        /* \"--CODEGEN--\":13885:13890   */\n      dup2\n        /* \"--CODEGEN--\":13855:13891   */\n      jump(tag_465)\n        /* \"--CODEGEN--\":13904:14014   */\n    tag_466:\n        /* \"--CODEGEN--\":13985:14008   */\n      tag_386\n        /* \"--CODEGEN--\":14002:14007   */\n      dup2\n        /* \"--CODEGEN--\":13985:14008   */\n      jump(tag_468)\n        /* \"--CODEGEN--\":14021:14671   */\n    tag_228:\n      0x00\n        /* \"--CODEGEN--\":14276:14424   */\n      tag_469\n        /* \"--CODEGEN--\":14420:14423   */\n      dup3\n        /* \"--CODEGEN--\":14276:14424   */\n      jump(tag_415)\n    tag_469:\n        /* \"--CODEGEN--\":14269:14424   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":14435:14510   */\n      tag_470\n        /* \"--CODEGEN--\":14506:14509   */\n      dup3\n        /* \"--CODEGEN--\":14497:14503   */\n      dup6\n        /* \"--CODEGEN--\":14435:14510   */\n      jump(tag_394)\n    tag_470:\n        /* \"--CODEGEN--\":14532:14534   */\n      0x20\n        /* \"--CODEGEN--\":14527:14530   */\n      dup3\n        /* \"--CODEGEN--\":14523:14535   */\n      add\n        /* \"--CODEGEN--\":14516:14535   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":14546:14621   */\n      tag_471\n        /* \"--CODEGEN--\":14617:14620   */\n      dup3\n        /* \"--CODEGEN--\":14608:14614   */\n      dup5\n        /* \"--CODEGEN--\":14546:14621   */\n      jump(tag_394)\n    tag_471:\n      pop\n        /* \"--CODEGEN--\":14643:14645   */\n      0x20\n        /* \"--CODEGEN--\":14634:14646   */\n      add\n      swap3\n        /* \"--CODEGEN--\":14257:14671   */\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":14678:15050   */\n    tag_163:\n      0x00\n        /* \"--CODEGEN--\":14877:15025   */\n      tag_144\n        /* \"--CODEGEN--\":15021:15024   */\n      dup3\n        /* \"--CODEGEN--\":14877:15025   */\n      jump(tag_426)\n        /* \"--CODEGEN--\":15057:15429   */\n    tag_152:\n      0x00\n        /* \"--CODEGEN--\":15256:15404   */\n      tag_144\n        /* \"--CODEGEN--\":15400:15403   */\n      dup3\n        /* \"--CODEGEN--\":15256:15404   */\n      jump(tag_430)\n        /* \"--CODEGEN--\":15436:15808   */\n    tag_224:\n      0x00\n        /* \"--CODEGEN--\":15635:15783   */\n      tag_144\n        /* \"--CODEGEN--\":15779:15782   */\n      dup3\n        /* \"--CODEGEN--\":15635:15783   */\n      jump(tag_448)\n        /* \"--CODEGEN--\":15815:16028   */\n    tag_43:\n        /* \"--CODEGEN--\":15933:15935   */\n      0x20\n        /* \"--CODEGEN--\":15918:15936   */\n      dup2\n      add\n        /* \"--CODEGEN--\":15947:16018   */\n      tag_144\n        /* \"--CODEGEN--\":15922:15931   */\n      dup3\n        /* \"--CODEGEN--\":15991:15997   */\n      dup5\n        /* \"--CODEGEN--\":15947:16018   */\n      jump(tag_385)\n        /* \"--CODEGEN--\":16035:16359   */\n    tag_272:\n        /* \"--CODEGEN--\":16181:16183   */\n      0x40\n        /* \"--CODEGEN--\":16166:16184   */\n      dup2\n      add\n        /* \"--CODEGEN--\":16195:16266   */\n      tag_476\n        /* \"--CODEGEN--\":16170:16179   */\n      dup3\n        /* \"--CODEGEN--\":16239:16245   */\n      dup6\n        /* \"--CODEGEN--\":16195:16266   */\n      jump(tag_385)\n    tag_476:\n        /* \"--CODEGEN--\":16277:16349   */\n      tag_153\n        /* \"--CODEGEN--\":16345:16347   */\n      0x20\n        /* \"--CODEGEN--\":16334:16343   */\n      dup4\n        /* \"--CODEGEN--\":16330:16348   */\n      add\n        /* \"--CODEGEN--\":16321:16327   */\n      dup5\n        /* \"--CODEGEN--\":16277:16349   */\n      jump(tag_385)\n        /* \"--CODEGEN--\":16366:16567   */\n    tag_49:\n        /* \"--CODEGEN--\":16478:16480   */\n      0x20\n        /* \"--CODEGEN--\":16463:16481   */\n      dup2\n      add\n        /* \"--CODEGEN--\":16492:16557   */\n      tag_144\n        /* \"--CODEGEN--\":16467:16476   */\n      dup3\n        /* \"--CODEGEN--\":16530:16536   */\n      dup5\n        /* \"--CODEGEN--\":16492:16557   */\n      jump(tag_388)\n        /* \"--CODEGEN--\":16574:16787   */\n    tag_57:\n        /* \"--CODEGEN--\":16692:16694   */\n      0x20\n        /* \"--CODEGEN--\":16677:16695   */\n      dup2\n      add\n        /* \"--CODEGEN--\":16706:16777   */\n      tag_144\n        /* \"--CODEGEN--\":16681:16690   */\n      dup3\n        /* \"--CODEGEN--\":16750:16756   */\n      dup5\n        /* \"--CODEGEN--\":16706:16777   */\n      jump(tag_391)\n        /* \"--CODEGEN--\":16794:17565   */\n    tag_251:\n        /* \"--CODEGEN--\":17052:17055   */\n      0xc0\n        /* \"--CODEGEN--\":17037:17056   */\n      dup2\n      add\n        /* \"--CODEGEN--\":17067:17138   */\n      tag_480\n        /* \"--CODEGEN--\":17041:17050   */\n      dup3\n        /* \"--CODEGEN--\":17111:17117   */\n      dup10\n        /* \"--CODEGEN--\":17067:17138   */\n      jump(tag_391)\n    tag_480:\n        /* \"--CODEGEN--\":17149:17221   */\n      tag_481\n        /* \"--CODEGEN--\":17217:17219   */\n      0x20\n        /* \"--CODEGEN--\":17206:17215   */\n      dup4\n        /* \"--CODEGEN--\":17202:17220   */\n      add\n        /* \"--CODEGEN--\":17193:17199   */\n      dup9\n        /* \"--CODEGEN--\":17149:17221   */\n      jump(tag_385)\n    tag_481:\n        /* \"--CODEGEN--\":17232:17304   */\n      tag_482\n        /* \"--CODEGEN--\":17300:17302   */\n      0x40\n        /* \"--CODEGEN--\":17289:17298   */\n      dup4\n        /* \"--CODEGEN--\":17285:17303   */\n      add\n        /* \"--CODEGEN--\":17276:17282   */\n      dup8\n        /* \"--CODEGEN--\":17232:17304   */\n      jump(tag_385)\n    tag_482:\n        /* \"--CODEGEN--\":17315:17387   */\n      tag_483\n        /* \"--CODEGEN--\":17383:17385   */\n      0x60\n        /* \"--CODEGEN--\":17372:17381   */\n      dup4\n        /* \"--CODEGEN--\":17368:17386   */\n      add\n        /* \"--CODEGEN--\":17359:17365   */\n      dup7\n        /* \"--CODEGEN--\":17315:17387   */\n      jump(tag_391)\n    tag_483:\n        /* \"--CODEGEN--\":17398:17471   */\n      tag_484\n        /* \"--CODEGEN--\":17466:17469   */\n      0x80\n        /* \"--CODEGEN--\":17455:17464   */\n      dup4\n        /* \"--CODEGEN--\":17451:17470   */\n      add\n        /* \"--CODEGEN--\":17442:17448   */\n      dup6\n        /* \"--CODEGEN--\":17398:17471   */\n      jump(tag_391)\n    tag_484:\n        /* \"--CODEGEN--\":17482:17555   */\n      tag_485\n        /* \"--CODEGEN--\":17550:17553   */\n      0xa0\n        /* \"--CODEGEN--\":17539:17548   */\n      dup4\n        /* \"--CODEGEN--\":17535:17554   */\n      add\n        /* \"--CODEGEN--\":17526:17532   */\n      dup5\n        /* \"--CODEGEN--\":17482:17555   */\n      jump(tag_391)\n    tag_485:\n        /* \"--CODEGEN--\":17023:17565   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":17572:18119   */\n    tag_226:\n        /* \"--CODEGEN--\":17774:17777   */\n      0x80\n        /* \"--CODEGEN--\":17759:17778   */\n      dup2\n      add\n        /* \"--CODEGEN--\":17789:17860   */\n      tag_486\n        /* \"--CODEGEN--\":17763:17772   */\n      dup3\n        /* \"--CODEGEN--\":17833:17839   */\n      dup8\n        /* \"--CODEGEN--\":17789:17860   */\n      jump(tag_391)\n    tag_486:\n        /* \"--CODEGEN--\":17871:17943   */\n      tag_487\n        /* \"--CODEGEN--\":17939:17941   */\n      0x20\n        /* \"--CODEGEN--\":17928:17937   */\n      dup4\n        /* \"--CODEGEN--\":17924:17942   */\n      add\n        /* \"--CODEGEN--\":17915:17921   */\n      dup7\n        /* \"--CODEGEN--\":17871:17943   */\n      jump(tag_385)\n    tag_487:\n        /* \"--CODEGEN--\":17954:18026   */\n      tag_488\n        /* \"--CODEGEN--\":18022:18024   */\n      0x40\n        /* \"--CODEGEN--\":18011:18020   */\n      dup4\n        /* \"--CODEGEN--\":18007:18025   */\n      add\n        /* \"--CODEGEN--\":17998:18004   */\n      dup6\n        /* \"--CODEGEN--\":17954:18026   */\n      jump(tag_391)\n    tag_488:\n        /* \"--CODEGEN--\":18037:18109   */\n      tag_489\n        /* \"--CODEGEN--\":18105:18107   */\n      0x60\n        /* \"--CODEGEN--\":18094:18103   */\n      dup4\n        /* \"--CODEGEN--\":18090:18108   */\n      add\n        /* \"--CODEGEN--\":18081:18087   */\n      dup5\n        /* \"--CODEGEN--\":18037:18109   */\n      jump(tag_391)\n    tag_489:\n        /* \"--CODEGEN--\":17745:18119   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":18126:18673   */\n    tag_222:\n        /* \"--CODEGEN--\":18328:18331   */\n      0x80\n        /* \"--CODEGEN--\":18313:18332   */\n      dup2\n      add\n        /* \"--CODEGEN--\":18343:18414   */\n      tag_490\n        /* \"--CODEGEN--\":18317:18326   */\n      dup3\n        /* \"--CODEGEN--\":18387:18393   */\n      dup8\n        /* \"--CODEGEN--\":18343:18414   */\n      jump(tag_391)\n    tag_490:\n        /* \"--CODEGEN--\":18425:18497   */\n      tag_491\n        /* \"--CODEGEN--\":18493:18495   */\n      0x20\n        /* \"--CODEGEN--\":18482:18491   */\n      dup4\n        /* \"--CODEGEN--\":18478:18496   */\n      add\n        /* \"--CODEGEN--\":18469:18475   */\n      dup7\n        /* \"--CODEGEN--\":18425:18497   */\n      jump(tag_391)\n    tag_491:\n        /* \"--CODEGEN--\":18508:18580   */\n      tag_492\n        /* \"--CODEGEN--\":18576:18578   */\n      0x40\n        /* \"--CODEGEN--\":18565:18574   */\n      dup4\n        /* \"--CODEGEN--\":18561:18579   */\n      add\n        /* \"--CODEGEN--\":18552:18558   */\n      dup6\n        /* \"--CODEGEN--\":18508:18580   */\n      jump(tag_391)\n    tag_492:\n        /* \"--CODEGEN--\":18591:18663   */\n      tag_489\n        /* \"--CODEGEN--\":18659:18661   */\n      0x60\n        /* \"--CODEGEN--\":18648:18657   */\n      dup4\n        /* \"--CODEGEN--\":18644:18662   */\n      add\n        /* \"--CODEGEN--\":18635:18641   */\n      dup5\n        /* \"--CODEGEN--\":18591:18663   */\n      jump(tag_385)\n        /* \"--CODEGEN--\":18680:19219   */\n    tag_230:\n        /* \"--CODEGEN--\":18878:18881   */\n      0x80\n        /* \"--CODEGEN--\":18863:18882   */\n      dup2\n      add\n        /* \"--CODEGEN--\":18893:18964   */\n      tag_494\n        /* \"--CODEGEN--\":18867:18876   */\n      dup3\n        /* \"--CODEGEN--\":18937:18943   */\n      dup8\n        /* \"--CODEGEN--\":18893:18964   */\n      jump(tag_391)\n    tag_494:\n        /* \"--CODEGEN--\":18975:19043   */\n      tag_487\n        /* \"--CODEGEN--\":19039:19041   */\n      0x20\n        /* \"--CODEGEN--\":19028:19037   */\n      dup4\n        /* \"--CODEGEN--\":19024:19042   */\n      add\n        /* \"--CODEGEN--\":19015:19021   */\n      dup7\n        /* \"--CODEGEN--\":18975:19043   */\n      jump(tag_460)\n        /* \"--CODEGEN--\":19226:19519   */\n    tag_39:\n        /* \"--CODEGEN--\":19360:19362   */\n      0x20\n        /* \"--CODEGEN--\":19374:19421   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":19345:19363   */\n      dup2\n      add\n        /* \"--CODEGEN--\":19435:19509   */\n      tag_153\n        /* \"--CODEGEN--\":19345:19363   */\n      dup2\n        /* \"--CODEGEN--\":19495:19501   */\n      dup5\n        /* \"--CODEGEN--\":19435:19509   */\n      jump(tag_398)\n        /* \"--CODEGEN--\":19834:20241   */\n    tag_240:\n        /* \"--CODEGEN--\":20025:20027   */\n      0x20\n        /* \"--CODEGEN--\":20039:20086   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":20010:20028   */\n      dup2\n      add\n        /* \"--CODEGEN--\":20100:20231   */\n      tag_144\n        /* \"--CODEGEN--\":20010:20028   */\n      dup2\n        /* \"--CODEGEN--\":20100:20231   */\n      jump(tag_413)\n        /* \"--CODEGEN--\":20248:20655   */\n    tag_294:\n        /* \"--CODEGEN--\":20439:20441   */\n      0x20\n        /* \"--CODEGEN--\":20453:20500   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":20424:20442   */\n      dup2\n      add\n        /* \"--CODEGEN--\":20514:20645   */\n      tag_144\n        /* \"--CODEGEN--\":20424:20442   */\n      dup2\n        /* \"--CODEGEN--\":20514:20645   */\n      jump(tag_418)\n        /* \"--CODEGEN--\":20662:21069   */\n    tag_234:\n        /* \"--CODEGEN--\":20853:20855   */\n      0x20\n        /* \"--CODEGEN--\":20867:20914   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":20838:20856   */\n      dup2\n      add\n        /* \"--CODEGEN--\":20928:21059   */\n      tag_144\n        /* \"--CODEGEN--\":20838:20856   */\n      dup2\n        /* \"--CODEGEN--\":20928:21059   */\n      jump(tag_420)\n        /* \"--CODEGEN--\":21076:21483   */\n    tag_198:\n        /* \"--CODEGEN--\":21267:21269   */\n      0x20\n        /* \"--CODEGEN--\":21281:21328   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":21252:21270   */\n      dup2\n      add\n        /* \"--CODEGEN--\":21342:21473   */\n      tag_144\n        /* \"--CODEGEN--\":21252:21270   */\n      dup2\n        /* \"--CODEGEN--\":21342:21473   */\n      jump(tag_422)\n        /* \"--CODEGEN--\":21490:21897   */\n    tag_173:\n        /* \"--CODEGEN--\":21681:21683   */\n      0x20\n        /* \"--CODEGEN--\":21695:21742   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":21666:21684   */\n      dup2\n      add\n        /* \"--CODEGEN--\":21756:21887   */\n      tag_144\n        /* \"--CODEGEN--\":21666:21684   */\n      dup2\n        /* \"--CODEGEN--\":21756:21887   */\n      jump(tag_424)\n        /* \"--CODEGEN--\":21904:22311   */\n    tag_170:\n        /* \"--CODEGEN--\":22095:22097   */\n      0x20\n        /* \"--CODEGEN--\":22109:22156   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":22080:22098   */\n      dup2\n      add\n        /* \"--CODEGEN--\":22170:22301   */\n      tag_144\n        /* \"--CODEGEN--\":22080:22098   */\n      dup2\n        /* \"--CODEGEN--\":22170:22301   */\n      jump(tag_428)\n        /* \"--CODEGEN--\":22318:22725   */\n    tag_286:\n        /* \"--CODEGEN--\":22509:22511   */\n      0x20\n        /* \"--CODEGEN--\":22523:22570   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":22494:22512   */\n      dup2\n      add\n        /* \"--CODEGEN--\":22584:22715   */\n      tag_144\n        /* \"--CODEGEN--\":22494:22512   */\n      dup2\n        /* \"--CODEGEN--\":22584:22715   */\n      jump(tag_432)\n        /* \"--CODEGEN--\":22732:23139   */\n    tag_300:\n        /* \"--CODEGEN--\":22923:22925   */\n      0x20\n        /* \"--CODEGEN--\":22937:22984   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":22908:22926   */\n      dup2\n      add\n        /* \"--CODEGEN--\":22998:23129   */\n      tag_144\n        /* \"--CODEGEN--\":22908:22926   */\n      dup2\n        /* \"--CODEGEN--\":22998:23129   */\n      jump(tag_434)\n        /* \"--CODEGEN--\":23146:23553   */\n    tag_183:\n        /* \"--CODEGEN--\":23337:23339   */\n      0x20\n        /* \"--CODEGEN--\":23351:23398   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":23322:23340   */\n      dup2\n      add\n        /* \"--CODEGEN--\":23412:23543   */\n      tag_144\n        /* \"--CODEGEN--\":23322:23340   */\n      dup2\n        /* \"--CODEGEN--\":23412:23543   */\n      jump(tag_436)\n        /* \"--CODEGEN--\":23560:23967   */\n    tag_167:\n        /* \"--CODEGEN--\":23751:23753   */\n      0x20\n        /* \"--CODEGEN--\":23765:23812   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":23736:23754   */\n      dup2\n      add\n        /* \"--CODEGEN--\":23826:23957   */\n      tag_144\n        /* \"--CODEGEN--\":23736:23754   */\n      dup2\n        /* \"--CODEGEN--\":23826:23957   */\n      jump(tag_438)\n        /* \"--CODEGEN--\":23974:24381   */\n    tag_270:\n        /* \"--CODEGEN--\":24165:24167   */\n      0x20\n        /* \"--CODEGEN--\":24179:24226   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":24150:24168   */\n      dup2\n      add\n        /* \"--CODEGEN--\":24240:24371   */\n      tag_144\n        /* \"--CODEGEN--\":24150:24168   */\n      dup2\n        /* \"--CODEGEN--\":24240:24371   */\n      jump(tag_440)\n        /* \"--CODEGEN--\":24388:24795   */\n    tag_237:\n        /* \"--CODEGEN--\":24579:24581   */\n      0x20\n        /* \"--CODEGEN--\":24593:24640   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":24564:24582   */\n      dup2\n      add\n        /* \"--CODEGEN--\":24654:24785   */\n      tag_144\n        /* \"--CODEGEN--\":24564:24582   */\n      dup2\n        /* \"--CODEGEN--\":24654:24785   */\n      jump(tag_442)\n        /* \"--CODEGEN--\":24802:25209   */\n    tag_283:\n        /* \"--CODEGEN--\":24993:24995   */\n      0x20\n        /* \"--CODEGEN--\":25007:25054   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":24978:24996   */\n      dup2\n      add\n        /* \"--CODEGEN--\":25068:25199   */\n      tag_144\n        /* \"--CODEGEN--\":24978:24996   */\n      dup2\n        /* \"--CODEGEN--\":25068:25199   */\n      jump(tag_444)\n        /* \"--CODEGEN--\":25216:25623   */\n    tag_263:\n        /* \"--CODEGEN--\":25407:25409   */\n      0x20\n        /* \"--CODEGEN--\":25421:25468   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":25392:25410   */\n      dup2\n      add\n        /* \"--CODEGEN--\":25482:25613   */\n      tag_144\n        /* \"--CODEGEN--\":25392:25410   */\n      dup2\n        /* \"--CODEGEN--\":25482:25613   */\n      jump(tag_446)\n        /* \"--CODEGEN--\":25630:26037   */\n    tag_257:\n        /* \"--CODEGEN--\":25821:25823   */\n      0x20\n        /* \"--CODEGEN--\":25835:25882   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":25806:25824   */\n      dup2\n      add\n        /* \"--CODEGEN--\":25896:26027   */\n      tag_144\n        /* \"--CODEGEN--\":25806:25824   */\n      dup2\n        /* \"--CODEGEN--\":25896:26027   */\n      jump(tag_450)\n        /* \"--CODEGEN--\":26044:26451   */\n    tag_260:\n        /* \"--CODEGEN--\":26235:26237   */\n      0x20\n        /* \"--CODEGEN--\":26249:26296   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":26220:26238   */\n      dup2\n      add\n        /* \"--CODEGEN--\":26310:26441   */\n      tag_144\n        /* \"--CODEGEN--\":26220:26238   */\n      dup2\n        /* \"--CODEGEN--\":26310:26441   */\n      jump(tag_452)\n        /* \"--CODEGEN--\":26678:26887   */\n    tag_84:\n        /* \"--CODEGEN--\":26794:26796   */\n      0x20\n        /* \"--CODEGEN--\":26779:26797   */\n      dup2\n      add\n        /* \"--CODEGEN--\":26808:26877   */\n      tag_144\n        /* \"--CODEGEN--\":26783:26792   */\n      dup3\n        /* \"--CODEGEN--\":26850:26856   */\n      dup5\n        /* \"--CODEGEN--\":26808:26877   */\n      jump(tag_457)\n        /* \"--CODEGEN--\":26894:27210   */\n    tag_140:\n        /* \"--CODEGEN--\":27036:27038   */\n      0x40\n        /* \"--CODEGEN--\":27021:27039   */\n      dup2\n      add\n        /* \"--CODEGEN--\":27050:27119   */\n      tag_518\n        /* \"--CODEGEN--\":27025:27034   */\n      dup3\n        /* \"--CODEGEN--\":27092:27098   */\n      dup6\n        /* \"--CODEGEN--\":27050:27119   */\n      jump(tag_457)\n    tag_518:\n        /* \"--CODEGEN--\":27130:27200   */\n      tag_153\n        /* \"--CODEGEN--\":27196:27198   */\n      0x20\n        /* \"--CODEGEN--\":27185:27194   */\n      dup4\n        /* \"--CODEGEN--\":27181:27199   */\n      add\n        /* \"--CODEGEN--\":27172:27178   */\n      dup5\n        /* \"--CODEGEN--\":27130:27200   */\n      jump(tag_466)\n        /* \"--CODEGEN--\":27217:27422   */\n    tag_72:\n        /* \"--CODEGEN--\":27331:27333   */\n      0x20\n        /* \"--CODEGEN--\":27316:27334   */\n      dup2\n      add\n        /* \"--CODEGEN--\":27345:27412   */\n      tag_144\n        /* \"--CODEGEN--\":27320:27329   */\n      dup3\n        /* \"--CODEGEN--\":27385:27391   */\n      dup5\n        /* \"--CODEGEN--\":27345:27412   */\n      jump(tag_460)\n        /* \"--CODEGEN--\":27429:27640   */\n    tag_150:\n        /* \"--CODEGEN--\":27546:27548   */\n      0x20\n        /* \"--CODEGEN--\":27531:27549   */\n      dup2\n      add\n        /* \"--CODEGEN--\":27560:27630   */\n      tag_144\n        /* \"--CODEGEN--\":27535:27544   */\n      dup3\n        /* \"--CODEGEN--\":27603:27609   */\n      dup5\n        /* \"--CODEGEN--\":27560:27630   */\n      jump(tag_463)\n        /* \"--CODEGEN--\":27647:27856   */\n    tag_103:\n        /* \"--CODEGEN--\":27763:27765   */\n      0x20\n        /* \"--CODEGEN--\":27748:27766   */\n      dup2\n      add\n        /* \"--CODEGEN--\":27777:27846   */\n      tag_144\n        /* \"--CODEGEN--\":27752:27761   */\n      dup3\n        /* \"--CODEGEN--\":27819:27825   */\n      dup5\n        /* \"--CODEGEN--\":27777:27846   */\n      jump(tag_466)\n        /* \"--CODEGEN--\":27863:28183   */\n    tag_335:\n        /* \"--CODEGEN--\":28007:28009   */\n      0x40\n        /* \"--CODEGEN--\":27992:28010   */\n      dup2\n      add\n        /* \"--CODEGEN--\":28021:28091   */\n      tag_523\n        /* \"--CODEGEN--\":27996:28005   */\n      dup3\n        /* \"--CODEGEN--\":28064:28070   */\n      dup6\n        /* \"--CODEGEN--\":28021:28091   */\n      jump(tag_463)\n    tag_523:\n        /* \"--CODEGEN--\":28102:28173   */\n      tag_153\n        /* \"--CODEGEN--\":28169:28171   */\n      0x20\n        /* \"--CODEGEN--\":28158:28167   */\n      dup4\n        /* \"--CODEGEN--\":28154:28172   */\n      add\n        /* \"--CODEGEN--\":28145:28151   */\n      dup5\n        /* \"--CODEGEN--\":28102:28173   */\n      jump(tag_463)\n        /* \"--CODEGEN--\":28190:28308   */\n    tag_409:\n        /* \"--CODEGEN--\":28274:28286   */\n      mload\n      swap1\n        /* \"--CODEGEN--\":28245:28308   */\n      jump\n        /* \"--CODEGEN--\":28445:28608   */\n    tag_402:\n        /* \"--CODEGEN--\":28548:28567   */\n      swap1\n      dup2\n      mstore\n        /* \"--CODEGEN--\":28597:28601   */\n      0x20\n        /* \"--CODEGEN--\":28588:28602   */\n      add\n      swap1\n        /* \"--CODEGEN--\":28541:28608   */\n      jump\n        /* \"--CODEGEN--\":28617:28762   */\n    tag_417:\n        /* \"--CODEGEN--\":28753:28756   */\n      swap2\n        /* \"--CODEGEN--\":28731:28762   */\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":28770:28861   */\n    tag_387:\n      0x00\n        /* \"--CODEGEN--\":28832:28856   */\n      tag_144\n        /* \"--CODEGEN--\":28850:28855   */\n      dup3\n        /* \"--CODEGEN--\":28832:28856   */\n      jump(tag_526)\n        /* \"--CODEGEN--\":28868:28953   */\n    tag_390:\n        /* \"--CODEGEN--\":28934:28947   */\n      iszero\n        /* \"--CODEGEN--\":28927:28948   */\n      iszero\n      swap1\n        /* \"--CODEGEN--\":28910:28953   */\n      jump\n        /* \"--CODEGEN--\":28960:29032   */\n    tag_393:\n        /* \"--CODEGEN--\":29022:29027   */\n      swap1\n        /* \"--CODEGEN--\":29005:29032   */\n      jump\n        /* \"--CODEGEN--\":29039:29160   */\n    tag_526:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"--CODEGEN--\":29101:29155   */\n      and\n      swap1\n        /* \"--CODEGEN--\":29084:29160   */\n      jump\n        /* \"--CODEGEN--\":29246:29334   */\n    tag_459:\n        /* \"--CODEGEN--\":29318:29328   */\n      0xffffffff\n        /* \"--CODEGEN--\":29307:29329   */\n      and\n      swap1\n        /* \"--CODEGEN--\":29290:29334   */\n      jump\n        /* \"--CODEGEN--\":29341:29422   */\n    tag_462:\n        /* \"--CODEGEN--\":29412:29416   */\n      0xff\n        /* \"--CODEGEN--\":29401:29417   */\n      and\n      swap1\n        /* \"--CODEGEN--\":29384:29422   */\n      jump\n        /* \"--CODEGEN--\":29429:29533   */\n    tag_468:\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"--CODEGEN--\":29490:29528   */\n      and\n      swap1\n        /* \"--CODEGEN--\":29473:29533   */\n      jump\n        /* \"--CODEGEN--\":29540:29646   */\n    tag_465:\n      0x00\n        /* \"--CODEGEN--\":29618:29641   */\n      tag_144\n        /* \"--CODEGEN--\":29635:29640   */\n      dup3\n        /* \"--CODEGEN--\":29618:29641   */\n      jump(tag_468)\n        /* \"--CODEGEN--\":29654:29922   */\n    tag_404:\n        /* \"--CODEGEN--\":29719:29720   */\n      0x00\n        /* \"--CODEGEN--\":29726:29827   */\n    tag_528:\n        /* \"--CODEGEN--\":29740:29746   */\n      dup4\n        /* \"--CODEGEN--\":29737:29738   */\n      dup2\n        /* \"--CODEGEN--\":29734:29747   */\n      lt\n        /* \"--CODEGEN--\":29726:29827   */\n      iszero\n      tag_530\n      jumpi\n        /* \"--CODEGEN--\":29807:29818   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":29801:29819   */\n      mload\n        /* \"--CODEGEN--\":29788:29799   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":29781:29820   */\n      mstore\n        /* \"--CODEGEN--\":29762:29764   */\n      0x20\n        /* \"--CODEGEN--\":29755:29765   */\n      add\n        /* \"--CODEGEN--\":29726:29827   */\n      jump(tag_528)\n    tag_530:\n        /* \"--CODEGEN--\":29842:29848   */\n      dup4\n        /* \"--CODEGEN--\":29839:29840   */\n      dup2\n        /* \"--CODEGEN--\":29836:29849   */\n      gt\n        /* \"--CODEGEN--\":29833:29835   */\n      iszero\n      tag_322\n      jumpi\n      pop\n      pop\n        /* \"--CODEGEN--\":29907:29908   */\n      0x00\n        /* \"--CODEGEN--\":29889:29905   */\n      swap2\n      add\n        /* \"--CODEGEN--\":29882:29909   */\n      mstore\n        /* \"--CODEGEN--\":29703:29922   */\n      jump\n        /* \"--CODEGEN--\":30011:30108   */\n    tag_406:\n        /* \"--CODEGEN--\":30099:30101   */\n      0x1f\n        /* \"--CODEGEN--\":30079:30093   */\n      add\n      not(0x1f)\n        /* \"--CODEGEN--\":30075:30103   */\n      and\n      swap1\n        /* \"--CODEGEN--\":30059:30108   */\n      jump\n        /* \"--CODEGEN--\":30116:30233   */\n    tag_342:\n        /* \"--CODEGEN--\":30185:30209   */\n      tag_532\n        /* \"--CODEGEN--\":30203:30208   */\n      dup2\n        /* \"--CODEGEN--\":30185:30209   */\n      jump(tag_387)\n    tag_532:\n        /* \"--CODEGEN--\":30178:30183   */\n      dup2\n        /* \"--CODEGEN--\":30175:30210   */\n      eq\n        /* \"--CODEGEN--\":30165:30167   */\n      tag_192\n      jumpi\n        /* \"--CODEGEN--\":30224:30225   */\n      0x00\n        /* \"--CODEGEN--\":30221:30222   */\n      dup1\n        /* \"--CODEGEN--\":30214:30226   */\n      revert\n        /* \"--CODEGEN--\":30240:30357   */\n    tag_345:\n        /* \"--CODEGEN--\":30309:30333   */\n      tag_532\n        /* \"--CODEGEN--\":30327:30332   */\n      dup2\n        /* \"--CODEGEN--\":30309:30333   */\n      jump(tag_393)\n        /* \"--CODEGEN--\":30488:30603   */\n    tag_351:\n        /* \"--CODEGEN--\":30556:30579   */\n      tag_532\n        /* \"--CODEGEN--\":30573:30578   */\n      dup2\n        /* \"--CODEGEN--\":30556:30579   */\n      jump(tag_459)\n        /* \"--CODEGEN--\":30610:30723   */\n    tag_354:\n        /* \"--CODEGEN--\":30677:30699   */\n      tag_532\n        /* \"--CODEGEN--\":30693:30698   */\n      dup2\n        /* \"--CODEGEN--\":30677:30699   */\n      jump(tag_462)\n    stop\n    data_0ab5eae08d50cc345c58c2d7d67f9034a98d0a88dd540314c408c39a8dcec01d 556e693a3a6d696e743a207472616e7366657220616d6f756e74206f766572666c6f7773\n    data_136758788d48ec4d9744ba8c2136a9c9406d6c92cd4a81eff0de4942b636db13 556e693a3a7472616e7366657246726f6d3a207472616e7366657220616d6f756e742065786365656473207370656e64657220616c6c6f77616e6365\n    data_1ef2347f5dbb97e8eb7bc1442a128a1c6e65386b013257fe2b8ad95aaaa96ab8 556e693a3a6d696e743a20746f74616c537570706c7920657863656564732039362062697473\n    data_3230ba2cb739b33589720b8a5892642694535e935234939514431ff16907d24a 556e693a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_58da0b91010307ee6a63257c5283618928105e355857d8f79cf7e017ad7082f4 556e693a3a7065726d69743a20616d6f756e7420657863656564732039362062697473\n    data_5c6c891434a3c5951db59f5fe43d566b04bf54e07bc444b7f9f72601e608dc42 556e693a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f7773\n    data_66157ef8d926a3327823fecd4ce53edfcb6533c37c90dc98acfb91e4f2854725 556e693a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473\n    data_8f9e8e1e6816d4a772d233c08b8292a576126f7dbd1d9b7cd30ef07f7c3d78d2 556e693a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f7773\n    data_9bc67db7413f33b8f7a9995149809b7b3a4a83b5ba884084bea06cfb35986555 556e693a3a7472616e736665723a20616d6f756e7420657863656564732039362062697473\n    data_bcb6733e7ac2aee3c3602ee664d4b3cb251e429df5c7e9148d412d0b60f07b16 556e693a3a6d696e743a20616d6f756e7420657863656564732039362062697473\n    data_cb3e128da7f3f16c83a901cce3ab145c66bad45a0cd648091fecc9964ebf42fe 556e693a3a617070726f76653a20616d6f756e7420657863656564732039362062697473\n    data_f838ee8b15c3d07740bb9b304b8146ec63bb435a7703825b5e6424ee2072674a 556e693a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e74206f766572666c6f7773\n\n    auxdata: 0xa365627a7a72315820b228f14032f179f6e81f367b78ff3ff6cdc127c0f42b53f91c18ec8ff8135cbe6c6578706572696d656e74616cf564736f6c63430005110040\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526b033b2e3c9fd0803ce80000006000553480156200002157600080fd5b5060405162002a5138038062002a51833981016040819052620000449162000171565b42811015620000705760405162461bcd60e51b8152600401620000679062000273565b60405180910390fd5b600080546001600160a01b0385168083526004602052604080842080546001600160601b0319166001600160601b0390941693909317909255825491519092917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91620000de919062000285565b60405180910390a3600180546001600160a01b0319166001600160a01b0384811691909117918290556040517f3b0007eb941cf645526cbb3a4fdaecda9d28ce4843167d9263b536a1f1edc0f6926200013d926000929116906200024d565b60405180910390a160025550620002ec9050565b80516200015e81620002c7565b92915050565b80516200015e81620002e1565b6000806000606084860312156200018757600080fd5b600062000195868662000151565b9350506020620001a88682870162000151565b9250506040620001bb8682870162000164565b9150509250925092565b620001d081620002b3565b82525050565b620001d0816200029e565b6000620001f060398362000295565b7f556e693a3a636f6e7374727563746f723a206d696e74696e672063616e206f6e81527f6c7920626567696e206166746572206465706c6f796d656e7400000000000000602082015260400192915050565b620001d081620002b0565b604081016200025d8285620001c5565b6200026c6020830184620001d6565b9392505050565b602080825281016200015e81620001e1565b602081016200015e828462000242565b90815260200190565b60006001600160a01b0382166200015e565b90565b60006200015e8260006200015e826200029e565b620002d2816200029e565b8114620002de57600080fd5b50565b620002d281620002b0565b61275580620002fc6000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80636fcfff45116100f9578063b4b5ea5711610097578063dd62ed3e11610071578063dd62ed3e1461035b578063e7a324dc1461036e578063f1127ed814610376578063fca3b5aa14610397576101a9565b8063b4b5ea5714610322578063c3cda52014610335578063d505accf14610348576101a9565b8063782d6fe1116100d3578063782d6fe1146102d45780637ecebe00146102f457806395d89b4114610307578063a9059cbb1461030f576101a9565b80636fcfff45146102a657806370a08231146102b957806376c71ca1146102cc576101a9565b806330adf81f1161016657806340c10f191161014057806340c10f1914610256578063587cde1e1461026b5780635c11d62f1461027e5780635c19a95c14610293576101a9565b806330adf81f1461023157806330b36cef14610239578063313ce56714610241576101a9565b806306fdde03146101ae57806307546172146101cc578063095ea7b3146101e157806318160ddd1461020157806320606b701461021657806323b872dd1461021e575b600080fd5b6101b66103aa565b6040516101c391906122e0565b60405180910390f35b6101d46103cd565b6040516101c391906121b3565b6101f46101ef366004611a1b565b6103dc565b6040516101c391906121dc565b61020961049b565b6040516101c391906121ea565b6102096104a1565b6101f461022c366004611932565b6104b8565b610209610601565b61020961060d565b610249610613565b6040516101c3919061241a565b610269610264366004611a1b565b610618565b005b6101d46102793660046118d2565b610833565b61028661084e565b6040516101c391906123f1565b6102696102a13660046118d2565b610856565b6102866102b43660046118d2565b610863565b6102096102c73660046118d2565b61087b565b61024961089f565b6102e76102e2366004611a1b565b6108a4565b6040516101c39190612436565b6102096103023660046118d2565b610ab2565b6101b6610ac4565b6101f461031d366004611a1b565b610ae3565b6102e76103303660046118d2565b610b1f565b610269610343366004611a4b565b610b8f565b61026961035636600461197f565b610d78565b6102096103693660046118f8565b611063565b610209611097565b610389610384366004611ad2565b6110a3565b6040516101c39291906123ff565b6102696103a53660046118d2565b6110d8565b604051806040016040528060078152602001660556e69737761760cc1b81525081565b6001546001600160a01b031681565b6000806000198314156103f25750600019610417565b610414836040518060600160405280602481526020016126c06024913961116b565b90505b3360008181526003602090815260408083206001600160a01b03891680855292529182902080546001600160601b0319166001600160601b03861617905590519091907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610487908590612428565b60405180910390a360019150505b92915050565b60005481565b6040516104ad9061219d565b604051809103902081565b6001600160a01b03831660009081526003602090815260408083203380855290835281842054825160608101909352602480845291936001600160601b0390911692859261051092889291906126c09083013961116b565b9050866001600160a01b0316836001600160a01b03161415801561053d57506001600160601b0382811614155b156105e757600061056783836040518060600160405280603c8152602001612540603c913961119a565b6001600160a01b038981166000818152600360209081526040808320948a16808452949091529081902080546001600160601b0319166001600160601b0386161790555192935090917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906105dd908590612428565b60405180910390a3505b6105f28787836111d9565b600193505050505b9392505050565b6040516104ad90612192565b60025481565b601281565b6001546001600160a01b0316331461064b5760405162461bcd60e51b815260040161064290612381565b60405180910390fd5b60025442101561066d5760405162461bcd60e51b815260040161064290612341565b6001600160a01b0382166106935760405162461bcd60e51b815260040161064290612331565b6106a1426301e1338061137f565b60028190555060006106cb8260405180606001604052806021815260200161269f6021913961116b565b90506106e76106e0600054600260ff166113a4565b60646113de565b816001600160601b0316111561070f5760405162461bcd60e51b815260040161064290612371565b610745610727600054836001600160601b031661137f565b60405180606001604052806026815260200161257c6026913961116b565b6001600160601b0390811660009081556001600160a01b038516815260046020908152604091829020548251606081019093526024808452610797949190911692859290919061251c90830139611420565b6001600160a01b03841660008181526004602052604080822080546001600160601b0319166001600160601b03959095169490941790935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610801908590612428565b60405180910390a36001600160a01b0380841660009081526005602052604081205461082e92168361145c565b505050565b6005602052600090815260409020546001600160a01b031681565b6301e1338081565b61086033826115ee565b50565b60076020526000908152604090205463ffffffff1681565b6001600160a01b03166000908152600460205260409020546001600160601b031690565b600281565b60004382106108c55760405162461bcd60e51b815260040161064290612321565b6001600160a01b03831660009081526007602052604090205463ffffffff16806108f3576000915050610495565b6001600160a01b038416600090815260066020908152604080832063ffffffff60001986018116855292529091205416831061096f576001600160a01b03841660009081526006602090815260408083206000199490940163ffffffff1683529290522054600160201b90046001600160601b03169050610495565b6001600160a01b038416600090815260066020908152604080832083805290915290205463ffffffff168310156109aa576000915050610495565b600060001982015b8163ffffffff168163ffffffff161115610a6d57600282820363ffffffff160481036109dc61188f565b506001600160a01b038716600090815260066020908152604080832063ffffffff858116855290835292819020815180830190925254928316808252600160201b9093046001600160601b03169181019190915290871415610a48576020015194506104959350505050565b805163ffffffff16871115610a5f57819350610a66565b6001820392505b50506109b2565b506001600160a01b038516600090815260066020908152604080832063ffffffff909416835292905220546001600160601b03600160201b9091041691505092915050565b60086020526000908152604090205481565b60405180604001604052806003815260200162554e4960e81b81525081565b600080610b088360405180606001604052806025815260200161267a6025913961116b565b9050610b153385836111d9565b5060019392505050565b6001600160a01b03811660009081526007602052604081205463ffffffff1680610b4a5760006105fa565b6001600160a01b0383166000908152600660209081526040808320600019850163ffffffff168452909152902054600160201b90046001600160601b03169392505050565b6000604051610b9d9061219d565b6040805191829003822082820190915260078252660556e69737761760cc1b6020909201919091527f99c45e8ee5dde061ced9c812089094fbd28a020e7e37f2851198887e5ca64985610bee611678565b30604051602001610c029493929190612290565b6040516020818303038152906040528051906020012090506000604051610c28906121a8565b604051908190038120610c43918a908a908a90602001612252565b60405160208183030381529060405280519060200120905060008282604051602001610c70929190612161565b604051602081830303815290604052805190602001209050600060018288888860405160008152602001604052604051610cad94939291906122c5565b6020604051602081039080840390855afa158015610ccf573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610d025760405162461bcd60e51b815260040161064290612311565b6001600160a01b03811660009081526008602052604090208054600181019091558914610d415760405162461bcd60e51b8152600401610642906123a1565b87421115610d615760405162461bcd60e51b8152600401610642906122f1565b610d6b818b6115ee565b505050505b505050505050565b6000600019861415610d8d5750600019610db2565b610daf866040518060600160405280602381526020016125d76023913961116b565b90505b6000604051610dc09061219d565b6040805191829003822082820190915260078252660556e69737761760cc1b6020909201919091527f99c45e8ee5dde061ced9c812089094fbd28a020e7e37f2851198887e5ca64985610e11611678565b30604051602001610e259493929190612290565b6040516020818303038152906040528051906020012090506000604051610e4b90612192565b604080519182900382206001600160a01b038d16600090815260086020908152929020805460018101909155610e8d9391928e928e928e9290918e91016121f8565b60405160208183030381529060405280519060200120905060008282604051602001610eba929190612161565b604051602081830303815290604052805190602001209050600060018289898960405160008152602001604052604051610ef794939291906122c5565b6020604051602081039080840390855afa158015610f19573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610f4c5760405162461bcd60e51b8152600401610642906123d1565b8b6001600160a01b0316816001600160a01b031614610f7d5760405162461bcd60e51b8152600401610642906123e1565b88421115610f9d5760405162461bcd60e51b8152600401610642906123c1565b84600360008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160601b0302191690836001600160601b031602179055508a6001600160a01b03168c6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258760405161104d9190612428565b60405180910390a3505050505050505050505050565b6001600160a01b0391821660009081526003602090815260408083209390941682529190915220546001600160601b031690565b6040516104ad906121a8565b600660209081526000928352604080842090915290825290205463ffffffff811690600160201b90046001600160601b031682565b6001546001600160a01b031633146111025760405162461bcd60e51b815260040161064290612391565b6001546040517f3b0007eb941cf645526cbb3a4fdaecda9d28ce4843167d9263b536a1f1edc0f691611141916001600160a01b039091169084906121c1565b60405180910390a1600180546001600160a01b0319166001600160a01b0392909216919091179055565b600081600160601b84106111925760405162461bcd60e51b815260040161064291906122e0565b509192915050565b6000836001600160601b0316836001600160601b0316111582906111d15760405162461bcd60e51b815260040161064291906122e0565b505050900390565b6001600160a01b0383166111ff5760405162461bcd60e51b8152600401610642906123b1565b6001600160a01b0382166112255760405162461bcd60e51b815260040161064290612351565b6001600160a01b038316600090815260046020908152604091829020548251606081019093526035808452611270936001600160601b0390921692859291906125a29083013961119a565b6001600160a01b03848116600090815260046020908152604080832080546001600160601b0319166001600160601b0396871617905592861682529082902054825160608101909352602f8084526112d894919091169285929091906126e490830139611420565b6001600160a01b038381166000818152600460205260409081902080546001600160601b0319166001600160601b0395909516949094179093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611345908590612428565b60405180910390a36001600160a01b0380841660009081526005602052604080822054858416835291205461082e9291821691168361145c565b6000828201838110156105fa5760405162461bcd60e51b815260040161064290612301565b6000826113b357506000610495565b828202828482816113c057fe5b04146105fa5760405162461bcd60e51b815260040161064290612361565b60006105fa83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061167c565b6000838301826001600160601b0380871690831610156114535760405162461bcd60e51b815260040161064291906122e0565b50949350505050565b816001600160a01b0316836001600160a01b03161415801561148757506000816001600160601b0316115b1561082e576001600160a01b0383161561153f576001600160a01b03831660009081526007602052604081205463ffffffff1690816114c7576000611506565b6001600160a01b0385166000908152600660209081526040808320600019860163ffffffff168452909152902054600160201b90046001600160601b03165b9050600061152d82856040518060600160405280602781526020016126536027913961119a565b905061153b868484846116b3565b5050505b6001600160a01b0382161561082e576001600160a01b03821660009081526007602052604081205463ffffffff16908161157a5760006115b9565b6001600160a01b0384166000908152600660209081526040808320600019860163ffffffff168452909152902054600160201b90046001600160601b03165b905060006115e082856040518060600160405280602681526020016125fa60269139611420565b9050610d70858484846116b3565b6001600160a01b03808316600081815260056020818152604080842080546004845282862054949093528787166001600160a01b031984168117909155905191909516946001600160601b039092169391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a461167282848361145c565b50505050565b4690565b6000818361169d5760405162461bcd60e51b815260040161064291906122e0565b5060008385816116a957fe5b0495945050505050565b60006116d74360405180606001604052806033815260200161262060339139611868565b905060008463ffffffff1611801561172057506001600160a01b038516600090815260066020908152604080832063ffffffff6000198901811685529252909120548282169116145b1561177f576001600160a01b0385166000908152600660209081526040808320600019880163ffffffff168452909152902080546fffffffffffffffffffffffff000000001916600160201b6001600160601b0385160217905561181e565b60408051808201825263ffffffff80841682526001600160601b0380861660208085019182526001600160a01b038b166000818152600683528781208c871682528352878120965187549451909516600160201b026fffffffffffffffffffffffff000000001995871663ffffffff19958616179590951694909417909555938252600790935292909220805460018801909316929091169190911790555b846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248484604051611859929190612444565b60405180910390a25050505050565b600081600160201b84106111925760405162461bcd60e51b815260040161064291906122e0565b604080518082019091526000808252602082015290565b8035610495816124ec565b803561049581612500565b803561049581612509565b803561049581612512565b6000602082840312156118e457600080fd5b60006118f084846118a6565b949350505050565b6000806040838503121561190b57600080fd5b600061191785856118a6565b9250506020611928858286016118a6565b9150509250929050565b60008060006060848603121561194757600080fd5b600061195386866118a6565b9350506020611964868287016118a6565b9250506040611975868287016118b1565b9150509250925092565b600080600080600080600060e0888a03121561199a57600080fd5b60006119a68a8a6118a6565b97505060206119b78a828b016118a6565b96505060406119c88a828b016118b1565b95505060606119d98a828b016118b1565b94505060806119ea8a828b016118c7565b93505060a06119fb8a828b016118b1565b92505060c0611a0c8a828b016118b1565b91505092959891949750929550565b60008060408385031215611a2e57600080fd5b6000611a3a85856118a6565b9250506020611928858286016118b1565b60008060008060008060c08789031215611a6457600080fd5b6000611a7089896118a6565b9650506020611a8189828a016118b1565b9550506040611a9289828a016118b1565b9450506060611aa389828a016118c7565b9350506080611ab489828a016118b1565b92505060a0611ac589828a016118b1565b9150509295509295509295565b60008060408385031215611ae557600080fd5b6000611af185856118a6565b9250506020611928858286016118bc565b611b0b81612471565b82525050565b611b0b8161247c565b611b0b81612481565b611b0b611b2f82612481565b612481565b6000611b3f8261245f565b611b498185612463565b9350611b598185602086016124b6565b611b62816124e2565b9093019392505050565b6000611b79602583612463565b7f556e693a3a64656c656761746542795369673a207369676e61747572652065788152641c1a5c995960da1b602082015260400192915050565b6000611bc060028361246c565b61190160f01b815260020192915050565b6000611bde601b83612463565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000815260200192915050565b6000611c17602583612463565b7f556e693a3a64656c656761746542795369673a20696e76616c6964207369676e815264617475726560d81b602082015260400192915050565b6000611c5e602683612463565b7f556e693a3a6765745072696f72566f7465733a206e6f742079657420646574658152651c9b5a5b995960d21b602082015260400192915050565b6000611ca6602e83612463565b7f556e693a3a6d696e743a2063616e6e6f74207472616e7366657220746f20746881526d65207a65726f206164647265737360901b602082015260400192915050565b6000611cf660528361246c565b7f5065726d69742861646472657373206f776e65722c616464726573732073706581527f6e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63656020820152712c75696e7432353620646561646c696e652960701b604082015260520192915050565b6000611d70602283612463565b7f556e693a3a6d696e743a206d696e74696e67206e6f7420616c6c6f7765642079815261195d60f21b602082015260400192915050565b6000611db460438361246c565b7f454950373132446f6d61696e28737472696e67206e616d652c75696e7432353681527f20636861696e49642c6164647265737320766572696679696e67436f6e74726160208201526263742960e81b604082015260430192915050565b6000611e1f603983612463565b7f556e693a3a5f7472616e73666572546f6b656e733a2063616e6e6f742074726181527f6e7366657220746f20746865207a65726f206164647265737300000000000000602082015260400192915050565b6000611e7e602183612463565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f8152607760f81b602082015260400192915050565b6000611ec1601c83612463565b7f556e693a3a6d696e743a206578636565646564206d696e742063617000000000815260200192915050565b6000611efa602383612463565b7f556e693a3a6d696e743a206f6e6c7920746865206d696e7465722063616e206d8152621a5b9d60ea1b602082015260400192915050565b6000611f3f603d83612463565b7f556e693a3a7365744d696e7465723a206f6e6c7920746865206d696e7465722081527f63616e206368616e676520746865206d696e7465722061646472657373000000602082015260400192915050565b6000611f9e602183612463565b7f556e693a3a64656c656761746542795369673a20696e76616c6964206e6f6e638152606560f81b602082015260400192915050565b6000611fe1603b83612463565b7f556e693a3a5f7472616e73666572546f6b656e733a2063616e6e6f742074726181527f6e736665722066726f6d20746865207a65726f20616464726573730000000000602082015260400192915050565b6000612040601e83612463565b7f556e693a3a7065726d69743a207369676e617475726520657870697265640000815260200192915050565b6000612079603a8361246c565b7f44656c65676174696f6e28616464726573732064656c6567617465652c75696e81527f74323536206e6f6e63652c75696e7432353620657870697279290000000000006020820152603a0192915050565b60006120d8601e83612463565b7f556e693a3a7065726d69743a20696e76616c6964207369676e61747572650000815260200192915050565b6000612111601983612463565b7f556e693a3a7065726d69743a20756e617574686f72697a656400000000000000815260200192915050565b611b0b81612490565b611b0b81612499565b611b0b816124ab565b611b0b8161249f565b600061216c82611bb3565b91506121788285611b23565b6020820191506121888284611b23565b5060200192915050565b600061049582611ce9565b600061049582611da7565b60006104958261206c565b602081016104958284611b02565b604081016121cf8285611b02565b6105fa6020830184611b02565b602081016104958284611b11565b602081016104958284611b1a565b60c081016122068289611b1a565b6122136020830188611b02565b6122206040830187611b02565b61222d6060830186611b1a565b61223a6080830185611b1a565b61224760a0830184611b1a565b979650505050505050565b608081016122608287611b1a565b61226d6020830186611b02565b61227a6040830185611b1a565b6122876060830184611b1a565b95945050505050565b6080810161229e8287611b1a565b6122ab6020830186611b1a565b6122b86040830185611b1a565b6122876060830184611b02565b608081016122d38287611b1a565b61226d6020830186612146565b602080825281016105fa8184611b34565b6020808252810161049581611b6c565b6020808252810161049581611bd1565b6020808252810161049581611c0a565b6020808252810161049581611c51565b6020808252810161049581611c99565b6020808252810161049581611d63565b6020808252810161049581611e12565b6020808252810161049581611e71565b6020808252810161049581611eb4565b6020808252810161049581611eed565b6020808252810161049581611f32565b6020808252810161049581611f91565b6020808252810161049581611fd4565b6020808252810161049581612033565b60208082528101610495816120cb565b6020808252810161049581612104565b60208101610495828461213d565b6040810161240d828561213d565b6105fa6020830184612158565b602081016104958284612146565b60208101610495828461214f565b602081016104958284612158565b60408101612452828561214f565b6105fa602083018461214f565b5190565b90815260200190565b919050565b600061049582612484565b151590565b90565b6001600160a01b031690565b63ffffffff1690565b60ff1690565b6001600160601b031690565b60006104958261249f565b60005b838110156124d15781810151838201526020016124b9565b838111156116725750506000910152565b601f01601f191690565b6124f581612471565b811461086057600080fd5b6124f581612481565b6124f581612490565b6124f58161249956fe556e693a3a6d696e743a207472616e7366657220616d6f756e74206f766572666c6f7773556e693a3a7472616e7366657246726f6d3a207472616e7366657220616d6f756e742065786365656473207370656e64657220616c6c6f77616e6365556e693a3a6d696e743a20746f74616c537570706c7920657863656564732039362062697473556e693a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e7420657863656564732062616c616e6365556e693a3a7065726d69743a20616d6f756e7420657863656564732039362062697473556e693a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f7773556e693a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473556e693a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f7773556e693a3a7472616e736665723a20616d6f756e7420657863656564732039362062697473556e693a3a6d696e743a20616d6f756e7420657863656564732039362062697473556e693a3a617070726f76653a20616d6f756e7420657863656564732039362062697473556e693a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e74206f766572666c6f7773a365627a7a72315820b228f14032f179f6e81f367b78ff3ff6cdc127c0f42b53f91c18ec8ff8135cbe6c6578706572696d656e74616cf564736f6c63430005110040",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH12 0x33B2E3C9FD0803CE8000000 PUSH1 0x0 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2A51 CODESIZE SUB DUP1 PUSH3 0x2A51 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x44 SWAP2 PUSH3 0x171 JUMP JUMPDEST TIMESTAMP DUP2 LT ISZERO PUSH3 0x70 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x67 SWAP1 PUSH3 0x273 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP4 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP3 SLOAD SWAP2 MLOAD SWAP1 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 PUSH3 0xDE SWAP2 SWAP1 PUSH3 0x285 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x3B0007EB941CF645526CBB3A4FDAECDA9D28CE4843167D9263B536A1F1EDC0F6 SWAP3 PUSH3 0x13D SWAP3 PUSH1 0x0 SWAP3 SWAP2 AND SWAP1 PUSH3 0x24D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x2 SSTORE POP PUSH3 0x2EC SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH3 0x15E DUP2 PUSH3 0x2C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH3 0x15E DUP2 PUSH3 0x2E1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x195 DUP7 DUP7 PUSH3 0x151 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x1A8 DUP7 DUP3 DUP8 ADD PUSH3 0x151 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x1BB DUP7 DUP3 DUP8 ADD PUSH3 0x164 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH3 0x1D0 DUP2 PUSH3 0x2B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x1D0 DUP2 PUSH3 0x29E JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1F0 PUSH1 0x39 DUP4 PUSH3 0x295 JUMP JUMPDEST PUSH32 0x556E693A3A636F6E7374727563746F723A206D696E74696E672063616E206F6E DUP2 MSTORE PUSH32 0x6C7920626567696E206166746572206465706C6F796D656E7400000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x1D0 DUP2 PUSH3 0x2B0 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH3 0x25D DUP3 DUP6 PUSH3 0x1C5 JUMP JUMPDEST PUSH3 0x26C PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x1D6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH3 0x15E DUP2 PUSH3 0x1E1 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH3 0x15E DUP3 DUP5 PUSH3 0x242 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x15E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x15E DUP3 PUSH1 0x0 PUSH3 0x15E DUP3 PUSH3 0x29E JUMP JUMPDEST PUSH3 0x2D2 DUP2 PUSH3 0x29E JUMP JUMPDEST DUP2 EQ PUSH3 0x2DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x2D2 DUP2 PUSH3 0x2B0 JUMP JUMPDEST PUSH2 0x2755 DUP1 PUSH3 0x2FC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FCFFF45 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xB4B5EA57 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0xFCA3B5AA EQ PUSH2 0x397 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x348 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x782D6FE1 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x30F JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x76C71CA1 EQ PUSH2 0x2CC JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x30ADF81F GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x40C10F19 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x5C11D62F EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x293 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x30B36CEF EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x241 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x7546172 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x21E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B6 PUSH2 0x3AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x22E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D4 PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x21B3 JUMP JUMPDEST PUSH2 0x1F4 PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0x1A1B JUMP JUMPDEST PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x21DC JUMP JUMPDEST PUSH2 0x209 PUSH2 0x49B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x21EA JUMP JUMPDEST PUSH2 0x209 PUSH2 0x4A1 JUMP JUMPDEST PUSH2 0x1F4 PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0x1932 JUMP JUMPDEST PUSH2 0x4B8 JUMP JUMPDEST PUSH2 0x209 PUSH2 0x601 JUMP JUMPDEST PUSH2 0x209 PUSH2 0x60D JUMP JUMPDEST PUSH2 0x249 PUSH2 0x613 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x241A JUMP JUMPDEST PUSH2 0x269 PUSH2 0x264 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A1B JUMP JUMPDEST PUSH2 0x618 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D4 PUSH2 0x279 CALLDATASIZE PUSH1 0x4 PUSH2 0x18D2 JUMP JUMPDEST PUSH2 0x833 JUMP JUMPDEST PUSH2 0x286 PUSH2 0x84E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x23F1 JUMP JUMPDEST PUSH2 0x269 PUSH2 0x2A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x18D2 JUMP JUMPDEST PUSH2 0x856 JUMP JUMPDEST PUSH2 0x286 PUSH2 0x2B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x18D2 JUMP JUMPDEST PUSH2 0x863 JUMP JUMPDEST PUSH2 0x209 PUSH2 0x2C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x18D2 JUMP JUMPDEST PUSH2 0x87B JUMP JUMPDEST PUSH2 0x249 PUSH2 0x89F JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A1B JUMP JUMPDEST PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x2436 JUMP JUMPDEST PUSH2 0x209 PUSH2 0x302 CALLDATASIZE PUSH1 0x4 PUSH2 0x18D2 JUMP JUMPDEST PUSH2 0xAB2 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0xAC4 JUMP JUMPDEST PUSH2 0x1F4 PUSH2 0x31D CALLDATASIZE PUSH1 0x4 PUSH2 0x1A1B JUMP JUMPDEST PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x330 CALLDATASIZE PUSH1 0x4 PUSH2 0x18D2 JUMP JUMPDEST PUSH2 0xB1F JUMP JUMPDEST PUSH2 0x269 PUSH2 0x343 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A4B JUMP JUMPDEST PUSH2 0xB8F JUMP JUMPDEST PUSH2 0x269 PUSH2 0x356 CALLDATASIZE PUSH1 0x4 PUSH2 0x197F JUMP JUMPDEST PUSH2 0xD78 JUMP JUMPDEST PUSH2 0x209 PUSH2 0x369 CALLDATASIZE PUSH1 0x4 PUSH2 0x18F8 JUMP JUMPDEST PUSH2 0x1063 JUMP JUMPDEST PUSH2 0x209 PUSH2 0x1097 JUMP JUMPDEST PUSH2 0x389 PUSH2 0x384 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD2 JUMP JUMPDEST PUSH2 0x10A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP3 SWAP2 SWAP1 PUSH2 0x23FF JUMP JUMPDEST PUSH2 0x269 PUSH2 0x3A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x18D2 JUMP JUMPDEST PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x556E697377617 PUSH1 0xCC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 NOT DUP4 EQ ISZERO PUSH2 0x3F2 JUMPI POP PUSH1 0x0 NOT PUSH2 0x417 JUMP JUMPDEST PUSH2 0x414 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26C0 PUSH1 0x24 SWAP2 CODECOPY PUSH2 0x116B JUMP JUMPDEST SWAP1 POP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP7 AND OR SWAP1 SSTORE SWAP1 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x487 SWAP1 DUP6 SWAP1 PUSH2 0x2428 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AD SWAP1 PUSH2 0x219D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP1 DUP5 MSTORE SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND SWAP3 DUP6 SWAP3 PUSH2 0x510 SWAP3 DUP9 SWAP3 SWAP2 SWAP1 PUSH2 0x26C0 SWAP1 DUP4 ADD CODECOPY PUSH2 0x116B JUMP JUMPDEST SWAP1 POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x53D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 DUP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x5E7 JUMPI PUSH1 0x0 PUSH2 0x567 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3C DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2540 PUSH1 0x3C SWAP2 CODECOPY PUSH2 0x119A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP11 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP7 AND OR SWAP1 SSTORE MLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x5DD SWAP1 DUP6 SWAP1 PUSH2 0x2428 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST PUSH2 0x5F2 DUP8 DUP8 DUP4 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x1 SWAP4 POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AD SWAP1 PUSH2 0x2192 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x64B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP1 PUSH2 0x2381 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP LT ISZERO PUSH2 0x66D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP1 PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x693 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP1 PUSH2 0x2331 JUMP JUMPDEST PUSH2 0x6A1 TIMESTAMP PUSH4 0x1E13380 PUSH2 0x137F JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x6CB DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x269F PUSH1 0x21 SWAP2 CODECOPY PUSH2 0x116B JUMP JUMPDEST SWAP1 POP PUSH2 0x6E7 PUSH2 0x6E0 PUSH1 0x0 SLOAD PUSH1 0x2 PUSH1 0xFF AND PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x64 PUSH2 0x13DE JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT ISZERO PUSH2 0x70F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP1 PUSH2 0x2371 JUMP JUMPDEST PUSH2 0x745 PUSH2 0x727 PUSH1 0x0 SLOAD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x137F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x257C PUSH1 0x26 SWAP2 CODECOPY PUSH2 0x116B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP1 DUP5 MSTORE PUSH2 0x797 SWAP5 SWAP2 SWAP1 SWAP2 AND SWAP3 DUP6 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x251C SWAP1 DUP4 ADD CODECOPY PUSH2 0x1420 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP6 SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x801 SWAP1 DUP6 SWAP1 PUSH2 0x2428 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x82E SWAP3 AND DUP4 PUSH2 0x145C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH4 0x1E13380 DUP2 JUMP JUMPDEST PUSH2 0x860 CALLER DUP3 PUSH2 0x15EE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x8C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP1 PUSH2 0x2321 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0x8F3 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x495 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP7 ADD DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD AND DUP4 LT PUSH2 0x96F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT SWAP5 SWAP1 SWAP5 ADD PUSH4 0xFFFFFFFF AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 POP PUSH2 0x495 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP1 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP4 LT ISZERO PUSH2 0x9AA JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x495 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 ADD JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0xA6D JUMPI PUSH1 0x2 DUP3 DUP3 SUB PUSH4 0xFFFFFFFF AND DIV DUP2 SUB PUSH2 0x9DC PUSH2 0x188F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF DUP6 DUP2 AND DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE SLOAD SWAP3 DUP4 AND DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP4 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP8 EQ ISZERO PUSH2 0xA48 JUMPI PUSH1 0x20 ADD MLOAD SWAP5 POP PUSH2 0x495 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH4 0xFFFFFFFF AND DUP8 GT ISZERO PUSH2 0xA5F JUMPI DUP2 SWAP4 POP PUSH2 0xA66 JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP3 POP JUMPDEST POP POP PUSH2 0x9B2 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP2 DIV AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x554E49 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB08 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x267A PUSH1 0x25 SWAP2 CODECOPY PUSH2 0x116B JUMP JUMPDEST SWAP1 POP PUSH2 0xB15 CALLER DUP6 DUP4 PUSH2 0x11D9 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0xB4A JUMPI PUSH1 0x0 PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT DUP6 ADD PUSH4 0xFFFFFFFF AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xB9D SWAP1 PUSH2 0x219D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 DUP3 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH7 0x556E697377617 PUSH1 0xCC SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x99C45E8EE5DDE061CED9C812089094FBD28A020E7E37F2851198887E5CA64985 PUSH2 0xBEE PUSH2 0x1678 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC02 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2290 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xC28 SWAP1 PUSH2 0x21A8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 PUSH2 0xC43 SWAP2 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x20 ADD PUSH2 0x2252 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC70 SWAP3 SWAP2 SWAP1 PUSH2 0x2161 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xCAD SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22C5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCCF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP1 PUSH2 0x2311 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP10 EQ PUSH2 0xD41 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP1 PUSH2 0x23A1 JUMP JUMPDEST DUP8 TIMESTAMP GT ISZERO PUSH2 0xD61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP1 PUSH2 0x22F1 JUMP JUMPDEST PUSH2 0xD6B DUP2 DUP12 PUSH2 0x15EE JUMP JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP7 EQ ISZERO PUSH2 0xD8D JUMPI POP PUSH1 0x0 NOT PUSH2 0xDB2 JUMP JUMPDEST PUSH2 0xDAF DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25D7 PUSH1 0x23 SWAP2 CODECOPY PUSH2 0x116B JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xDC0 SWAP1 PUSH2 0x219D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 DUP3 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH7 0x556E697377617 PUSH1 0xCC SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x99C45E8EE5DDE061CED9C812089094FBD28A020E7E37F2851198887E5CA64985 PUSH2 0xE11 PUSH2 0x1678 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE25 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2290 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xE4B SWAP1 PUSH2 0x2192 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE PUSH2 0xE8D SWAP4 SWAP2 SWAP3 DUP15 SWAP3 DUP15 SWAP3 DUP15 SWAP3 SWAP1 SWAP2 DUP15 SWAP2 ADD PUSH2 0x21F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xEBA SWAP3 SWAP2 SWAP1 PUSH2 0x2161 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xEF7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22C5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF19 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF4C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP1 PUSH2 0x23D1 JUMP JUMPDEST DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xF7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP1 PUSH2 0x23E1 JUMP JUMPDEST DUP9 TIMESTAMP GT ISZERO PUSH2 0xF9D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP1 PUSH2 0x23C1 JUMP JUMPDEST DUP5 PUSH1 0x3 PUSH1 0x0 DUP15 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP8 PUSH1 0x40 MLOAD PUSH2 0x104D SWAP2 SWAP1 PUSH2 0x2428 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AD SWAP1 PUSH2 0x21A8 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP3 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1102 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP1 PUSH2 0x2391 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x3B0007EB941CF645526CBB3A4FDAECDA9D28CE4843167D9263B536A1F1EDC0F6 SWAP2 PUSH2 0x1141 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 SWAP1 PUSH2 0x21C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x60 SHL DUP5 LT PUSH2 0x1192 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP2 SWAP1 PUSH2 0x22E0 JUMP JUMPDEST POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT ISZERO DUP3 SWAP1 PUSH2 0x11D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP2 SWAP1 PUSH2 0x22E0 JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x11FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP1 PUSH2 0x23B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1225 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP1 PUSH2 0x2351 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x35 DUP1 DUP5 MSTORE PUSH2 0x1270 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP6 SWAP3 SWAP2 SWAP1 PUSH2 0x25A2 SWAP1 DUP4 ADD CODECOPY PUSH2 0x119A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP7 DUP8 AND OR SWAP1 SSTORE SWAP3 DUP7 AND DUP3 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x2F DUP1 DUP5 MSTORE PUSH2 0x12D8 SWAP5 SWAP2 SWAP1 SWAP2 AND SWAP3 DUP6 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x26E4 SWAP1 DUP4 ADD CODECOPY PUSH2 0x1420 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP6 SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x1345 SWAP1 DUP6 SWAP1 PUSH2 0x2428 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP6 DUP5 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0x82E SWAP3 SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0x145C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x5FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP1 PUSH2 0x2301 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x13B3 JUMPI POP PUSH1 0x0 PUSH2 0x495 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x13C0 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x5FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP1 PUSH2 0x2361 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5FA DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x167C JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP8 AND SWAP1 DUP4 AND LT ISZERO PUSH2 0x1453 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP2 SWAP1 PUSH2 0x22E0 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x1487 JUMPI POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT JUMPDEST ISZERO PUSH2 0x82E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x153F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x14C7 JUMPI PUSH1 0x0 PUSH2 0x1506 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT DUP7 ADD PUSH4 0xFFFFFFFF AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x152D DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2653 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x119A JUMP JUMPDEST SWAP1 POP PUSH2 0x153B DUP7 DUP5 DUP5 DUP5 PUSH2 0x16B3 JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x82E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x157A JUMPI PUSH1 0x0 PUSH2 0x15B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT DUP7 ADD PUSH4 0xFFFFFFFF AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x15E0 DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25FA PUSH1 0x26 SWAP2 CODECOPY PUSH2 0x1420 JUMP JUMPDEST SWAP1 POP PUSH2 0xD70 DUP6 DUP5 DUP5 DUP5 PUSH2 0x16B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x4 DUP5 MSTORE DUP3 DUP7 KECCAK256 SLOAD SWAP5 SWAP1 SWAP4 MSTORE DUP8 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP6 AND SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP3 AND SWAP4 SWAP2 SWAP3 DUP6 SWAP3 SWAP2 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP2 SWAP1 LOG4 PUSH2 0x1672 DUP3 DUP5 DUP4 PUSH2 0x145C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x169D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP2 SWAP1 PUSH2 0x22E0 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x16A9 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16D7 NUMBER PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x33 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2620 PUSH1 0x33 SWAP2 CODECOPY PUSH2 0x1868 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x1720 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP10 ADD DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD DUP3 DUP3 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x177F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT DUP9 ADD PUSH4 0xFFFFFFFF AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFF00000000 NOT AND PUSH1 0x1 PUSH1 0x20 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP6 AND MUL OR SWAP1 SSTORE PUSH2 0x181E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH4 0xFFFFFFFF DUP1 DUP5 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP7 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 DUP4 MSTORE DUP8 DUP2 KECCAK256 DUP13 DUP8 AND DUP3 MSTORE DUP4 MSTORE DUP8 DUP2 KECCAK256 SWAP7 MLOAD DUP8 SLOAD SWAP5 MLOAD SWAP1 SWAP6 AND PUSH1 0x1 PUSH1 0x20 SHL MUL PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFF00000000 NOT SWAP6 DUP8 AND PUSH4 0xFFFFFFFF NOT SWAP6 DUP7 AND OR SWAP6 SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP6 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 SWAP4 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP9 ADD SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1859 SWAP3 SWAP2 SWAP1 PUSH2 0x2444 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x20 SHL DUP5 LT PUSH2 0x1192 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP2 SWAP1 PUSH2 0x22E0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x495 DUP2 PUSH2 0x24EC JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x495 DUP2 PUSH2 0x2500 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x495 DUP2 PUSH2 0x2509 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x495 DUP2 PUSH2 0x2512 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18F0 DUP5 DUP5 PUSH2 0x18A6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x190B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1917 DUP6 DUP6 PUSH2 0x18A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1928 DUP6 DUP3 DUP7 ADD PUSH2 0x18A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1947 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1953 DUP7 DUP7 PUSH2 0x18A6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1964 DUP7 DUP3 DUP8 ADD PUSH2 0x18A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1975 DUP7 DUP3 DUP8 ADD PUSH2 0x18B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x199A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x19A6 DUP11 DUP11 PUSH2 0x18A6 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x19B7 DUP11 DUP3 DUP12 ADD PUSH2 0x18A6 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x19C8 DUP11 DUP3 DUP12 ADD PUSH2 0x18B1 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x19D9 DUP11 DUP3 DUP12 ADD PUSH2 0x18B1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x19EA DUP11 DUP3 DUP12 ADD PUSH2 0x18C7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x19FB DUP11 DUP3 DUP12 ADD PUSH2 0x18B1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1A0C DUP11 DUP3 DUP12 ADD PUSH2 0x18B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1A3A DUP6 DUP6 PUSH2 0x18A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1928 DUP6 DUP3 DUP7 ADD PUSH2 0x18B1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1A64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1A70 DUP10 DUP10 PUSH2 0x18A6 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x1A81 DUP10 DUP3 DUP11 ADD PUSH2 0x18B1 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x1A92 DUP10 DUP3 DUP11 ADD PUSH2 0x18B1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x1AA3 DUP10 DUP3 DUP11 ADD PUSH2 0x18C7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x1AB4 DUP10 DUP3 DUP11 ADD PUSH2 0x18B1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x1AC5 DUP10 DUP3 DUP11 ADD PUSH2 0x18B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1AF1 DUP6 DUP6 PUSH2 0x18A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1928 DUP6 DUP3 DUP7 ADD PUSH2 0x18BC JUMP JUMPDEST PUSH2 0x1B0B DUP2 PUSH2 0x2471 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1B0B DUP2 PUSH2 0x247C JUMP JUMPDEST PUSH2 0x1B0B DUP2 PUSH2 0x2481 JUMP JUMPDEST PUSH2 0x1B0B PUSH2 0x1B2F DUP3 PUSH2 0x2481 JUMP JUMPDEST PUSH2 0x2481 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B3F DUP3 PUSH2 0x245F JUMP JUMPDEST PUSH2 0x1B49 DUP2 DUP6 PUSH2 0x2463 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B59 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x24B6 JUMP JUMPDEST PUSH2 0x1B62 DUP2 PUSH2 0x24E2 JUMP JUMPDEST SWAP1 SWAP4 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B79 PUSH1 0x25 DUP4 PUSH2 0x2463 JUMP JUMPDEST PUSH32 0x556E693A3A64656C656761746542795369673A207369676E6174757265206578 DUP2 MSTORE PUSH5 0x1C1A5C9959 PUSH1 0xDA SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC0 PUSH1 0x2 DUP4 PUSH2 0x246C JUMP JUMPDEST PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BDE PUSH1 0x1B DUP4 PUSH2 0x2463 JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C17 PUSH1 0x25 DUP4 PUSH2 0x2463 JUMP JUMPDEST PUSH32 0x556E693A3A64656C656761746542795369673A20696E76616C6964207369676E DUP2 MSTORE PUSH5 0x6174757265 PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C5E PUSH1 0x26 DUP4 PUSH2 0x2463 JUMP JUMPDEST PUSH32 0x556E693A3A6765745072696F72566F7465733A206E6F74207965742064657465 DUP2 MSTORE PUSH6 0x1C9B5A5B9959 PUSH1 0xD2 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CA6 PUSH1 0x2E DUP4 PUSH2 0x2463 JUMP JUMPDEST PUSH32 0x556E693A3A6D696E743A2063616E6E6F74207472616E7366657220746F207468 DUP2 MSTORE PUSH14 0x65207A65726F2061646472657373 PUSH1 0x90 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF6 PUSH1 0x52 DUP4 PUSH2 0x246C JUMP JUMPDEST PUSH32 0x5065726D69742861646472657373206F776E65722C6164647265737320737065 DUP2 MSTORE PUSH32 0x6E6465722C75696E743235362076616C75652C75696E74323536206E6F6E6365 PUSH1 0x20 DUP3 ADD MSTORE PUSH18 0x2C75696E7432353620646561646C696E6529 PUSH1 0x70 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x52 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D70 PUSH1 0x22 DUP4 PUSH2 0x2463 JUMP JUMPDEST PUSH32 0x556E693A3A6D696E743A206D696E74696E67206E6F7420616C6C6F7765642079 DUP2 MSTORE PUSH2 0x195D PUSH1 0xF2 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DB4 PUSH1 0x43 DUP4 PUSH2 0x246C JUMP JUMPDEST PUSH32 0x454950373132446F6D61696E28737472696E67206E616D652C75696E74323536 DUP2 MSTORE PUSH32 0x20636861696E49642C6164647265737320766572696679696E67436F6E747261 PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0x637429 PUSH1 0xE8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x43 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E1F PUSH1 0x39 DUP4 PUSH2 0x2463 JUMP JUMPDEST PUSH32 0x556E693A3A5F7472616E73666572546F6B656E733A2063616E6E6F7420747261 DUP2 MSTORE PUSH32 0x6E7366657220746F20746865207A65726F206164647265737300000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E7E PUSH1 0x21 DUP4 PUSH2 0x2463 JUMP JUMPDEST PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F DUP2 MSTORE PUSH1 0x77 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EC1 PUSH1 0x1C DUP4 PUSH2 0x2463 JUMP JUMPDEST PUSH32 0x556E693A3A6D696E743A206578636565646564206D696E742063617000000000 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EFA PUSH1 0x23 DUP4 PUSH2 0x2463 JUMP JUMPDEST PUSH32 0x556E693A3A6D696E743A206F6E6C7920746865206D696E7465722063616E206D DUP2 MSTORE PUSH3 0x1A5B9D PUSH1 0xEA SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F3F PUSH1 0x3D DUP4 PUSH2 0x2463 JUMP JUMPDEST PUSH32 0x556E693A3A7365744D696E7465723A206F6E6C7920746865206D696E74657220 DUP2 MSTORE PUSH32 0x63616E206368616E676520746865206D696E7465722061646472657373000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F9E PUSH1 0x21 DUP4 PUSH2 0x2463 JUMP JUMPDEST PUSH32 0x556E693A3A64656C656761746542795369673A20696E76616C6964206E6F6E63 DUP2 MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FE1 PUSH1 0x3B DUP4 PUSH2 0x2463 JUMP JUMPDEST PUSH32 0x556E693A3A5F7472616E73666572546F6B656E733A2063616E6E6F7420747261 DUP2 MSTORE PUSH32 0x6E736665722066726F6D20746865207A65726F20616464726573730000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2040 PUSH1 0x1E DUP4 PUSH2 0x2463 JUMP JUMPDEST PUSH32 0x556E693A3A7065726D69743A207369676E617475726520657870697265640000 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2079 PUSH1 0x3A DUP4 PUSH2 0x246C JUMP JUMPDEST PUSH32 0x44656C65676174696F6E28616464726573732064656C6567617465652C75696E DUP2 MSTORE PUSH32 0x74323536206E6F6E63652C75696E743235362065787069727929000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3A ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20D8 PUSH1 0x1E DUP4 PUSH2 0x2463 JUMP JUMPDEST PUSH32 0x556E693A3A7065726D69743A20696E76616C6964207369676E61747572650000 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2111 PUSH1 0x19 DUP4 PUSH2 0x2463 JUMP JUMPDEST PUSH32 0x556E693A3A7065726D69743A20756E617574686F72697A656400000000000000 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B0B DUP2 PUSH2 0x2490 JUMP JUMPDEST PUSH2 0x1B0B DUP2 PUSH2 0x2499 JUMP JUMPDEST PUSH2 0x1B0B DUP2 PUSH2 0x24AB JUMP JUMPDEST PUSH2 0x1B0B DUP2 PUSH2 0x249F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x216C DUP3 PUSH2 0x1BB3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2178 DUP3 DUP6 PUSH2 0x1B23 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x2188 DUP3 DUP5 PUSH2 0x1B23 JUMP JUMPDEST POP PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x495 DUP3 PUSH2 0x1CE9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x495 DUP3 PUSH2 0x1DA7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x495 DUP3 PUSH2 0x206C JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x495 DUP3 DUP5 PUSH2 0x1B02 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x21CF DUP3 DUP6 PUSH2 0x1B02 JUMP JUMPDEST PUSH2 0x5FA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B02 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x495 DUP3 DUP5 PUSH2 0x1B11 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x495 DUP3 DUP5 PUSH2 0x1B1A JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD PUSH2 0x2206 DUP3 DUP10 PUSH2 0x1B1A JUMP JUMPDEST PUSH2 0x2213 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1B02 JUMP JUMPDEST PUSH2 0x2220 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1B02 JUMP JUMPDEST PUSH2 0x222D PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1B1A JUMP JUMPDEST PUSH2 0x223A PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1B1A JUMP JUMPDEST PUSH2 0x2247 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1B1A JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0x2260 DUP3 DUP8 PUSH2 0x1B1A JUMP JUMPDEST PUSH2 0x226D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1B02 JUMP JUMPDEST PUSH2 0x227A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1B1A JUMP JUMPDEST PUSH2 0x2287 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1B1A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0x229E DUP3 DUP8 PUSH2 0x1B1A JUMP JUMPDEST PUSH2 0x22AB PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1B1A JUMP JUMPDEST PUSH2 0x22B8 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1B1A JUMP JUMPDEST PUSH2 0x2287 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1B02 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0x22D3 DUP3 DUP8 PUSH2 0x1B1A JUMP JUMPDEST PUSH2 0x226D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2146 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x5FA DUP2 DUP5 PUSH2 0x1B34 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x495 DUP2 PUSH2 0x1B6C JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x495 DUP2 PUSH2 0x1BD1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x495 DUP2 PUSH2 0x1C0A JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x495 DUP2 PUSH2 0x1C51 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x495 DUP2 PUSH2 0x1C99 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x495 DUP2 PUSH2 0x1D63 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x495 DUP2 PUSH2 0x1E12 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x495 DUP2 PUSH2 0x1E71 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x495 DUP2 PUSH2 0x1EB4 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x495 DUP2 PUSH2 0x1EED JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x495 DUP2 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x495 DUP2 PUSH2 0x1F91 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x495 DUP2 PUSH2 0x1FD4 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x495 DUP2 PUSH2 0x2033 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x495 DUP2 PUSH2 0x20CB JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x495 DUP2 PUSH2 0x2104 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x495 DUP3 DUP5 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x240D DUP3 DUP6 PUSH2 0x213D JUMP JUMPDEST PUSH2 0x5FA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x495 DUP3 DUP5 PUSH2 0x2146 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x495 DUP3 DUP5 PUSH2 0x214F JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x495 DUP3 DUP5 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x2452 DUP3 DUP6 PUSH2 0x214F JUMP JUMPDEST PUSH2 0x5FA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x214F JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x495 DUP3 PUSH2 0x2484 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x495 DUP3 PUSH2 0x249F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x24D1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x24B9 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1672 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST PUSH2 0x24F5 DUP2 PUSH2 0x2471 JUMP JUMPDEST DUP2 EQ PUSH2 0x860 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24F5 DUP2 PUSH2 0x2481 JUMP JUMPDEST PUSH2 0x24F5 DUP2 PUSH2 0x2490 JUMP JUMPDEST PUSH2 0x24F5 DUP2 PUSH2 0x2499 JUMP INVALID SSTORE PUSH15 0x693A3A6D696E743A207472616E7366 PUSH6 0x7220616D6F75 PUSH15 0x74206F766572666C6F7773556E693A GASPRICE PUSH21 0x72616E7366657246726F6D3A207472616E73666572 KECCAK256 PUSH2 0x6D6F PUSH22 0x6E742065786365656473207370656E64657220616C6C PUSH16 0x77616E6365556E693A3A6D696E743A20 PUSH21 0x6F74616C537570706C792065786365656473203936 KECCAK256 PUSH3 0x697473 SSTORE PUSH15 0x693A3A5F7472616E73666572546F6B PUSH6 0x6E733A207472 PUSH2 0x6E73 PUSH7 0x657220616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65556E69 GASPRICE GASPRICE PUSH17 0x65726D69743A20616D6F756E7420657863 PUSH6 0x656473203936 KECCAK256 PUSH3 0x697473 SSTORE PUSH15 0x693A3A5F6D6F7665566F7465733A20 PUSH23 0x6F746520616D6F756E74206F766572666C6F7773556E69 GASPRICE GASPRICE 0x5F PUSH24 0x72697465436865636B706F696E743A20626C6F636B206E75 PUSH14 0x6265722065786365656473203332 KECCAK256 PUSH3 0x697473 SSTORE PUSH15 0x693A3A5F6D6F7665566F7465733A20 PUSH23 0x6F746520616D6F756E7420756E646572666C6F7773556E PUSH10 0x3A3A7472616E73666572 GASPRICE KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732039362062697473556E693A GASPRICE PUSH14 0x696E743A20616D6F756E74206578 PUSH4 0x65656473 KECCAK256 CODECOPY CALLDATASIZE KECCAK256 PUSH3 0x697473 SSTORE PUSH15 0x693A3A617070726F76653A20616D6F PUSH22 0x6E7420657863656564732039362062697473556E693A GASPRICE 0x5F PUSH21 0x72616E73666572546F6B656E733A207472616E7366 PUSH6 0x7220616D6F75 PUSH15 0x74206F766572666C6F7773A365627A PUSH27 0x72315820B228F14032F179F6E81F367B78FF3FF6CDC127C0F42B53 0xF9 SHR XOR 0xEC DUP16 0xF8 SGT 0x5C 0xBE PUSH13 0x6578706572696D656E74616CF5 PUSH5 0x736F6C6343 STOP SDIV GT STOP BLOCKHASH ",
							"sourceMap": "6581:16763:0:-;;;6965:16;6939:42;;9960:439;8:9:-1;5:2;;;30:1;27;20:12;5:2;9960:439:0;;;;;;;;;;;;;;;;;;;;;10082:15;10058:20;:39;;10050:109;;;;-1:-1:-1;;;10050:109:0;;;;;;;;;;;;;;;;;10197:11;;;-1:-1:-1;;;;;10170:17:0;;;;;:8;:17;;;;;;:39;;-1:-1:-1;;;;;;10170:39:0;-1:-1:-1;;;;;10170:39:0;;;;;;;;;;10254:11;;10224:42;;10170:17;;10197:11;10224:42;;;;10254:11;10224:42;;;;;;;;;;10276:6;:16;;-1:-1:-1;;;;;;10276:16:0;-1:-1:-1;;;;;10276:16:0;;;;;;;;;;;10307:33;;;;;;-1:-1:-1;;10333:6:0;;;10307:33;;;;;;;;;;10350:19;:42;-1:-1:-1;6581:16763:0;;-1:-1:-1;6581:16763:0;5:134:-1;83:13;;101:33;83:13;101:33;;;68:71;;;;;146:134;224:13;;242:33;224:13;242:33;;287:535;;;;436:2;424:9;415:7;411:23;407:32;404:2;;;452:1;449;442:12;404:2;487:1;504:64;560:7;540:9;504:64;;;494:74;;466:108;605:2;623:64;679:7;670:6;659:9;655:22;623:64;;;613:74;;584:109;724:2;742:64;798:7;789:6;778:9;774:22;742:64;;;732:74;;703:109;398:424;;;;;;829:142;920:45;959:5;920:45;;;915:3;908:58;902:69;;;978:113;1061:24;1079:5;1061:24;;1099:394;;1259:67;1323:2;1318:3;1259:67;;;1359:34;1339:55;;1428:27;1423:2;1414:12;;1407:49;1484:2;1475:12;;1245:248;-1:-1;;1245:248;1501:113;1584:24;1602:5;1584:24;;1621:340;1775:2;1760:18;;1789:79;1764:9;1841:6;1789:79;;;1879:72;1947:2;1936:9;1932:18;1923:6;1879:72;;;1746:215;;;;;;1968:407;2159:2;2173:47;;;2144:18;;2234:131;2144:18;2234:131;;2382:213;2500:2;2485:18;;2514:71;2489:9;2558:6;2514:71;;2603:163;2706:19;;;2755:4;2746:14;;2699:67;2774:91;;-1:-1;;;;;2934:54;;2836:24;2917:76;3000:72;3062:5;3045:27;3079:129;;3166:37;3197:5;3215:121;3294:37;3325:5;3294:37;;3458:117;3527:24;3545:5;3527:24;;;3520:5;3517:35;3507:2;;3566:1;3563;3556:12;3507:2;3501:74;;3582:117;3651:24;3669:5;3651:24;;3625:74;6581:16763:0;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101a95760003560e01c80636fcfff45116100f9578063b4b5ea5711610097578063dd62ed3e11610071578063dd62ed3e1461035b578063e7a324dc1461036e578063f1127ed814610376578063fca3b5aa14610397576101a9565b8063b4b5ea5714610322578063c3cda52014610335578063d505accf14610348576101a9565b8063782d6fe1116100d3578063782d6fe1146102d45780637ecebe00146102f457806395d89b4114610307578063a9059cbb1461030f576101a9565b80636fcfff45146102a657806370a08231146102b957806376c71ca1146102cc576101a9565b806330adf81f1161016657806340c10f191161014057806340c10f1914610256578063587cde1e1461026b5780635c11d62f1461027e5780635c19a95c14610293576101a9565b806330adf81f1461023157806330b36cef14610239578063313ce56714610241576101a9565b806306fdde03146101ae57806307546172146101cc578063095ea7b3146101e157806318160ddd1461020157806320606b701461021657806323b872dd1461021e575b600080fd5b6101b66103aa565b6040516101c391906122e0565b60405180910390f35b6101d46103cd565b6040516101c391906121b3565b6101f46101ef366004611a1b565b6103dc565b6040516101c391906121dc565b61020961049b565b6040516101c391906121ea565b6102096104a1565b6101f461022c366004611932565b6104b8565b610209610601565b61020961060d565b610249610613565b6040516101c3919061241a565b610269610264366004611a1b565b610618565b005b6101d46102793660046118d2565b610833565b61028661084e565b6040516101c391906123f1565b6102696102a13660046118d2565b610856565b6102866102b43660046118d2565b610863565b6102096102c73660046118d2565b61087b565b61024961089f565b6102e76102e2366004611a1b565b6108a4565b6040516101c39190612436565b6102096103023660046118d2565b610ab2565b6101b6610ac4565b6101f461031d366004611a1b565b610ae3565b6102e76103303660046118d2565b610b1f565b610269610343366004611a4b565b610b8f565b61026961035636600461197f565b610d78565b6102096103693660046118f8565b611063565b610209611097565b610389610384366004611ad2565b6110a3565b6040516101c39291906123ff565b6102696103a53660046118d2565b6110d8565b604051806040016040528060078152602001660556e69737761760cc1b81525081565b6001546001600160a01b031681565b6000806000198314156103f25750600019610417565b610414836040518060600160405280602481526020016126c06024913961116b565b90505b3360008181526003602090815260408083206001600160a01b03891680855292529182902080546001600160601b0319166001600160601b03861617905590519091907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610487908590612428565b60405180910390a360019150505b92915050565b60005481565b6040516104ad9061219d565b604051809103902081565b6001600160a01b03831660009081526003602090815260408083203380855290835281842054825160608101909352602480845291936001600160601b0390911692859261051092889291906126c09083013961116b565b9050866001600160a01b0316836001600160a01b03161415801561053d57506001600160601b0382811614155b156105e757600061056783836040518060600160405280603c8152602001612540603c913961119a565b6001600160a01b038981166000818152600360209081526040808320948a16808452949091529081902080546001600160601b0319166001600160601b0386161790555192935090917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906105dd908590612428565b60405180910390a3505b6105f28787836111d9565b600193505050505b9392505050565b6040516104ad90612192565b60025481565b601281565b6001546001600160a01b0316331461064b5760405162461bcd60e51b815260040161064290612381565b60405180910390fd5b60025442101561066d5760405162461bcd60e51b815260040161064290612341565b6001600160a01b0382166106935760405162461bcd60e51b815260040161064290612331565b6106a1426301e1338061137f565b60028190555060006106cb8260405180606001604052806021815260200161269f6021913961116b565b90506106e76106e0600054600260ff166113a4565b60646113de565b816001600160601b0316111561070f5760405162461bcd60e51b815260040161064290612371565b610745610727600054836001600160601b031661137f565b60405180606001604052806026815260200161257c6026913961116b565b6001600160601b0390811660009081556001600160a01b038516815260046020908152604091829020548251606081019093526024808452610797949190911692859290919061251c90830139611420565b6001600160a01b03841660008181526004602052604080822080546001600160601b0319166001600160601b03959095169490941790935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610801908590612428565b60405180910390a36001600160a01b0380841660009081526005602052604081205461082e92168361145c565b505050565b6005602052600090815260409020546001600160a01b031681565b6301e1338081565b61086033826115ee565b50565b60076020526000908152604090205463ffffffff1681565b6001600160a01b03166000908152600460205260409020546001600160601b031690565b600281565b60004382106108c55760405162461bcd60e51b815260040161064290612321565b6001600160a01b03831660009081526007602052604090205463ffffffff16806108f3576000915050610495565b6001600160a01b038416600090815260066020908152604080832063ffffffff60001986018116855292529091205416831061096f576001600160a01b03841660009081526006602090815260408083206000199490940163ffffffff1683529290522054600160201b90046001600160601b03169050610495565b6001600160a01b038416600090815260066020908152604080832083805290915290205463ffffffff168310156109aa576000915050610495565b600060001982015b8163ffffffff168163ffffffff161115610a6d57600282820363ffffffff160481036109dc61188f565b506001600160a01b038716600090815260066020908152604080832063ffffffff858116855290835292819020815180830190925254928316808252600160201b9093046001600160601b03169181019190915290871415610a48576020015194506104959350505050565b805163ffffffff16871115610a5f57819350610a66565b6001820392505b50506109b2565b506001600160a01b038516600090815260066020908152604080832063ffffffff909416835292905220546001600160601b03600160201b9091041691505092915050565b60086020526000908152604090205481565b60405180604001604052806003815260200162554e4960e81b81525081565b600080610b088360405180606001604052806025815260200161267a6025913961116b565b9050610b153385836111d9565b5060019392505050565b6001600160a01b03811660009081526007602052604081205463ffffffff1680610b4a5760006105fa565b6001600160a01b0383166000908152600660209081526040808320600019850163ffffffff168452909152902054600160201b90046001600160601b03169392505050565b6000604051610b9d9061219d565b6040805191829003822082820190915260078252660556e69737761760cc1b6020909201919091527f99c45e8ee5dde061ced9c812089094fbd28a020e7e37f2851198887e5ca64985610bee611678565b30604051602001610c029493929190612290565b6040516020818303038152906040528051906020012090506000604051610c28906121a8565b604051908190038120610c43918a908a908a90602001612252565b60405160208183030381529060405280519060200120905060008282604051602001610c70929190612161565b604051602081830303815290604052805190602001209050600060018288888860405160008152602001604052604051610cad94939291906122c5565b6020604051602081039080840390855afa158015610ccf573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610d025760405162461bcd60e51b815260040161064290612311565b6001600160a01b03811660009081526008602052604090208054600181019091558914610d415760405162461bcd60e51b8152600401610642906123a1565b87421115610d615760405162461bcd60e51b8152600401610642906122f1565b610d6b818b6115ee565b505050505b505050505050565b6000600019861415610d8d5750600019610db2565b610daf866040518060600160405280602381526020016125d76023913961116b565b90505b6000604051610dc09061219d565b6040805191829003822082820190915260078252660556e69737761760cc1b6020909201919091527f99c45e8ee5dde061ced9c812089094fbd28a020e7e37f2851198887e5ca64985610e11611678565b30604051602001610e259493929190612290565b6040516020818303038152906040528051906020012090506000604051610e4b90612192565b604080519182900382206001600160a01b038d16600090815260086020908152929020805460018101909155610e8d9391928e928e928e9290918e91016121f8565b60405160208183030381529060405280519060200120905060008282604051602001610eba929190612161565b604051602081830303815290604052805190602001209050600060018289898960405160008152602001604052604051610ef794939291906122c5565b6020604051602081039080840390855afa158015610f19573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610f4c5760405162461bcd60e51b8152600401610642906123d1565b8b6001600160a01b0316816001600160a01b031614610f7d5760405162461bcd60e51b8152600401610642906123e1565b88421115610f9d5760405162461bcd60e51b8152600401610642906123c1565b84600360008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160601b0302191690836001600160601b031602179055508a6001600160a01b03168c6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258760405161104d9190612428565b60405180910390a3505050505050505050505050565b6001600160a01b0391821660009081526003602090815260408083209390941682529190915220546001600160601b031690565b6040516104ad906121a8565b600660209081526000928352604080842090915290825290205463ffffffff811690600160201b90046001600160601b031682565b6001546001600160a01b031633146111025760405162461bcd60e51b815260040161064290612391565b6001546040517f3b0007eb941cf645526cbb3a4fdaecda9d28ce4843167d9263b536a1f1edc0f691611141916001600160a01b039091169084906121c1565b60405180910390a1600180546001600160a01b0319166001600160a01b0392909216919091179055565b600081600160601b84106111925760405162461bcd60e51b815260040161064291906122e0565b509192915050565b6000836001600160601b0316836001600160601b0316111582906111d15760405162461bcd60e51b815260040161064291906122e0565b505050900390565b6001600160a01b0383166111ff5760405162461bcd60e51b8152600401610642906123b1565b6001600160a01b0382166112255760405162461bcd60e51b815260040161064290612351565b6001600160a01b038316600090815260046020908152604091829020548251606081019093526035808452611270936001600160601b0390921692859291906125a29083013961119a565b6001600160a01b03848116600090815260046020908152604080832080546001600160601b0319166001600160601b0396871617905592861682529082902054825160608101909352602f8084526112d894919091169285929091906126e490830139611420565b6001600160a01b038381166000818152600460205260409081902080546001600160601b0319166001600160601b0395909516949094179093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611345908590612428565b60405180910390a36001600160a01b0380841660009081526005602052604080822054858416835291205461082e9291821691168361145c565b6000828201838110156105fa5760405162461bcd60e51b815260040161064290612301565b6000826113b357506000610495565b828202828482816113c057fe5b04146105fa5760405162461bcd60e51b815260040161064290612361565b60006105fa83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061167c565b6000838301826001600160601b0380871690831610156114535760405162461bcd60e51b815260040161064291906122e0565b50949350505050565b816001600160a01b0316836001600160a01b03161415801561148757506000816001600160601b0316115b1561082e576001600160a01b0383161561153f576001600160a01b03831660009081526007602052604081205463ffffffff1690816114c7576000611506565b6001600160a01b0385166000908152600660209081526040808320600019860163ffffffff168452909152902054600160201b90046001600160601b03165b9050600061152d82856040518060600160405280602781526020016126536027913961119a565b905061153b868484846116b3565b5050505b6001600160a01b0382161561082e576001600160a01b03821660009081526007602052604081205463ffffffff16908161157a5760006115b9565b6001600160a01b0384166000908152600660209081526040808320600019860163ffffffff168452909152902054600160201b90046001600160601b03165b905060006115e082856040518060600160405280602681526020016125fa60269139611420565b9050610d70858484846116b3565b6001600160a01b03808316600081815260056020818152604080842080546004845282862054949093528787166001600160a01b031984168117909155905191909516946001600160601b039092169391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a461167282848361145c565b50505050565b4690565b6000818361169d5760405162461bcd60e51b815260040161064291906122e0565b5060008385816116a957fe5b0495945050505050565b60006116d74360405180606001604052806033815260200161262060339139611868565b905060008463ffffffff1611801561172057506001600160a01b038516600090815260066020908152604080832063ffffffff6000198901811685529252909120548282169116145b1561177f576001600160a01b0385166000908152600660209081526040808320600019880163ffffffff168452909152902080546fffffffffffffffffffffffff000000001916600160201b6001600160601b0385160217905561181e565b60408051808201825263ffffffff80841682526001600160601b0380861660208085019182526001600160a01b038b166000818152600683528781208c871682528352878120965187549451909516600160201b026fffffffffffffffffffffffff000000001995871663ffffffff19958616179590951694909417909555938252600790935292909220805460018801909316929091169190911790555b846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248484604051611859929190612444565b60405180910390a25050505050565b600081600160201b84106111925760405162461bcd60e51b815260040161064291906122e0565b604080518082019091526000808252602082015290565b8035610495816124ec565b803561049581612500565b803561049581612509565b803561049581612512565b6000602082840312156118e457600080fd5b60006118f084846118a6565b949350505050565b6000806040838503121561190b57600080fd5b600061191785856118a6565b9250506020611928858286016118a6565b9150509250929050565b60008060006060848603121561194757600080fd5b600061195386866118a6565b9350506020611964868287016118a6565b9250506040611975868287016118b1565b9150509250925092565b600080600080600080600060e0888a03121561199a57600080fd5b60006119a68a8a6118a6565b97505060206119b78a828b016118a6565b96505060406119c88a828b016118b1565b95505060606119d98a828b016118b1565b94505060806119ea8a828b016118c7565b93505060a06119fb8a828b016118b1565b92505060c0611a0c8a828b016118b1565b91505092959891949750929550565b60008060408385031215611a2e57600080fd5b6000611a3a85856118a6565b9250506020611928858286016118b1565b60008060008060008060c08789031215611a6457600080fd5b6000611a7089896118a6565b9650506020611a8189828a016118b1565b9550506040611a9289828a016118b1565b9450506060611aa389828a016118c7565b9350506080611ab489828a016118b1565b92505060a0611ac589828a016118b1565b9150509295509295509295565b60008060408385031215611ae557600080fd5b6000611af185856118a6565b9250506020611928858286016118bc565b611b0b81612471565b82525050565b611b0b8161247c565b611b0b81612481565b611b0b611b2f82612481565b612481565b6000611b3f8261245f565b611b498185612463565b9350611b598185602086016124b6565b611b62816124e2565b9093019392505050565b6000611b79602583612463565b7f556e693a3a64656c656761746542795369673a207369676e61747572652065788152641c1a5c995960da1b602082015260400192915050565b6000611bc060028361246c565b61190160f01b815260020192915050565b6000611bde601b83612463565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000815260200192915050565b6000611c17602583612463565b7f556e693a3a64656c656761746542795369673a20696e76616c6964207369676e815264617475726560d81b602082015260400192915050565b6000611c5e602683612463565b7f556e693a3a6765745072696f72566f7465733a206e6f742079657420646574658152651c9b5a5b995960d21b602082015260400192915050565b6000611ca6602e83612463565b7f556e693a3a6d696e743a2063616e6e6f74207472616e7366657220746f20746881526d65207a65726f206164647265737360901b602082015260400192915050565b6000611cf660528361246c565b7f5065726d69742861646472657373206f776e65722c616464726573732073706581527f6e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63656020820152712c75696e7432353620646561646c696e652960701b604082015260520192915050565b6000611d70602283612463565b7f556e693a3a6d696e743a206d696e74696e67206e6f7420616c6c6f7765642079815261195d60f21b602082015260400192915050565b6000611db460438361246c565b7f454950373132446f6d61696e28737472696e67206e616d652c75696e7432353681527f20636861696e49642c6164647265737320766572696679696e67436f6e74726160208201526263742960e81b604082015260430192915050565b6000611e1f603983612463565b7f556e693a3a5f7472616e73666572546f6b656e733a2063616e6e6f742074726181527f6e7366657220746f20746865207a65726f206164647265737300000000000000602082015260400192915050565b6000611e7e602183612463565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f8152607760f81b602082015260400192915050565b6000611ec1601c83612463565b7f556e693a3a6d696e743a206578636565646564206d696e742063617000000000815260200192915050565b6000611efa602383612463565b7f556e693a3a6d696e743a206f6e6c7920746865206d696e7465722063616e206d8152621a5b9d60ea1b602082015260400192915050565b6000611f3f603d83612463565b7f556e693a3a7365744d696e7465723a206f6e6c7920746865206d696e7465722081527f63616e206368616e676520746865206d696e7465722061646472657373000000602082015260400192915050565b6000611f9e602183612463565b7f556e693a3a64656c656761746542795369673a20696e76616c6964206e6f6e638152606560f81b602082015260400192915050565b6000611fe1603b83612463565b7f556e693a3a5f7472616e73666572546f6b656e733a2063616e6e6f742074726181527f6e736665722066726f6d20746865207a65726f20616464726573730000000000602082015260400192915050565b6000612040601e83612463565b7f556e693a3a7065726d69743a207369676e617475726520657870697265640000815260200192915050565b6000612079603a8361246c565b7f44656c65676174696f6e28616464726573732064656c6567617465652c75696e81527f74323536206e6f6e63652c75696e7432353620657870697279290000000000006020820152603a0192915050565b60006120d8601e83612463565b7f556e693a3a7065726d69743a20696e76616c6964207369676e61747572650000815260200192915050565b6000612111601983612463565b7f556e693a3a7065726d69743a20756e617574686f72697a656400000000000000815260200192915050565b611b0b81612490565b611b0b81612499565b611b0b816124ab565b611b0b8161249f565b600061216c82611bb3565b91506121788285611b23565b6020820191506121888284611b23565b5060200192915050565b600061049582611ce9565b600061049582611da7565b60006104958261206c565b602081016104958284611b02565b604081016121cf8285611b02565b6105fa6020830184611b02565b602081016104958284611b11565b602081016104958284611b1a565b60c081016122068289611b1a565b6122136020830188611b02565b6122206040830187611b02565b61222d6060830186611b1a565b61223a6080830185611b1a565b61224760a0830184611b1a565b979650505050505050565b608081016122608287611b1a565b61226d6020830186611b02565b61227a6040830185611b1a565b6122876060830184611b1a565b95945050505050565b6080810161229e8287611b1a565b6122ab6020830186611b1a565b6122b86040830185611b1a565b6122876060830184611b02565b608081016122d38287611b1a565b61226d6020830186612146565b602080825281016105fa8184611b34565b6020808252810161049581611b6c565b6020808252810161049581611bd1565b6020808252810161049581611c0a565b6020808252810161049581611c51565b6020808252810161049581611c99565b6020808252810161049581611d63565b6020808252810161049581611e12565b6020808252810161049581611e71565b6020808252810161049581611eb4565b6020808252810161049581611eed565b6020808252810161049581611f32565b6020808252810161049581611f91565b6020808252810161049581611fd4565b6020808252810161049581612033565b60208082528101610495816120cb565b6020808252810161049581612104565b60208101610495828461213d565b6040810161240d828561213d565b6105fa6020830184612158565b602081016104958284612146565b60208101610495828461214f565b602081016104958284612158565b60408101612452828561214f565b6105fa602083018461214f565b5190565b90815260200190565b919050565b600061049582612484565b151590565b90565b6001600160a01b031690565b63ffffffff1690565b60ff1690565b6001600160601b031690565b60006104958261249f565b60005b838110156124d15781810151838201526020016124b9565b838111156116725750506000910152565b601f01601f191690565b6124f581612471565b811461086057600080fd5b6124f581612481565b6124f581612490565b6124f58161249956fe556e693a3a6d696e743a207472616e7366657220616d6f756e74206f766572666c6f7773556e693a3a7472616e7366657246726f6d3a207472616e7366657220616d6f756e742065786365656473207370656e64657220616c6c6f77616e6365556e693a3a6d696e743a20746f74616c537570706c7920657863656564732039362062697473556e693a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e7420657863656564732062616c616e6365556e693a3a7065726d69743a20616d6f756e7420657863656564732039362062697473556e693a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f7773556e693a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473556e693a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f7773556e693a3a7472616e736665723a20616d6f756e7420657863656564732039362062697473556e693a3a6d696e743a20616d6f756e7420657863656564732039362062697473556e693a3a617070726f76653a20616d6f756e7420657863656564732039362062697473556e693a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e74206f766572666c6f7773a365627a7a72315820b228f14032f179f6e81f367b78ff3ff6cdc127c0f42b53f91c18ec8ff8135cbe6c6578706572696d656e74616cf564736f6c63430005110040",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FCFFF45 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xB4B5EA57 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0xFCA3B5AA EQ PUSH2 0x397 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x348 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x782D6FE1 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x30F JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x76C71CA1 EQ PUSH2 0x2CC JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x30ADF81F GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x40C10F19 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x5C11D62F EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x293 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x30B36CEF EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x241 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x7546172 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x21E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B6 PUSH2 0x3AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x22E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D4 PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x21B3 JUMP JUMPDEST PUSH2 0x1F4 PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0x1A1B JUMP JUMPDEST PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x21DC JUMP JUMPDEST PUSH2 0x209 PUSH2 0x49B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x21EA JUMP JUMPDEST PUSH2 0x209 PUSH2 0x4A1 JUMP JUMPDEST PUSH2 0x1F4 PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0x1932 JUMP JUMPDEST PUSH2 0x4B8 JUMP JUMPDEST PUSH2 0x209 PUSH2 0x601 JUMP JUMPDEST PUSH2 0x209 PUSH2 0x60D JUMP JUMPDEST PUSH2 0x249 PUSH2 0x613 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x241A JUMP JUMPDEST PUSH2 0x269 PUSH2 0x264 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A1B JUMP JUMPDEST PUSH2 0x618 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D4 PUSH2 0x279 CALLDATASIZE PUSH1 0x4 PUSH2 0x18D2 JUMP JUMPDEST PUSH2 0x833 JUMP JUMPDEST PUSH2 0x286 PUSH2 0x84E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x23F1 JUMP JUMPDEST PUSH2 0x269 PUSH2 0x2A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x18D2 JUMP JUMPDEST PUSH2 0x856 JUMP JUMPDEST PUSH2 0x286 PUSH2 0x2B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x18D2 JUMP JUMPDEST PUSH2 0x863 JUMP JUMPDEST PUSH2 0x209 PUSH2 0x2C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x18D2 JUMP JUMPDEST PUSH2 0x87B JUMP JUMPDEST PUSH2 0x249 PUSH2 0x89F JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A1B JUMP JUMPDEST PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x2436 JUMP JUMPDEST PUSH2 0x209 PUSH2 0x302 CALLDATASIZE PUSH1 0x4 PUSH2 0x18D2 JUMP JUMPDEST PUSH2 0xAB2 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0xAC4 JUMP JUMPDEST PUSH2 0x1F4 PUSH2 0x31D CALLDATASIZE PUSH1 0x4 PUSH2 0x1A1B JUMP JUMPDEST PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x330 CALLDATASIZE PUSH1 0x4 PUSH2 0x18D2 JUMP JUMPDEST PUSH2 0xB1F JUMP JUMPDEST PUSH2 0x269 PUSH2 0x343 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A4B JUMP JUMPDEST PUSH2 0xB8F JUMP JUMPDEST PUSH2 0x269 PUSH2 0x356 CALLDATASIZE PUSH1 0x4 PUSH2 0x197F JUMP JUMPDEST PUSH2 0xD78 JUMP JUMPDEST PUSH2 0x209 PUSH2 0x369 CALLDATASIZE PUSH1 0x4 PUSH2 0x18F8 JUMP JUMPDEST PUSH2 0x1063 JUMP JUMPDEST PUSH2 0x209 PUSH2 0x1097 JUMP JUMPDEST PUSH2 0x389 PUSH2 0x384 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD2 JUMP JUMPDEST PUSH2 0x10A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP3 SWAP2 SWAP1 PUSH2 0x23FF JUMP JUMPDEST PUSH2 0x269 PUSH2 0x3A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x18D2 JUMP JUMPDEST PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x556E697377617 PUSH1 0xCC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 NOT DUP4 EQ ISZERO PUSH2 0x3F2 JUMPI POP PUSH1 0x0 NOT PUSH2 0x417 JUMP JUMPDEST PUSH2 0x414 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26C0 PUSH1 0x24 SWAP2 CODECOPY PUSH2 0x116B JUMP JUMPDEST SWAP1 POP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP7 AND OR SWAP1 SSTORE SWAP1 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x487 SWAP1 DUP6 SWAP1 PUSH2 0x2428 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AD SWAP1 PUSH2 0x219D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP1 DUP5 MSTORE SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND SWAP3 DUP6 SWAP3 PUSH2 0x510 SWAP3 DUP9 SWAP3 SWAP2 SWAP1 PUSH2 0x26C0 SWAP1 DUP4 ADD CODECOPY PUSH2 0x116B JUMP JUMPDEST SWAP1 POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x53D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 DUP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x5E7 JUMPI PUSH1 0x0 PUSH2 0x567 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3C DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2540 PUSH1 0x3C SWAP2 CODECOPY PUSH2 0x119A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP11 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP7 AND OR SWAP1 SSTORE MLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x5DD SWAP1 DUP6 SWAP1 PUSH2 0x2428 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST PUSH2 0x5F2 DUP8 DUP8 DUP4 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x1 SWAP4 POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AD SWAP1 PUSH2 0x2192 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x64B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP1 PUSH2 0x2381 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP LT ISZERO PUSH2 0x66D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP1 PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x693 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP1 PUSH2 0x2331 JUMP JUMPDEST PUSH2 0x6A1 TIMESTAMP PUSH4 0x1E13380 PUSH2 0x137F JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x6CB DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x269F PUSH1 0x21 SWAP2 CODECOPY PUSH2 0x116B JUMP JUMPDEST SWAP1 POP PUSH2 0x6E7 PUSH2 0x6E0 PUSH1 0x0 SLOAD PUSH1 0x2 PUSH1 0xFF AND PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x64 PUSH2 0x13DE JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT ISZERO PUSH2 0x70F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP1 PUSH2 0x2371 JUMP JUMPDEST PUSH2 0x745 PUSH2 0x727 PUSH1 0x0 SLOAD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x137F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x257C PUSH1 0x26 SWAP2 CODECOPY PUSH2 0x116B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP1 DUP5 MSTORE PUSH2 0x797 SWAP5 SWAP2 SWAP1 SWAP2 AND SWAP3 DUP6 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x251C SWAP1 DUP4 ADD CODECOPY PUSH2 0x1420 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP6 SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x801 SWAP1 DUP6 SWAP1 PUSH2 0x2428 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x82E SWAP3 AND DUP4 PUSH2 0x145C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH4 0x1E13380 DUP2 JUMP JUMPDEST PUSH2 0x860 CALLER DUP3 PUSH2 0x15EE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x8C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP1 PUSH2 0x2321 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0x8F3 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x495 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP7 ADD DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD AND DUP4 LT PUSH2 0x96F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT SWAP5 SWAP1 SWAP5 ADD PUSH4 0xFFFFFFFF AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 POP PUSH2 0x495 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP1 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP4 LT ISZERO PUSH2 0x9AA JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x495 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 ADD JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0xA6D JUMPI PUSH1 0x2 DUP3 DUP3 SUB PUSH4 0xFFFFFFFF AND DIV DUP2 SUB PUSH2 0x9DC PUSH2 0x188F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF DUP6 DUP2 AND DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE SLOAD SWAP3 DUP4 AND DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP4 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP8 EQ ISZERO PUSH2 0xA48 JUMPI PUSH1 0x20 ADD MLOAD SWAP5 POP PUSH2 0x495 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH4 0xFFFFFFFF AND DUP8 GT ISZERO PUSH2 0xA5F JUMPI DUP2 SWAP4 POP PUSH2 0xA66 JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP3 POP JUMPDEST POP POP PUSH2 0x9B2 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP2 DIV AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x554E49 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB08 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x267A PUSH1 0x25 SWAP2 CODECOPY PUSH2 0x116B JUMP JUMPDEST SWAP1 POP PUSH2 0xB15 CALLER DUP6 DUP4 PUSH2 0x11D9 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0xB4A JUMPI PUSH1 0x0 PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT DUP6 ADD PUSH4 0xFFFFFFFF AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xB9D SWAP1 PUSH2 0x219D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 DUP3 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH7 0x556E697377617 PUSH1 0xCC SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x99C45E8EE5DDE061CED9C812089094FBD28A020E7E37F2851198887E5CA64985 PUSH2 0xBEE PUSH2 0x1678 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC02 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2290 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xC28 SWAP1 PUSH2 0x21A8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 PUSH2 0xC43 SWAP2 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x20 ADD PUSH2 0x2252 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC70 SWAP3 SWAP2 SWAP1 PUSH2 0x2161 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xCAD SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22C5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCCF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP1 PUSH2 0x2311 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP10 EQ PUSH2 0xD41 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP1 PUSH2 0x23A1 JUMP JUMPDEST DUP8 TIMESTAMP GT ISZERO PUSH2 0xD61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP1 PUSH2 0x22F1 JUMP JUMPDEST PUSH2 0xD6B DUP2 DUP12 PUSH2 0x15EE JUMP JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP7 EQ ISZERO PUSH2 0xD8D JUMPI POP PUSH1 0x0 NOT PUSH2 0xDB2 JUMP JUMPDEST PUSH2 0xDAF DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25D7 PUSH1 0x23 SWAP2 CODECOPY PUSH2 0x116B JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xDC0 SWAP1 PUSH2 0x219D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 DUP3 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH7 0x556E697377617 PUSH1 0xCC SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x99C45E8EE5DDE061CED9C812089094FBD28A020E7E37F2851198887E5CA64985 PUSH2 0xE11 PUSH2 0x1678 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE25 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2290 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xE4B SWAP1 PUSH2 0x2192 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE PUSH2 0xE8D SWAP4 SWAP2 SWAP3 DUP15 SWAP3 DUP15 SWAP3 DUP15 SWAP3 SWAP1 SWAP2 DUP15 SWAP2 ADD PUSH2 0x21F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xEBA SWAP3 SWAP2 SWAP1 PUSH2 0x2161 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xEF7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22C5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF19 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF4C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP1 PUSH2 0x23D1 JUMP JUMPDEST DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xF7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP1 PUSH2 0x23E1 JUMP JUMPDEST DUP9 TIMESTAMP GT ISZERO PUSH2 0xF9D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP1 PUSH2 0x23C1 JUMP JUMPDEST DUP5 PUSH1 0x3 PUSH1 0x0 DUP15 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP8 PUSH1 0x40 MLOAD PUSH2 0x104D SWAP2 SWAP1 PUSH2 0x2428 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AD SWAP1 PUSH2 0x21A8 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP3 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1102 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP1 PUSH2 0x2391 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x3B0007EB941CF645526CBB3A4FDAECDA9D28CE4843167D9263B536A1F1EDC0F6 SWAP2 PUSH2 0x1141 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 SWAP1 PUSH2 0x21C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x60 SHL DUP5 LT PUSH2 0x1192 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP2 SWAP1 PUSH2 0x22E0 JUMP JUMPDEST POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT ISZERO DUP3 SWAP1 PUSH2 0x11D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP2 SWAP1 PUSH2 0x22E0 JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x11FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP1 PUSH2 0x23B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1225 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP1 PUSH2 0x2351 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x35 DUP1 DUP5 MSTORE PUSH2 0x1270 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP6 SWAP3 SWAP2 SWAP1 PUSH2 0x25A2 SWAP1 DUP4 ADD CODECOPY PUSH2 0x119A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP7 DUP8 AND OR SWAP1 SSTORE SWAP3 DUP7 AND DUP3 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x2F DUP1 DUP5 MSTORE PUSH2 0x12D8 SWAP5 SWAP2 SWAP1 SWAP2 AND SWAP3 DUP6 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x26E4 SWAP1 DUP4 ADD CODECOPY PUSH2 0x1420 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP6 SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x1345 SWAP1 DUP6 SWAP1 PUSH2 0x2428 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP6 DUP5 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0x82E SWAP3 SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0x145C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x5FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP1 PUSH2 0x2301 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x13B3 JUMPI POP PUSH1 0x0 PUSH2 0x495 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x13C0 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x5FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP1 PUSH2 0x2361 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5FA DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x167C JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP8 AND SWAP1 DUP4 AND LT ISZERO PUSH2 0x1453 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP2 SWAP1 PUSH2 0x22E0 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x1487 JUMPI POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT JUMPDEST ISZERO PUSH2 0x82E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x153F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x14C7 JUMPI PUSH1 0x0 PUSH2 0x1506 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT DUP7 ADD PUSH4 0xFFFFFFFF AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x152D DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2653 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x119A JUMP JUMPDEST SWAP1 POP PUSH2 0x153B DUP7 DUP5 DUP5 DUP5 PUSH2 0x16B3 JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x82E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x157A JUMPI PUSH1 0x0 PUSH2 0x15B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT DUP7 ADD PUSH4 0xFFFFFFFF AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x15E0 DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25FA PUSH1 0x26 SWAP2 CODECOPY PUSH2 0x1420 JUMP JUMPDEST SWAP1 POP PUSH2 0xD70 DUP6 DUP5 DUP5 DUP5 PUSH2 0x16B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x4 DUP5 MSTORE DUP3 DUP7 KECCAK256 SLOAD SWAP5 SWAP1 SWAP4 MSTORE DUP8 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP6 AND SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP3 AND SWAP4 SWAP2 SWAP3 DUP6 SWAP3 SWAP2 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP2 SWAP1 LOG4 PUSH2 0x1672 DUP3 DUP5 DUP4 PUSH2 0x145C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x169D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP2 SWAP1 PUSH2 0x22E0 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x16A9 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16D7 NUMBER PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x33 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2620 PUSH1 0x33 SWAP2 CODECOPY PUSH2 0x1868 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x1720 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP10 ADD DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD DUP3 DUP3 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x177F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT DUP9 ADD PUSH4 0xFFFFFFFF AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFF00000000 NOT AND PUSH1 0x1 PUSH1 0x20 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP6 AND MUL OR SWAP1 SSTORE PUSH2 0x181E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH4 0xFFFFFFFF DUP1 DUP5 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP7 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 DUP4 MSTORE DUP8 DUP2 KECCAK256 DUP13 DUP8 AND DUP3 MSTORE DUP4 MSTORE DUP8 DUP2 KECCAK256 SWAP7 MLOAD DUP8 SLOAD SWAP5 MLOAD SWAP1 SWAP6 AND PUSH1 0x1 PUSH1 0x20 SHL MUL PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFF00000000 NOT SWAP6 DUP8 AND PUSH4 0xFFFFFFFF NOT SWAP6 DUP7 AND OR SWAP6 SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP6 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 SWAP4 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP9 ADD SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1859 SWAP3 SWAP2 SWAP1 PUSH2 0x2444 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x20 SHL DUP5 LT PUSH2 0x1192 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP2 SWAP1 PUSH2 0x22E0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x495 DUP2 PUSH2 0x24EC JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x495 DUP2 PUSH2 0x2500 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x495 DUP2 PUSH2 0x2509 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x495 DUP2 PUSH2 0x2512 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18F0 DUP5 DUP5 PUSH2 0x18A6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x190B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1917 DUP6 DUP6 PUSH2 0x18A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1928 DUP6 DUP3 DUP7 ADD PUSH2 0x18A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1947 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1953 DUP7 DUP7 PUSH2 0x18A6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1964 DUP7 DUP3 DUP8 ADD PUSH2 0x18A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1975 DUP7 DUP3 DUP8 ADD PUSH2 0x18B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x199A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x19A6 DUP11 DUP11 PUSH2 0x18A6 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x19B7 DUP11 DUP3 DUP12 ADD PUSH2 0x18A6 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x19C8 DUP11 DUP3 DUP12 ADD PUSH2 0x18B1 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x19D9 DUP11 DUP3 DUP12 ADD PUSH2 0x18B1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x19EA DUP11 DUP3 DUP12 ADD PUSH2 0x18C7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x19FB DUP11 DUP3 DUP12 ADD PUSH2 0x18B1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1A0C DUP11 DUP3 DUP12 ADD PUSH2 0x18B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1A3A DUP6 DUP6 PUSH2 0x18A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1928 DUP6 DUP3 DUP7 ADD PUSH2 0x18B1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1A64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1A70 DUP10 DUP10 PUSH2 0x18A6 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x1A81 DUP10 DUP3 DUP11 ADD PUSH2 0x18B1 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x1A92 DUP10 DUP3 DUP11 ADD PUSH2 0x18B1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x1AA3 DUP10 DUP3 DUP11 ADD PUSH2 0x18C7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x1AB4 DUP10 DUP3 DUP11 ADD PUSH2 0x18B1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x1AC5 DUP10 DUP3 DUP11 ADD PUSH2 0x18B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1AF1 DUP6 DUP6 PUSH2 0x18A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1928 DUP6 DUP3 DUP7 ADD PUSH2 0x18BC JUMP JUMPDEST PUSH2 0x1B0B DUP2 PUSH2 0x2471 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1B0B DUP2 PUSH2 0x247C JUMP JUMPDEST PUSH2 0x1B0B DUP2 PUSH2 0x2481 JUMP JUMPDEST PUSH2 0x1B0B PUSH2 0x1B2F DUP3 PUSH2 0x2481 JUMP JUMPDEST PUSH2 0x2481 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B3F DUP3 PUSH2 0x245F JUMP JUMPDEST PUSH2 0x1B49 DUP2 DUP6 PUSH2 0x2463 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B59 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x24B6 JUMP JUMPDEST PUSH2 0x1B62 DUP2 PUSH2 0x24E2 JUMP JUMPDEST SWAP1 SWAP4 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B79 PUSH1 0x25 DUP4 PUSH2 0x2463 JUMP JUMPDEST PUSH32 0x556E693A3A64656C656761746542795369673A207369676E6174757265206578 DUP2 MSTORE PUSH5 0x1C1A5C9959 PUSH1 0xDA SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC0 PUSH1 0x2 DUP4 PUSH2 0x246C JUMP JUMPDEST PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BDE PUSH1 0x1B DUP4 PUSH2 0x2463 JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C17 PUSH1 0x25 DUP4 PUSH2 0x2463 JUMP JUMPDEST PUSH32 0x556E693A3A64656C656761746542795369673A20696E76616C6964207369676E DUP2 MSTORE PUSH5 0x6174757265 PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C5E PUSH1 0x26 DUP4 PUSH2 0x2463 JUMP JUMPDEST PUSH32 0x556E693A3A6765745072696F72566F7465733A206E6F74207965742064657465 DUP2 MSTORE PUSH6 0x1C9B5A5B9959 PUSH1 0xD2 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CA6 PUSH1 0x2E DUP4 PUSH2 0x2463 JUMP JUMPDEST PUSH32 0x556E693A3A6D696E743A2063616E6E6F74207472616E7366657220746F207468 DUP2 MSTORE PUSH14 0x65207A65726F2061646472657373 PUSH1 0x90 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF6 PUSH1 0x52 DUP4 PUSH2 0x246C JUMP JUMPDEST PUSH32 0x5065726D69742861646472657373206F776E65722C6164647265737320737065 DUP2 MSTORE PUSH32 0x6E6465722C75696E743235362076616C75652C75696E74323536206E6F6E6365 PUSH1 0x20 DUP3 ADD MSTORE PUSH18 0x2C75696E7432353620646561646C696E6529 PUSH1 0x70 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x52 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D70 PUSH1 0x22 DUP4 PUSH2 0x2463 JUMP JUMPDEST PUSH32 0x556E693A3A6D696E743A206D696E74696E67206E6F7420616C6C6F7765642079 DUP2 MSTORE PUSH2 0x195D PUSH1 0xF2 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DB4 PUSH1 0x43 DUP4 PUSH2 0x246C JUMP JUMPDEST PUSH32 0x454950373132446F6D61696E28737472696E67206E616D652C75696E74323536 DUP2 MSTORE PUSH32 0x20636861696E49642C6164647265737320766572696679696E67436F6E747261 PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0x637429 PUSH1 0xE8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x43 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E1F PUSH1 0x39 DUP4 PUSH2 0x2463 JUMP JUMPDEST PUSH32 0x556E693A3A5F7472616E73666572546F6B656E733A2063616E6E6F7420747261 DUP2 MSTORE PUSH32 0x6E7366657220746F20746865207A65726F206164647265737300000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E7E PUSH1 0x21 DUP4 PUSH2 0x2463 JUMP JUMPDEST PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F DUP2 MSTORE PUSH1 0x77 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EC1 PUSH1 0x1C DUP4 PUSH2 0x2463 JUMP JUMPDEST PUSH32 0x556E693A3A6D696E743A206578636565646564206D696E742063617000000000 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EFA PUSH1 0x23 DUP4 PUSH2 0x2463 JUMP JUMPDEST PUSH32 0x556E693A3A6D696E743A206F6E6C7920746865206D696E7465722063616E206D DUP2 MSTORE PUSH3 0x1A5B9D PUSH1 0xEA SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F3F PUSH1 0x3D DUP4 PUSH2 0x2463 JUMP JUMPDEST PUSH32 0x556E693A3A7365744D696E7465723A206F6E6C7920746865206D696E74657220 DUP2 MSTORE PUSH32 0x63616E206368616E676520746865206D696E7465722061646472657373000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F9E PUSH1 0x21 DUP4 PUSH2 0x2463 JUMP JUMPDEST PUSH32 0x556E693A3A64656C656761746542795369673A20696E76616C6964206E6F6E63 DUP2 MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FE1 PUSH1 0x3B DUP4 PUSH2 0x2463 JUMP JUMPDEST PUSH32 0x556E693A3A5F7472616E73666572546F6B656E733A2063616E6E6F7420747261 DUP2 MSTORE PUSH32 0x6E736665722066726F6D20746865207A65726F20616464726573730000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2040 PUSH1 0x1E DUP4 PUSH2 0x2463 JUMP JUMPDEST PUSH32 0x556E693A3A7065726D69743A207369676E617475726520657870697265640000 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2079 PUSH1 0x3A DUP4 PUSH2 0x246C JUMP JUMPDEST PUSH32 0x44656C65676174696F6E28616464726573732064656C6567617465652C75696E DUP2 MSTORE PUSH32 0x74323536206E6F6E63652C75696E743235362065787069727929000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3A ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20D8 PUSH1 0x1E DUP4 PUSH2 0x2463 JUMP JUMPDEST PUSH32 0x556E693A3A7065726D69743A20696E76616C6964207369676E61747572650000 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2111 PUSH1 0x19 DUP4 PUSH2 0x2463 JUMP JUMPDEST PUSH32 0x556E693A3A7065726D69743A20756E617574686F72697A656400000000000000 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B0B DUP2 PUSH2 0x2490 JUMP JUMPDEST PUSH2 0x1B0B DUP2 PUSH2 0x2499 JUMP JUMPDEST PUSH2 0x1B0B DUP2 PUSH2 0x24AB JUMP JUMPDEST PUSH2 0x1B0B DUP2 PUSH2 0x249F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x216C DUP3 PUSH2 0x1BB3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2178 DUP3 DUP6 PUSH2 0x1B23 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x2188 DUP3 DUP5 PUSH2 0x1B23 JUMP JUMPDEST POP PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x495 DUP3 PUSH2 0x1CE9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x495 DUP3 PUSH2 0x1DA7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x495 DUP3 PUSH2 0x206C JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x495 DUP3 DUP5 PUSH2 0x1B02 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x21CF DUP3 DUP6 PUSH2 0x1B02 JUMP JUMPDEST PUSH2 0x5FA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B02 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x495 DUP3 DUP5 PUSH2 0x1B11 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x495 DUP3 DUP5 PUSH2 0x1B1A JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD PUSH2 0x2206 DUP3 DUP10 PUSH2 0x1B1A JUMP JUMPDEST PUSH2 0x2213 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1B02 JUMP JUMPDEST PUSH2 0x2220 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1B02 JUMP JUMPDEST PUSH2 0x222D PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1B1A JUMP JUMPDEST PUSH2 0x223A PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1B1A JUMP JUMPDEST PUSH2 0x2247 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1B1A JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0x2260 DUP3 DUP8 PUSH2 0x1B1A JUMP JUMPDEST PUSH2 0x226D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1B02 JUMP JUMPDEST PUSH2 0x227A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1B1A JUMP JUMPDEST PUSH2 0x2287 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1B1A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0x229E DUP3 DUP8 PUSH2 0x1B1A JUMP JUMPDEST PUSH2 0x22AB PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1B1A JUMP JUMPDEST PUSH2 0x22B8 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1B1A JUMP JUMPDEST PUSH2 0x2287 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1B02 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0x22D3 DUP3 DUP8 PUSH2 0x1B1A JUMP JUMPDEST PUSH2 0x226D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2146 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x5FA DUP2 DUP5 PUSH2 0x1B34 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x495 DUP2 PUSH2 0x1B6C JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x495 DUP2 PUSH2 0x1BD1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x495 DUP2 PUSH2 0x1C0A JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x495 DUP2 PUSH2 0x1C51 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x495 DUP2 PUSH2 0x1C99 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x495 DUP2 PUSH2 0x1D63 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x495 DUP2 PUSH2 0x1E12 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x495 DUP2 PUSH2 0x1E71 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x495 DUP2 PUSH2 0x1EB4 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x495 DUP2 PUSH2 0x1EED JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x495 DUP2 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x495 DUP2 PUSH2 0x1F91 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x495 DUP2 PUSH2 0x1FD4 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x495 DUP2 PUSH2 0x2033 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x495 DUP2 PUSH2 0x20CB JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x495 DUP2 PUSH2 0x2104 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x495 DUP3 DUP5 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x240D DUP3 DUP6 PUSH2 0x213D JUMP JUMPDEST PUSH2 0x5FA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x495 DUP3 DUP5 PUSH2 0x2146 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x495 DUP3 DUP5 PUSH2 0x214F JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x495 DUP3 DUP5 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x2452 DUP3 DUP6 PUSH2 0x214F JUMP JUMPDEST PUSH2 0x5FA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x214F JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x495 DUP3 PUSH2 0x2484 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x495 DUP3 PUSH2 0x249F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x24D1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x24B9 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1672 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST PUSH2 0x24F5 DUP2 PUSH2 0x2471 JUMP JUMPDEST DUP2 EQ PUSH2 0x860 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24F5 DUP2 PUSH2 0x2481 JUMP JUMPDEST PUSH2 0x24F5 DUP2 PUSH2 0x2490 JUMP JUMPDEST PUSH2 0x24F5 DUP2 PUSH2 0x2499 JUMP INVALID SSTORE PUSH15 0x693A3A6D696E743A207472616E7366 PUSH6 0x7220616D6F75 PUSH15 0x74206F766572666C6F7773556E693A GASPRICE PUSH21 0x72616E7366657246726F6D3A207472616E73666572 KECCAK256 PUSH2 0x6D6F PUSH22 0x6E742065786365656473207370656E64657220616C6C PUSH16 0x77616E6365556E693A3A6D696E743A20 PUSH21 0x6F74616C537570706C792065786365656473203936 KECCAK256 PUSH3 0x697473 SSTORE PUSH15 0x693A3A5F7472616E73666572546F6B PUSH6 0x6E733A207472 PUSH2 0x6E73 PUSH7 0x657220616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65556E69 GASPRICE GASPRICE PUSH17 0x65726D69743A20616D6F756E7420657863 PUSH6 0x656473203936 KECCAK256 PUSH3 0x697473 SSTORE PUSH15 0x693A3A5F6D6F7665566F7465733A20 PUSH23 0x6F746520616D6F756E74206F766572666C6F7773556E69 GASPRICE GASPRICE 0x5F PUSH24 0x72697465436865636B706F696E743A20626C6F636B206E75 PUSH14 0x6265722065786365656473203332 KECCAK256 PUSH3 0x697473 SSTORE PUSH15 0x693A3A5F6D6F7665566F7465733A20 PUSH23 0x6F746520616D6F756E7420756E646572666C6F7773556E PUSH10 0x3A3A7472616E73666572 GASPRICE KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732039362062697473556E693A GASPRICE PUSH14 0x696E743A20616D6F756E74206578 PUSH4 0x65656473 KECCAK256 CODECOPY CALLDATASIZE KECCAK256 PUSH3 0x697473 SSTORE PUSH15 0x693A3A617070726F76653A20616D6F PUSH22 0x6E7420657863656564732039362062697473556E693A GASPRICE 0x5F PUSH21 0x72616E73666572546F6B656E733A207472616E7366 PUSH6 0x7220616D6F75 PUSH15 0x74206F766572666C6F7773A365627A PUSH27 0x72315820B228F14032F179F6E81F367B78FF3FF6CDC127C0F42B53 0xF9 SHR XOR 0xEC DUP16 0xF8 SGT 0x5C 0xBE PUSH13 0x6578706572696D656E74616CF5 PUSH5 0x736F6C6343 STOP SDIV GT STOP BLOCKHASH ",
							"sourceMap": "6581:16763:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6581:16763:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6649:39;;;:::i;:::-;;;;;;;;;;;;;;;;7055:21;;;:::i;:::-;;;;;;;;12846:406;;;;;;;;;:::i;:::-;;;;;;;;6939:42;;;:::i;:::-;;;;;;;;8251:122;;;:::i;15853:656::-;;;;;;;;;:::i;8668:137::-;;;:::i;7143:31::-;;;:::i;6843:35::-;;;:::i;:::-;;;;;;;;10909:1039;;;;;;;;;:::i;:::-;;7716:45;;;;;;;;;:::i;7224:61::-;;;:::i;:::-;;;;;;;;16651:100;;;;;;;;;:::i;8132:49::-;;;;;;;;;:::i;14957:106::-;;;;;;;;;:::i;7377:33::-;;;:::i;18786:1185::-;;;;;;;;;:::i;:::-;;;;;;;;8883:39;;;;;;;;;:::i;6746:37::-;;;:::i;15319:233::-;;;;;;;;;:::i;18145:219::-;;;;;;;;;:::i;17174:777::-;;;;;;;;;:::i;13730:1031::-;;;;;;;;;:::i;12244:134::-;;;;;;;;;:::i;8464:117::-;;;:::i;7996:70::-;;;;;;;;;:::i;:::-;;;;;;;;;10514:227;;;;;;;;;:::i;6649:39::-;;;;;;;;;;;;;;-1:-1:-1;;;6649:39:0;;;;:::o;7055:21::-;;;-1:-1:-1;;;;;7055:21:0;;:::o;12846:406::-;12914:4;12930:13;-1:-1:-1;;12957:9:0;:21;12953:168;;;-1:-1:-1;;;12953:168:0;;;13053:57;13060:9;13053:57;;;;;;;;;;;;;;;;;:6;:57::i;:::-;13044:66;;12953:168;13142:10;13131:22;;;;:10;:22;;;;;;;;-1:-1:-1;;;;;13131:31:0;;;;;;;;;;;:40;;-1:-1:-1;;;;;;13131:40:0;-1:-1:-1;;;;;13131:40:0;;;;;13187:37;;13131:31;;13142:10;13187:37;;;;13131:40;;13187:37;;;;;;;;;;13241:4;13234:11;;;12846:406;;;;;:::o;6939:42::-;;;;:::o;8251:122::-;8293:80;;;;;;;;;;;;;;8251:122;:::o;15853:656::-;-1:-1:-1;;;;;16015:15:0;;15935:4;16015:15;;;:10;:15;;;;;;;;15969:10;16015:24;;;;;;;;;;16065:57;;;;;;;;;;;;15969:10;;-1:-1:-1;;;;;16015:24:0;;;;15935:4;;16065:57;;16072:9;;16065:57;;;;;;;:6;:57::i;:::-;16049:73;;16148:3;-1:-1:-1;;;;;16137:14:0;:7;-1:-1:-1;;;;;16137:14:0;;;:48;;;;-1:-1:-1;;;;;;16155:30:0;;;;;16137:48;16133:305;;;16201:19;16223:95;16229:16;16247:6;16223:95;;;;;;;;;;;;;;;;;:5;:95::i;:::-;-1:-1:-1;;;;;16332:15:0;;;;;;;:10;:15;;;;;;;;:24;;;;;;;;;;;;;;:39;;-1:-1:-1;;;;;;16332:39:0;-1:-1:-1;;;;;16332:39:0;;;;;16391:36;16332:39;;-1:-1:-1;16332:24:0;;16391:36;;;;16332:39;;16391:36;;;;;;;;;;16133:305;;16448:33;16464:3;16469;16474:6;16448:15;:33::i;:::-;16498:4;16491:11;;;;;15853:656;;;;;;:::o;8668:137::-;8710:95;;;;;;7143:31;;;;:::o;6843:35::-;6876:2;6843:35;:::o;10909:1039::-;10993:6;;-1:-1:-1;;;;;10993:6:0;10979:10;:20;10971:68;;;;-1:-1:-1;;;10971:68:0;;;;;;;;;;;;;;;;;11076:19;;11057:15;:38;;11049:85;;;;-1:-1:-1;;;11049:85:0;;;;;;;;;-1:-1:-1;;;;;11152:17:0;;11144:76;;;;-1:-1:-1;;;11144:76:0;;;;;;;;;11280:54;11293:15;7273:12;11280;:54::i;:::-;11258:19;:76;;;;11372:13;11388:54;11395:9;11388:54;;;;;;;;;;;;;;;;;:6;:54::i;:::-;11372:70;;11470:53;11483:34;11496:11;;7409:1;11483:34;;:12;:34::i;:::-;11519:3;11470:12;:53::i;:::-;11460:6;-1:-1:-1;;;;;11460:63:0;;;11452:104;;;;-1:-1:-1;;;11452:104:0;;;;;;;;;11580:83;11587:33;11600:11;;11613:6;-1:-1:-1;;;;;11587:33:0;:12;:33::i;:::-;11580:83;;;;;;;;;;;;;;;;;:6;:83::i;:::-;-1:-1:-1;;;;;11566:97:0;;;:11;:97;;;-1:-1:-1;;;;;11744:13:0;;;;:8;:13;;;;;;;;;;11738:68;;;;;;;;;;;;;;11744:13;;;;;11759:6;;11738:68;;;;;;;;:5;:68::i;:::-;-1:-1:-1;;;;;11722:13:0;;;;;;:8;:13;;;;;;:84;;-1:-1:-1;;;;;;11722:84:0;-1:-1:-1;;;;;11722:84:0;;;;;;;;;;;11821:33;;11722:13;;;11821:33;;;;11847:6;;11821:33;;;;;;;;;;-1:-1:-1;;;;;11918:14:0;;;11914:1;11918:14;;;:9;:14;;;;;;11891:50;;11918:14;11934:6;11891:14;:50::i;:::-;10909:1039;;;:::o;7716:45::-;;;;;;;;;;;;-1:-1:-1;;;;;7716:45:0;;:::o;7224:61::-;7273:12;7224:61;:::o;16651:100::-;16712:32;16722:10;16734:9;16712;:32::i;:::-;16651:100;:::o;8132:49::-;;;;;;;;;;;;;;;:::o;14957:106::-;-1:-1:-1;;;;;15039:17:0;15016:4;15039:17;;;:8;:17;;;;;;-1:-1:-1;;;;;15039:17:0;;14957:106::o;7377:33::-;7409:1;7377:33;:::o;18786:1185::-;18865:6;18905:12;18891:11;:26;18883:77;;;;-1:-1:-1;;;18883:77:0;;;;;;;;;-1:-1:-1;;;;;18993:23:0;;18971:19;18993:23;;;:14;:23;;;;;;;;19030:17;19026:56;;19070:1;19063:8;;;;;19026:56;-1:-1:-1;;;;;19139:20:0;;;;;;:11;:20;;;;;;;;:38;-1:-1:-1;;19160:16:0;;19139:38;;;;;;;;;:48;;:63;-1:-1:-1;19135:145:0;;-1:-1:-1;;;;;19225:20:0;;;;;;:11;:20;;;;;;;;-1:-1:-1;;19246:16:0;;;;19225:38;;;;;;;;:44;-1:-1:-1;;;19225:44:0;;-1:-1:-1;;;;;19225:44:0;;-1:-1:-1;19218:51:0;;19135:145;-1:-1:-1;;;;;19338:20:0;;;;;;:11;:20;;;;;;;;:23;;;;;;;;:33;:23;:33;:47;-1:-1:-1;19334:86:0;;;19408:1;19401:8;;;;;19334:86;19430:12;-1:-1:-1;;19471:16:0;;19497:418;19512:5;19504:13;;:5;:13;;;19497:418;;;19575:1;19558:13;;;19557:19;;;19549:27;;19617:20;;:::i;:::-;-1:-1:-1;;;;;;19640:20:0;;;;;;:11;:20;;;;;;;;:28;;;;;;;;;;;;;19617:51;;;;;;;;;;;;;;;-1:-1:-1;;;19617:51:0;;;-1:-1:-1;;;;;19617:51:0;;;;;;;;;19686:27;;19682:223;;;19740:8;;;;-1:-1:-1;19733:15:0;;-1:-1:-1;;;;19733:15:0;19682:223;19773:12;;:26;;;-1:-1:-1;19769:136:0;;;19827:6;19819:14;;19769:136;;;19889:1;19880:6;:10;19872:18;;19769:136;19497:418;;;;;-1:-1:-1;;;;;;19931:20:0;;;;;;:11;:20;;;;;;;;:27;;;;;;;;;;:33;-1:-1:-1;;;;;;;;19931:33:0;;;;;-1:-1:-1;;18786:1185:0;;;;:::o;8883:39::-;;;;;;;;;;;;;:::o;6746:37::-;;;;;;;;;;;;;;-1:-1:-1;;;6746:37:0;;;;:::o;15319:233::-;15384:4;15400:13;15416:58;15423:9;15416:58;;;;;;;;;;;;;;;;;:6;:58::i;:::-;15400:74;;15484:40;15500:10;15512:3;15517:6;15484:15;:40::i;:::-;-1:-1:-1;15541:4:0;;15319:233;-1:-1:-1;;;15319:233:0:o;18145:219::-;-1:-1:-1;;;;;18250:23:0;;18210:6;18250:23;;;:14;:23;;;;;;;;18290:16;:67;;18356:1;18290:67;;;-1:-1:-1;;;;;18309:20:0;;;;;;:11;:20;;;;;;;;-1:-1:-1;;18330:16:0;;18309:38;;;;;;;;;:44;-1:-1:-1;;;18309:44:0;;-1:-1:-1;;;;;18309:44:0;18283:74;18145:219;-1:-1:-1;;;18145:219:0:o;17174:777::-;17289:23;8293:80;;;;;;;;;;;;;;;;17369:4;;;;;;;;;-1:-1:-1;;;17369:4:0;;;;;;;;17353:22;17377:12;:10;:12::i;:::-;17399:4;17325:80;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;17325:80:0;;;17315:91;;;;;;17289:117;;17416:18;8510:71;;;;;;;;;;;;;;;17447:57;;17479:9;;17490:5;;17497:6;;17447:57;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;17447:57:0;;;17437:68;;;;;;17416:89;;17515:14;17571:15;17588:10;17542:57;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;17542:57:0;;;17532:68;;;;;;17515:85;;17610:17;17630:26;17640:6;17648:1;17651;17654;17630:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;17630:26:0;;-1:-1:-1;;17630:26:0;;;-1:-1:-1;;;;;;;17674:23:0;;17666:73;;;;-1:-1:-1;;;17666:73:0;;;;;;;;;-1:-1:-1;;;;;17766:17:0;;;;;;:6;:17;;;;;:19;;;;;;;;17757:28;;17749:74;;;;-1:-1:-1;;;17749:74:0;;;;;;;;;17848:6;17841:3;:13;;17833:63;;;;-1:-1:-1;;;17833:63:0;;;;;;;;;17913:31;17923:9;17934;17913;:31::i;:::-;17906:38;;;;17174:777;;;;;;;:::o;13730:1031::-;13859:13;-1:-1:-1;;13886:9:0;:21;13882:167;;;-1:-1:-1;;;13882:167:0;;;13982:56;13989:9;13982:56;;;;;;;;;;;;;;;;;:6;:56::i;:::-;13973:65;;13882:167;14059:23;8293:80;;;;;;;;;;;;;;;;14139:4;;;;;;;;;-1:-1:-1;;;14139:4:0;;;;;;;;14123:22;14147:12;:10;:12::i;:::-;14169:4;14095:80;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;14095:80:0;;;14085:91;;;;;;14059:117;;14186:18;8710:95;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14272:13:0;;;;;;:6;:13;;;;;;;:15;;;;;;;;14217:81;;8710:95;;14245:5;;14252:7;;14261:9;;14272:15;;14289:8;;14217:81;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;14217:81:0;;;14207:92;;;;;;14186:113;;14309:14;14365:15;14382:10;14336:57;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;14336:57:0;;;14326:68;;;;;;14309:85;;14404:17;14424:26;14434:6;14442:1;14445;14448;14424:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;14424:26:0;;-1:-1:-1;;14424:26:0;;;-1:-1:-1;;;;;;;14468:23:0;;14460:66;;;;-1:-1:-1;;;14460:66:0;;;;;;;;;14557:5;-1:-1:-1;;;;;14544:18:0;:9;-1:-1:-1;;;;;14544:18:0;;14536:56;;;;-1:-1:-1;;;14536:56:0;;;;;;;;;14617:8;14610:3;:15;;14602:58;;;;-1:-1:-1;;;14602:58:0;;;;;;;;;14700:6;14671:10;:17;14682:5;-1:-1:-1;;;;;14671:17:0;-1:-1:-1;;;;;14671:17:0;;;;;;;;;;;;:26;14689:7;-1:-1:-1;;;;;14671:26:0;-1:-1:-1;;;;;14671:26:0;;;;;;;;;;;;;:35;;;;;-1:-1:-1;;;;;14671:35:0;;;;;-1:-1:-1;;;;;14671:35:0;;;;;;14738:7;-1:-1:-1;;;;;14722:32:0;14731:5;-1:-1:-1;;;;;14722:32:0;;14747:6;14722:32;;;;;;;;;;;;;;;13730:1031;;;;;;;;;;;;:::o;12244:134::-;-1:-1:-1;;;;;12343:19:0;;;12320:4;12343:19;;;:10;:19;;;;;;;;:28;;;;;;;;;;;;-1:-1:-1;;;;;12343:28:0;;12244:134::o;8464:117::-;8510:71;;;;;;7996:70;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7996:70:0;;-1:-1:-1;;;;;7996:70:0;;:::o;10514:227::-;10591:6;;-1:-1:-1;;;;;10591:6:0;10577:10;:20;10569:94;;;;-1:-1:-1;;;10569:94:0;;;;;;;;;10692:6;;10678:30;;;;;;-1:-1:-1;;;;;10692:6:0;;;;10700:7;;10678:30;;;;;;;;;;10718:6;:16;;-1:-1:-1;;;;;;10718:16:0;-1:-1:-1;;;;;10718:16:0;;;;;;;;;;10514:227::o;22671:158::-;22746:6;22783:12;-1:-1:-1;;;22772:9:0;;22764:32;;;;-1:-1:-1;;;22764:32:0;;;;;;;;;;-1:-1:-1;22820:1:0;;22671:158;-1:-1:-1;;22671:158:0:o;23025:162::-;23111:6;23142:1;-1:-1:-1;;;;;23137:6:0;:1;-1:-1:-1;;;;;23137:6:0;;;23145:12;23129:29;;;;;-1:-1:-1;;;23129:29:0;;;;;;;;;;-1:-1:-1;;;23175:5:0;;;23025:162::o;20350:601::-;-1:-1:-1;;;;;20443:17:0;;20435:89;;;;-1:-1:-1;;;20435:89:0;;;;;;;;;-1:-1:-1;;;;;20542:17:0;;20534:87;;;;-1:-1:-1;;;20534:87:0;;;;;;;;;-1:-1:-1;;;;;20654:13:0;;;;;;:8;:13;;;;;;;;;;20648:85;;;;;;;;;;;;;;-1:-1:-1;;;;;20654:13:0;;;;20669:6;;20648:85;;;;;;;:5;:85::i;:::-;-1:-1:-1;;;;;20632:13:0;;;;;;;:8;:13;;;;;;;;:101;;-1:-1:-1;;;;;;20632:101:0;-1:-1:-1;;;;;20632:101:0;;;;;;20765:13;;;;;;;;;;20759:79;;;;;;;;;;;;;;20765:13;;;;;20780:6;;20759:79;;;;;;;;:5;:79::i;:::-;-1:-1:-1;;;;;20743:13:0;;;;;;;:8;:13;;;;;;;:95;;-1:-1:-1;;;;;;20743:95:0;-1:-1:-1;;;;;20743:95:0;;;;;;;;;;;20853:26;;;;;;;;;;20872:6;;20853:26;;;;;;;;;;-1:-1:-1;;;;;20905:14:0;;;;;;;:9;:14;;;;;;;20921;;;;;;;;20890:54;;20905:14;;;;20921;20937:6;20890:14;:54::i;1127:176::-;1185:7;1216:5;;;1239:6;;;;1231:46;;;;-1:-1:-1;;;1231:46:0;;;;;;;;2824:459;2882:7;3123:6;3119:45;;-1:-1:-1;3152:1:0;3145:8;;3119:45;3186:5;;;3190:1;3186;:5;:1;3209:5;;;;;:10;3201:56;;;;-1:-1:-1;;;3201:56:0;;;;;;;;4435:130;4493:7;4519:39;4523:1;4526;4519:39;;;;;;;;;;;;;;;;;:3;:39::i;22835:184::-;22921:6;22950:5;;;22981:12;-1:-1:-1;;;;;22973:6:0;;;;;;;;22965:29;;;;-1:-1:-1;;;22965:29:0;;;;;;;;;;-1:-1:-1;23011:1:0;22835:184;-1:-1:-1;;;;22835:184:0:o;20957:921::-;21061:6;-1:-1:-1;;;;;21051:16:0;:6;-1:-1:-1;;;;;21051:16:0;;;:30;;;;;21080:1;21071:6;-1:-1:-1;;;;;21071:10:0;;21051:30;21047:825;;;-1:-1:-1;;;;;21101:20:0;;;21097:376;;-1:-1:-1;;;;;21160:22:0;;21141:16;21160:22;;;:14;:22;;;;;;;;;21219:13;:60;;21278:1;21219:60;;;-1:-1:-1;;;;;21235:19:0;;;;;;:11;:19;;;;;;;;-1:-1:-1;;21255:13:0;;21235:34;;;;;;;;;:40;-1:-1:-1;;;21235:40:0;;-1:-1:-1;;;;;21235:40:0;21219:60;21200:79;;21297:16;21316:67;21322:9;21333:6;21316:67;;;;;;;;;;;;;;;;;:5;:67::i;:::-;21297:86;;21401:57;21418:6;21426:9;21437;21448;21401:16;:57::i;:::-;21097:376;;;;-1:-1:-1;;;;;21491:20:0;;;21487:375;;-1:-1:-1;;;;;21550:22:0;;21531:16;21550:22;;;:14;:22;;;;;;;;;21609:13;:60;;21668:1;21609:60;;;-1:-1:-1;;;;;21625:19:0;;;;;;:11;:19;;;;;;;;-1:-1:-1;;21645:13:0;;21625:34;;;;;;;;;:40;-1:-1:-1;;;21625:40:0;;-1:-1:-1;;;;;21625:40:0;21609:60;21590:79;;21687:16;21706:66;21712:9;21723:6;21706:66;;;;;;;;;;;;;;;;;:5;:66::i;:::-;21687:85;;21790:57;21807:6;21815:9;21826;21837;21790:16;:57::i;19977:367::-;-1:-1:-1;;;;;20079:20:0;;;20053:23;20079:20;;;:9;:20;;;;;;;;;;20135:8;:19;;;;;;20164:20;;;;:32;;;-1:-1:-1;;;;;;20164:32:0;;;;;;;20212:54;;20079:20;;;;;-1:-1:-1;;;;;20135:19:0;;;;20164:32;;20079:20;;;20212:54;;20053:23;20212:54;20277:60;20292:15;20309:9;20320:16;20277:14;:60::i;:::-;19977:367;;;;:::o;23193:149::-;23301:9;23193:149;:::o;5040:338::-;5126:7;5226:12;5219:5;5211:28;;;;-1:-1:-1;;;5211:28:0;;;;;;;;;;;5249:9;5265:1;5261;:5;;;;;;;5040:338;-1:-1:-1;;;;;5040:338:0:o;21884:617::-;22001:18;22022:75;22029:12;22022:75;;;;;;;;;;;;;;;;;:6;:75::i;:::-;22001:96;;22125:1;22110:12;:16;;;:85;;;;-1:-1:-1;;;;;;22130:22:0;;;;;;:11;:22;;;;;;;;:65;-1:-1:-1;;22153:16:0;;22130:40;;;;;;;;;:50;:65;;;:50;;:65;22110:85;22106:324;;;-1:-1:-1;;;;;22209:22:0;;;;;;:11;:22;;;;;;;;-1:-1:-1;;22232:16:0;;22209:40;;;;;;;;;:57;;-1:-1:-1;;22209:57:0;-1:-1:-1;;;;;;;;22209:57:0;;;;;;22106:324;;;22332:33;;;;;;;;;;;;;;-1:-1:-1;;;;;22332:33:0;;;;;;;;;;-1:-1:-1;;;;;22293:22:0;;-1:-1:-1;22293:22:0;;;:11;:22;;;;;:36;;;;;;;;;;:72;;;;;;;;;-1:-1:-1;;;22293:72:0;-1:-1:-1;;22293:72:0;;;-1:-1:-1;;22293:72:0;;;;;;;;;;;;;;;22377:25;;;:14;:25;;;;;;;:44;;22293:72;22405:16;;22377:44;;;;;;;;;;;;;22106:324;22464:9;-1:-1:-1;;;;;22443:51:0;;22475:8;22485;22443:51;;;;;;;;;;;;;;;;21884:617;;;;;:::o;22507:158::-;22582:6;22619:12;-1:-1:-1;;;22608:9:0;;22600:32;;;;-1:-1:-1;;;22600:32:0;;;;;;;;;6581:16763;;;;;;;;;;-1:-1:-1;6581:16763:0;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;142:130;209:20;;234:33;209:20;234:33;;416:128;482:20;;507:32;482:20;507:32;;551:126;616:20;;641:31;616:20;641:31;;684:241;;788:2;776:9;767:7;763:23;759:32;756:2;;;804:1;801;794:12;756:2;839:1;856:53;901:7;881:9;856:53;;;846:63;750:175;-1:-1;;;;750:175;932:366;;;1053:2;1041:9;1032:7;1028:23;1024:32;1021:2;;;1069:1;1066;1059:12;1021:2;1104:1;1121:53;1166:7;1146:9;1121:53;;;1111:63;;1083:97;1211:2;1229:53;1274:7;1265:6;1254:9;1250:22;1229:53;;;1219:63;;1190:98;1015:283;;;;;;1305:491;;;;1443:2;1431:9;1422:7;1418:23;1414:32;1411:2;;;1459:1;1456;1449:12;1411:2;1494:1;1511:53;1556:7;1536:9;1511:53;;;1501:63;;1473:97;1601:2;1619:53;1664:7;1655:6;1644:9;1640:22;1619:53;;;1609:63;;1580:98;1709:2;1727:53;1772:7;1763:6;1752:9;1748:22;1727:53;;;1717:63;;1688:98;1405:391;;;;;;1803:991;;;;;;;;2007:3;1995:9;1986:7;1982:23;1978:33;1975:2;;;2024:1;2021;2014:12;1975:2;2059:1;2076:53;2121:7;2101:9;2076:53;;;2066:63;;2038:97;2166:2;2184:53;2229:7;2220:6;2209:9;2205:22;2184:53;;;2174:63;;2145:98;2274:2;2292:53;2337:7;2328:6;2317:9;2313:22;2292:53;;;2282:63;;2253:98;2382:2;2400:53;2445:7;2436:6;2425:9;2421:22;2400:53;;;2390:63;;2361:98;2490:3;2509:51;2552:7;2543:6;2532:9;2528:22;2509:51;;;2499:61;;2469:97;2597:3;2616:53;2661:7;2652:6;2641:9;2637:22;2616:53;;;2606:63;;2576:99;2706:3;2725:53;2770:7;2761:6;2750:9;2746:22;2725:53;;;2715:63;;2685:99;1969:825;;;;;;;;;;;2801:366;;;2922:2;2910:9;2901:7;2897:23;2893:32;2890:2;;;2938:1;2935;2928:12;2890:2;2973:1;2990:53;3035:7;3015:9;2990:53;;;2980:63;;2952:97;3080:2;3098:53;3143:7;3134:6;3123:9;3119:22;3098:53;;3174:865;;;;;;;3361:3;3349:9;3340:7;3336:23;3332:33;3329:2;;;3378:1;3375;3368:12;3329:2;3413:1;3430:53;3475:7;3455:9;3430:53;;;3420:63;;3392:97;3520:2;3538:53;3583:7;3574:6;3563:9;3559:22;3538:53;;;3528:63;;3499:98;3628:2;3646:53;3691:7;3682:6;3671:9;3667:22;3646:53;;;3636:63;;3607:98;3736:2;3754:51;3797:7;3788:6;3777:9;3773:22;3754:51;;;3744:61;;3715:96;3842:3;3861:53;3906:7;3897:6;3886:9;3882:22;3861:53;;;3851:63;;3821:99;3951:3;3970:53;4015:7;4006:6;3995:9;3991:22;3970:53;;;3960:63;;3930:99;3323:716;;;;;;;;;4046:364;;;4166:2;4154:9;4145:7;4141:23;4137:32;4134:2;;;4182:1;4179;4172:12;4134:2;4217:1;4234:53;4279:7;4259:9;4234:53;;;4224:63;;4196:97;4324:2;4342:52;4386:7;4377:6;4366:9;4362:22;4342:52;;4417:113;4500:24;4518:5;4500:24;;;4495:3;4488:37;4482:48;;;4537:104;4614:21;4629:5;4614:21;;4648:113;4731:24;4749:5;4731:24;;4768:152;4869:45;4889:24;4907:5;4889:24;;;4869:45;;4927:347;;5039:39;5072:5;5039:39;;;5090:71;5154:6;5149:3;5090:71;;;5083:78;;5166:52;5211:6;5206:3;5199:4;5192:5;5188:16;5166:52;;;5239:29;5261:6;5239:29;;;5230:39;;;;5019:255;-1:-1;;;5019:255;5628:374;;5788:67;5852:2;5847:3;5788:67;;;5888:34;5868:55;;-1:-1;;;5952:2;5943:12;;5936:29;5993:2;5984:12;;5774:228;-1:-1;;5774:228;6011:398;;6189:84;6271:1;6266:3;6189:84;;;-1:-1;;;6286:87;;6401:1;6392:11;;6175:234;-1:-1;;6175:234;6418:327;;6578:67;6642:2;6637:3;6578:67;;;6678:29;6658:50;;6736:2;6727:12;;6564:181;-1:-1;;6564:181;6754:374;;6914:67;6978:2;6973:3;6914:67;;;7014:34;6994:55;;-1:-1;;;7078:2;7069:12;;7062:29;7119:2;7110:12;;6900:228;-1:-1;;6900:228;7137:375;;7297:67;7361:2;7356:3;7297:67;;;7397:34;7377:55;;-1:-1;;;7461:2;7452:12;;7445:30;7503:2;7494:12;;7283:229;-1:-1;;7283:229;7521:383;;7681:67;7745:2;7740:3;7681:67;;;7781:34;7761:55;;-1:-1;;;7845:2;7836:12;;7829:38;7895:2;7886:12;;7667:237;-1:-1;;7667:237;7913:492;;8091:85;8173:2;8168:3;8091:85;;;8209:34;8189:55;;8278:34;8273:2;8264:12;;8257:56;-1:-1;;;8342:2;8333:12;;8326:42;8396:2;8387:12;;8077:328;-1:-1;;8077:328;8414:371;;8574:67;8638:2;8633:3;8574:67;;;8674:34;8654:55;;-1:-1;;;8738:2;8729:12;;8722:26;8776:2;8767:12;;8560:225;-1:-1;;8560:225;8794:477;;8972:85;9054:2;9049:3;8972:85;;;9090:34;9070:55;;9159:34;9154:2;9145:12;;9138:56;-1:-1;;;9223:2;9214:12;;9207:27;9262:2;9253:12;;8958:313;-1:-1;;8958:313;9280:394;;9440:67;9504:2;9499:3;9440:67;;;9540:34;9520:55;;9609:27;9604:2;9595:12;;9588:49;9665:2;9656:12;;9426:248;-1:-1;;9426:248;9683:370;;9843:67;9907:2;9902:3;9843:67;;;9943:34;9923:55;;-1:-1;;;10007:2;9998:12;;9991:25;10044:2;10035:12;;9829:224;-1:-1;;9829:224;10062:328;;10222:67;10286:2;10281:3;10222:67;;;10322:30;10302:51;;10381:2;10372:12;;10208:182;-1:-1;;10208:182;10399:372;;10559:67;10623:2;10618:3;10559:67;;;10659:34;10639:55;;-1:-1;;;10723:2;10714:12;;10707:27;10762:2;10753:12;;10545:226;-1:-1;;10545:226;10780:398;;10940:67;11004:2;10999:3;10940:67;;;11040:34;11020:55;;11109:31;11104:2;11095:12;;11088:53;11169:2;11160:12;;10926:252;-1:-1;;10926:252;11187:370;;11347:67;11411:2;11406:3;11347:67;;;11447:34;11427:55;;-1:-1;;;11511:2;11502:12;;11495:25;11548:2;11539:12;;11333:224;-1:-1;;11333:224;11566:396;;11726:67;11790:2;11785:3;11726:67;;;11826:34;11806:55;;11895:29;11890:2;11881:12;;11874:51;11953:2;11944:12;;11712:250;-1:-1;;11712:250;11971:330;;12131:67;12195:2;12190:3;12131:67;;;12231:32;12211:53;;12292:2;12283:12;;12117:184;-1:-1;;12117:184;12310:431;;12488:85;12570:2;12565:3;12488:85;;;12606:34;12586:55;;12675:28;12670:2;12661:12;;12654:50;12732:2;12723:12;;12474:267;-1:-1;;12474:267;12750:330;;12910:67;12974:2;12969:3;12910:67;;;13010:32;12990:53;;13071:2;13062:12;;12896:184;-1:-1;;12896:184;13089:325;;13249:67;13313:2;13308:3;13249:67;;;13349:27;13329:48;;13405:2;13396:12;;13235:179;-1:-1;;13235:179;13542:110;13623:23;13640:5;13623:23;;13659:107;13738:22;13754:5;13738:22;;13773:124;13855:36;13885:5;13855:36;;13904:110;13985:23;14002:5;13985:23;;14021:650;;14276:148;14420:3;14276:148;;;14269:155;;14435:75;14506:3;14497:6;14435:75;;;14532:2;14527:3;14523:12;14516:19;;14546:75;14617:3;14608:6;14546:75;;;-1:-1;14643:2;14634:12;;14257:414;-1:-1;;14257:414;14678:372;;14877:148;15021:3;14877:148;;15057:372;;15256:148;15400:3;15256:148;;15436:372;;15635:148;15779:3;15635:148;;15815:213;15933:2;15918:18;;15947:71;15922:9;15991:6;15947:71;;16035:324;16181:2;16166:18;;16195:71;16170:9;16239:6;16195:71;;;16277:72;16345:2;16334:9;16330:18;16321:6;16277:72;;16366:201;16478:2;16463:18;;16492:65;16467:9;16530:6;16492:65;;16574:213;16692:2;16677:18;;16706:71;16681:9;16750:6;16706:71;;16794:771;17052:3;17037:19;;17067:71;17041:9;17111:6;17067:71;;;17149:72;17217:2;17206:9;17202:18;17193:6;17149:72;;;17232;17300:2;17289:9;17285:18;17276:6;17232:72;;;17315;17383:2;17372:9;17368:18;17359:6;17315:72;;;17398:73;17466:3;17455:9;17451:19;17442:6;17398:73;;;17482;17550:3;17539:9;17535:19;17526:6;17482:73;;;17023:542;;;;;;;;;;17572:547;17774:3;17759:19;;17789:71;17763:9;17833:6;17789:71;;;17871:72;17939:2;17928:9;17924:18;17915:6;17871:72;;;17954;18022:2;18011:9;18007:18;17998:6;17954:72;;;18037;18105:2;18094:9;18090:18;18081:6;18037:72;;;17745:374;;;;;;;;18126:547;18328:3;18313:19;;18343:71;18317:9;18387:6;18343:71;;;18425:72;18493:2;18482:9;18478:18;18469:6;18425:72;;;18508;18576:2;18565:9;18561:18;18552:6;18508:72;;;18591;18659:2;18648:9;18644:18;18635:6;18591:72;;18680:539;18878:3;18863:19;;18893:71;18867:9;18937:6;18893:71;;;18975:68;19039:2;19028:9;19024:18;19015:6;18975:68;;19226:293;19360:2;19374:47;;;19345:18;;19435:74;19345:18;19495:6;19435:74;;19834:407;20025:2;20039:47;;;20010:18;;20100:131;20010:18;20100:131;;20248:407;20439:2;20453:47;;;20424:18;;20514:131;20424:18;20514:131;;20662:407;20853:2;20867:47;;;20838:18;;20928:131;20838:18;20928:131;;21076:407;21267:2;21281:47;;;21252:18;;21342:131;21252:18;21342:131;;21490:407;21681:2;21695:47;;;21666:18;;21756:131;21666:18;21756:131;;21904:407;22095:2;22109:47;;;22080:18;;22170:131;22080:18;22170:131;;22318:407;22509:2;22523:47;;;22494:18;;22584:131;22494:18;22584:131;;22732:407;22923:2;22937:47;;;22908:18;;22998:131;22908:18;22998:131;;23146:407;23337:2;23351:47;;;23322:18;;23412:131;23322:18;23412:131;;23560:407;23751:2;23765:47;;;23736:18;;23826:131;23736:18;23826:131;;23974:407;24165:2;24179:47;;;24150:18;;24240:131;24150:18;24240:131;;24388:407;24579:2;24593:47;;;24564:18;;24654:131;24564:18;24654:131;;24802:407;24993:2;25007:47;;;24978:18;;25068:131;24978:18;25068:131;;25216:407;25407:2;25421:47;;;25392:18;;25482:131;25392:18;25482:131;;25630:407;25821:2;25835:47;;;25806:18;;25896:131;25806:18;25896:131;;26044:407;26235:2;26249:47;;;26220:18;;26310:131;26220:18;26310:131;;26678:209;26794:2;26779:18;;26808:69;26783:9;26850:6;26808:69;;26894:316;27036:2;27021:18;;27050:69;27025:9;27092:6;27050:69;;;27130:70;27196:2;27185:9;27181:18;27172:6;27130:70;;27217:205;27331:2;27316:18;;27345:67;27320:9;27385:6;27345:67;;27429:211;27546:2;27531:18;;27560:70;27535:9;27603:6;27560:70;;27647:209;27763:2;27748:18;;27777:69;27752:9;27819:6;27777:69;;27863:320;28007:2;27992:18;;28021:70;27996:9;28064:6;28021:70;;;28102:71;28169:2;28158:9;28154:18;28145:6;28102:71;;28190:118;28274:12;;28245:63;28445:163;28548:19;;;28597:4;28588:14;;28541:67;28617:145;28753:3;28731:31;-1:-1;28731:31;28770:91;;28832:24;28850:5;28832:24;;28868:85;28934:13;28927:21;;28910:43;28960:72;29022:5;29005:27;29039:121;-1:-1;;;;;29101:54;;29084:76;29246:88;29318:10;29307:22;;29290:44;29341:81;29412:4;29401:16;;29384:38;29429:104;-1:-1;;;;;29490:38;;29473:60;29540:106;;29618:23;29635:5;29618:23;;29654:268;29719:1;29726:101;29740:6;29737:1;29734:13;29726:101;;;29807:11;;;29801:18;29788:11;;;29781:39;29762:2;29755:10;29726:101;;;29842:6;29839:1;29836:13;29833:2;;;-1:-1;;29907:1;29889:16;;29882:27;29703:219;30011:97;30099:2;30079:14;-1:-1;;30075:28;;30059:49;30116:117;30185:24;30203:5;30185:24;;;30178:5;30175:35;30165:2;;30224:1;30221;30214:12;30240:117;30309:24;30327:5;30309:24;;30488:115;30556:23;30573:5;30556:23;;30610:113;30677:22;30693:5;30677:22;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2013800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DELEGATION_TYPEHASH()": "infinite",
								"DOMAIN_TYPEHASH()": "infinite",
								"PERMIT_TYPEHASH()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"checkpoints(address,uint32)": "infinite",
								"decimals()": "395",
								"delegate(address)": "infinite",
								"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"delegates(address)": "infinite",
								"getCurrentVotes(address)": "infinite",
								"getPriorVotes(address,uint256)": "infinite",
								"minimumTimeBetweenMints()": "394",
								"mint(address,uint256)": "infinite",
								"mintCap()": "395",
								"minter()": "infinite",
								"mintingAllowedAfter()": "1167",
								"name()": "infinite",
								"nonces(address)": "infinite",
								"numCheckpoints(address)": "infinite",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"setMinter(address)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1189",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_delegate(address,address)": "infinite",
								"_moveDelegates(address,address,uint96)": "infinite",
								"_transferTokens(address,address,uint96)": "infinite",
								"_writeCheckpoint(address,uint32,uint96,uint96)": "infinite",
								"add96(uint96,uint96,string memory)": "infinite",
								"getChainId()": "14",
								"safe32(uint256,string memory)": "infinite",
								"safe96(uint256,string memory)": "infinite",
								"sub96(uint96,uint96,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 6581,
									"end": 23344,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 6581,
									"end": 23344,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 6581,
									"end": 23344,
									"name": "MSTORE"
								},
								{
									"begin": 6965,
									"end": 6981,
									"name": "PUSH",
									"value": "33B2E3C9FD0803CE8000000"
								},
								{
									"begin": 6939,
									"end": 6981,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 6939,
									"end": 6981,
									"name": "SSTORE"
								},
								{
									"begin": 9960,
									"end": 10399,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 9960,
									"end": 10399,
									"name": "POP"
								},
								{
									"begin": 9960,
									"end": 10399,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 9960,
									"end": 10399,
									"name": "MLOAD"
								},
								{
									"begin": 9960,
									"end": 10399,
									"name": "PUSHSIZE"
								},
								{
									"begin": 9960,
									"end": 10399,
									"name": "CODESIZE"
								},
								{
									"begin": 9960,
									"end": 10399,
									"name": "SUB"
								},
								{
									"begin": 9960,
									"end": 10399,
									"name": "DUP1"
								},
								{
									"begin": 9960,
									"end": 10399,
									"name": "PUSHSIZE"
								},
								{
									"begin": 9960,
									"end": 10399,
									"name": "DUP4"
								},
								{
									"begin": 9960,
									"end": 10399,
									"name": "CODECOPY"
								},
								{
									"begin": 9960,
									"end": 10399,
									"name": "DUP2"
								},
								{
									"begin": 9960,
									"end": 10399,
									"name": "ADD"
								},
								{
									"begin": 9960,
									"end": 10399,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 9960,
									"end": 10399,
									"name": "DUP2"
								},
								{
									"begin": 9960,
									"end": 10399,
									"name": "SWAP1"
								},
								{
									"begin": 9960,
									"end": 10399,
									"name": "MSTORE"
								},
								{
									"begin": 9960,
									"end": 10399,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 9960,
									"end": 10399,
									"name": "SWAP2"
								},
								{
									"begin": 9960,
									"end": 10399,
									"name": "PUSH [tag]",
									"value": "3"
								},
								{
									"begin": 9960,
									"end": 10399,
									"name": "JUMP"
								},
								{
									"begin": 9960,
									"end": 10399,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 9960,
									"end": 10399,
									"name": "JUMPDEST"
								},
								{
									"begin": 10082,
									"end": 10097,
									"name": "TIMESTAMP"
								},
								{
									"begin": 10058,
									"end": 10078,
									"name": "DUP2"
								},
								{
									"begin": 10058,
									"end": 10097,
									"name": "LT"
								},
								{
									"begin": 10058,
									"end": 10097,
									"name": "ISZERO"
								},
								{
									"begin": 10050,
									"end": 10159,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 10050,
									"end": 10159,
									"name": "JUMPI"
								},
								{
									"begin": 10050,
									"end": 10159,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 10050,
									"end": 10159,
									"name": "MLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 10050,
									"end": 10159,
									"name": "DUP2"
								},
								{
									"begin": 10050,
									"end": 10159,
									"name": "MSTORE"
								},
								{
									"begin": 10050,
									"end": 10159,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 10050,
									"end": 10159,
									"name": "ADD"
								},
								{
									"begin": 10050,
									"end": 10159,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 10050,
									"end": 10159,
									"name": "SWAP1"
								},
								{
									"begin": 10050,
									"end": 10159,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 10050,
									"end": 10159,
									"name": "JUMP"
								},
								{
									"begin": 10050,
									"end": 10159,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 10050,
									"end": 10159,
									"name": "JUMPDEST"
								},
								{
									"begin": 10050,
									"end": 10159,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 10050,
									"end": 10159,
									"name": "MLOAD"
								},
								{
									"begin": 10050,
									"end": 10159,
									"name": "DUP1"
								},
								{
									"begin": 10050,
									"end": 10159,
									"name": "SWAP2"
								},
								{
									"begin": 10050,
									"end": 10159,
									"name": "SUB"
								},
								{
									"begin": 10050,
									"end": 10159,
									"name": "SWAP1"
								},
								{
									"begin": 10050,
									"end": 10159,
									"name": "REVERT"
								},
								{
									"begin": 10050,
									"end": 10159,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 10050,
									"end": 10159,
									"name": "JUMPDEST"
								},
								{
									"begin": 10197,
									"end": 10208,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10197,
									"end": 10208,
									"name": "DUP1"
								},
								{
									"begin": 10197,
									"end": 10208,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 10170,
									"end": 10187,
									"name": "DUP6"
								},
								{
									"begin": 10170,
									"end": 10187,
									"name": "AND"
								},
								{
									"begin": 10170,
									"end": 10187,
									"name": "DUP1"
								},
								{
									"begin": 10170,
									"end": 10187,
									"name": "DUP4"
								},
								{
									"begin": 10170,
									"end": 10187,
									"name": "MSTORE"
								},
								{
									"begin": 10170,
									"end": 10178,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 10170,
									"end": 10187,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10170,
									"end": 10187,
									"name": "MSTORE"
								},
								{
									"begin": 10170,
									"end": 10187,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 10170,
									"end": 10187,
									"name": "DUP1"
								},
								{
									"begin": 10170,
									"end": 10187,
									"name": "DUP5"
								},
								{
									"begin": 10170,
									"end": 10187,
									"name": "KECCAK256"
								},
								{
									"begin": 10170,
									"end": 10209,
									"name": "DUP1"
								},
								{
									"begin": 10170,
									"end": 10209,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 10170,
									"end": 10209,
									"name": "AND"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 10170,
									"end": 10209,
									"name": "SWAP1"
								},
								{
									"begin": 10170,
									"end": 10209,
									"name": "SWAP5"
								},
								{
									"begin": 10170,
									"end": 10209,
									"name": "AND"
								},
								{
									"begin": 10170,
									"end": 10209,
									"name": "SWAP4"
								},
								{
									"begin": 10170,
									"end": 10209,
									"name": "SWAP1"
								},
								{
									"begin": 10170,
									"end": 10209,
									"name": "SWAP4"
								},
								{
									"begin": 10170,
									"end": 10209,
									"name": "OR"
								},
								{
									"begin": 10170,
									"end": 10209,
									"name": "SWAP1"
								},
								{
									"begin": 10170,
									"end": 10209,
									"name": "SWAP3"
								},
								{
									"begin": 10170,
									"end": 10209,
									"name": "SSTORE"
								},
								{
									"begin": 10254,
									"end": 10265,
									"name": "DUP3"
								},
								{
									"begin": 10254,
									"end": 10265,
									"name": "SLOAD"
								},
								{
									"begin": 10224,
									"end": 10266,
									"name": "SWAP2"
								},
								{
									"begin": 10224,
									"end": 10266,
									"name": "MLOAD"
								},
								{
									"begin": 10170,
									"end": 10187,
									"name": "SWAP1"
								},
								{
									"begin": 10170,
									"end": 10187,
									"name": "SWAP3"
								},
								{
									"begin": 10197,
									"end": 10208,
									"name": "SWAP2"
								},
								{
									"begin": 10224,
									"end": 10266,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 10224,
									"end": 10266,
									"name": "SWAP2"
								},
								{
									"begin": 10224,
									"end": 10266,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 10224,
									"end": 10266,
									"name": "SWAP2"
								},
								{
									"begin": 10254,
									"end": 10265,
									"name": "SWAP1"
								},
								{
									"begin": 10224,
									"end": 10266,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 10224,
									"end": 10266,
									"name": "JUMP"
								},
								{
									"begin": 10224,
									"end": 10266,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 10224,
									"end": 10266,
									"name": "JUMPDEST"
								},
								{
									"begin": 10224,
									"end": 10266,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 10224,
									"end": 10266,
									"name": "MLOAD"
								},
								{
									"begin": 10224,
									"end": 10266,
									"name": "DUP1"
								},
								{
									"begin": 10224,
									"end": 10266,
									"name": "SWAP2"
								},
								{
									"begin": 10224,
									"end": 10266,
									"name": "SUB"
								},
								{
									"begin": 10224,
									"end": 10266,
									"name": "SWAP1"
								},
								{
									"begin": 10224,
									"end": 10266,
									"name": "LOG3"
								},
								{
									"begin": 10276,
									"end": 10282,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 10276,
									"end": 10292,
									"name": "DUP1"
								},
								{
									"begin": 10276,
									"end": 10292,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 10276,
									"end": 10292,
									"name": "AND"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 10276,
									"end": 10292,
									"name": "DUP5"
								},
								{
									"begin": 10276,
									"end": 10292,
									"name": "DUP2"
								},
								{
									"begin": 10276,
									"end": 10292,
									"name": "AND"
								},
								{
									"begin": 10276,
									"end": 10292,
									"name": "SWAP2"
								},
								{
									"begin": 10276,
									"end": 10292,
									"name": "SWAP1"
								},
								{
									"begin": 10276,
									"end": 10292,
									"name": "SWAP2"
								},
								{
									"begin": 10276,
									"end": 10292,
									"name": "OR"
								},
								{
									"begin": 10276,
									"end": 10292,
									"name": "SWAP2"
								},
								{
									"begin": 10276,
									"end": 10292,
									"name": "DUP3"
								},
								{
									"begin": 10276,
									"end": 10292,
									"name": "SWAP1"
								},
								{
									"begin": 10276,
									"end": 10292,
									"name": "SSTORE"
								},
								{
									"begin": 10307,
									"end": 10340,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 10307,
									"end": 10340,
									"name": "MLOAD"
								},
								{
									"begin": 10307,
									"end": 10340,
									"name": "PUSH",
									"value": "3B0007EB941CF645526CBB3A4FDAECDA9D28CE4843167D9263B536A1F1EDC0F6"
								},
								{
									"begin": 10307,
									"end": 10340,
									"name": "SWAP3"
								},
								{
									"begin": 10307,
									"end": 10340,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 10307,
									"end": 10340,
									"name": "SWAP3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP3"
								},
								{
									"begin": 10333,
									"end": 10339,
									"name": "SWAP2"
								},
								{
									"begin": 10333,
									"end": 10339,
									"name": "AND"
								},
								{
									"begin": 10333,
									"end": 10339,
									"name": "SWAP1"
								},
								{
									"begin": 10307,
									"end": 10340,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 10307,
									"end": 10340,
									"name": "JUMP"
								},
								{
									"begin": 10307,
									"end": 10340,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 10307,
									"end": 10340,
									"name": "JUMPDEST"
								},
								{
									"begin": 10307,
									"end": 10340,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 10307,
									"end": 10340,
									"name": "MLOAD"
								},
								{
									"begin": 10307,
									"end": 10340,
									"name": "DUP1"
								},
								{
									"begin": 10307,
									"end": 10340,
									"name": "SWAP2"
								},
								{
									"begin": 10307,
									"end": 10340,
									"name": "SUB"
								},
								{
									"begin": 10307,
									"end": 10340,
									"name": "SWAP1"
								},
								{
									"begin": 10307,
									"end": 10340,
									"name": "LOG1"
								},
								{
									"begin": 10350,
									"end": 10369,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 10350,
									"end": 10392,
									"name": "SSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 6581,
									"end": 23344,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 6581,
									"end": 23344,
									"name": "SWAP1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 6581,
									"end": 23344,
									"name": "JUMP"
								},
								{
									"begin": 5,
									"end": 139,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 5,
									"end": 139,
									"name": "JUMPDEST"
								},
								{
									"begin": 83,
									"end": 96,
									"name": "DUP1"
								},
								{
									"begin": 83,
									"end": 96,
									"name": "MLOAD"
								},
								{
									"begin": 101,
									"end": 134,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 83,
									"end": 96,
									"name": "DUP2"
								},
								{
									"begin": 101,
									"end": 134,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 101,
									"end": 134,
									"name": "JUMP"
								},
								{
									"begin": 101,
									"end": 134,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 101,
									"end": 134,
									"name": "JUMPDEST"
								},
								{
									"begin": 68,
									"end": 139,
									"name": "SWAP3"
								},
								{
									"begin": 68,
									"end": 139,
									"name": "SWAP2"
								},
								{
									"begin": 68,
									"end": 139,
									"name": "POP"
								},
								{
									"begin": 68,
									"end": 139,
									"name": "POP"
								},
								{
									"begin": 68,
									"end": 139,
									"name": "JUMP"
								},
								{
									"begin": 146,
									"end": 280,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 146,
									"end": 280,
									"name": "JUMPDEST"
								},
								{
									"begin": 224,
									"end": 237,
									"name": "DUP1"
								},
								{
									"begin": 224,
									"end": 237,
									"name": "MLOAD"
								},
								{
									"begin": 242,
									"end": 275,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 224,
									"end": 237,
									"name": "DUP2"
								},
								{
									"begin": 242,
									"end": 275,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 242,
									"end": 275,
									"name": "JUMP"
								},
								{
									"begin": 287,
									"end": 822,
									"name": "tag",
									"value": "3"
								},
								{
									"begin": 287,
									"end": 822,
									"name": "JUMPDEST"
								},
								{
									"begin": 287,
									"end": 822,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 287,
									"end": 822,
									"name": "DUP1"
								},
								{
									"begin": 287,
									"end": 822,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 436,
									"end": 438,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 424,
									"end": 433,
									"name": "DUP5"
								},
								{
									"begin": 415,
									"end": 422,
									"name": "DUP7"
								},
								{
									"begin": 411,
									"end": 434,
									"name": "SUB"
								},
								{
									"begin": 407,
									"end": 439,
									"name": "SLT"
								},
								{
									"begin": 404,
									"end": 406,
									"name": "ISZERO"
								},
								{
									"begin": 404,
									"end": 406,
									"name": "PUSH [tag]",
									"value": "21"
								},
								{
									"begin": 404,
									"end": 406,
									"name": "JUMPI"
								},
								{
									"begin": 452,
									"end": 453,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 449,
									"end": 450,
									"name": "DUP1"
								},
								{
									"begin": 442,
									"end": 454,
									"name": "REVERT"
								},
								{
									"begin": 404,
									"end": 406,
									"name": "tag",
									"value": "21"
								},
								{
									"begin": 404,
									"end": 406,
									"name": "JUMPDEST"
								},
								{
									"begin": 487,
									"end": 488,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 504,
									"end": 568,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 560,
									"end": 567,
									"name": "DUP7"
								},
								{
									"begin": 540,
									"end": 549,
									"name": "DUP7"
								},
								{
									"begin": 504,
									"end": 568,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 504,
									"end": 568,
									"name": "JUMP"
								},
								{
									"begin": 504,
									"end": 568,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 504,
									"end": 568,
									"name": "JUMPDEST"
								},
								{
									"begin": 494,
									"end": 568,
									"name": "SWAP4"
								},
								{
									"begin": 494,
									"end": 568,
									"name": "POP"
								},
								{
									"begin": 466,
									"end": 574,
									"name": "POP"
								},
								{
									"begin": 605,
									"end": 607,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 623,
									"end": 687,
									"name": "PUSH [tag]",
									"value": "23"
								},
								{
									"begin": 679,
									"end": 686,
									"name": "DUP7"
								},
								{
									"begin": 670,
									"end": 676,
									"name": "DUP3"
								},
								{
									"begin": 659,
									"end": 668,
									"name": "DUP8"
								},
								{
									"begin": 655,
									"end": 677,
									"name": "ADD"
								},
								{
									"begin": 623,
									"end": 687,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 623,
									"end": 687,
									"name": "JUMP"
								},
								{
									"begin": 623,
									"end": 687,
									"name": "tag",
									"value": "23"
								},
								{
									"begin": 623,
									"end": 687,
									"name": "JUMPDEST"
								},
								{
									"begin": 613,
									"end": 687,
									"name": "SWAP3"
								},
								{
									"begin": 613,
									"end": 687,
									"name": "POP"
								},
								{
									"begin": 584,
									"end": 693,
									"name": "POP"
								},
								{
									"begin": 724,
									"end": 726,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 742,
									"end": 806,
									"name": "PUSH [tag]",
									"value": "24"
								},
								{
									"begin": 798,
									"end": 805,
									"name": "DUP7"
								},
								{
									"begin": 789,
									"end": 795,
									"name": "DUP3"
								},
								{
									"begin": 778,
									"end": 787,
									"name": "DUP8"
								},
								{
									"begin": 774,
									"end": 796,
									"name": "ADD"
								},
								{
									"begin": 742,
									"end": 806,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 742,
									"end": 806,
									"name": "JUMP"
								},
								{
									"begin": 742,
									"end": 806,
									"name": "tag",
									"value": "24"
								},
								{
									"begin": 742,
									"end": 806,
									"name": "JUMPDEST"
								},
								{
									"begin": 732,
									"end": 806,
									"name": "SWAP2"
								},
								{
									"begin": 732,
									"end": 806,
									"name": "POP"
								},
								{
									"begin": 703,
									"end": 812,
									"name": "POP"
								},
								{
									"begin": 398,
									"end": 822,
									"name": "SWAP3"
								},
								{
									"begin": 398,
									"end": 822,
									"name": "POP"
								},
								{
									"begin": 398,
									"end": 822,
									"name": "SWAP3"
								},
								{
									"begin": 398,
									"end": 822,
									"name": "POP"
								},
								{
									"begin": 398,
									"end": 822,
									"name": "SWAP3"
								},
								{
									"begin": 398,
									"end": 822,
									"name": "JUMP"
								},
								{
									"begin": 829,
									"end": 971,
									"name": "tag",
									"value": "25"
								},
								{
									"begin": 829,
									"end": 971,
									"name": "JUMPDEST"
								},
								{
									"begin": 920,
									"end": 965,
									"name": "PUSH [tag]",
									"value": "26"
								},
								{
									"begin": 959,
									"end": 964,
									"name": "DUP2"
								},
								{
									"begin": 920,
									"end": 965,
									"name": "PUSH [tag]",
									"value": "27"
								},
								{
									"begin": 920,
									"end": 965,
									"name": "JUMP"
								},
								{
									"begin": 920,
									"end": 965,
									"name": "tag",
									"value": "26"
								},
								{
									"begin": 920,
									"end": 965,
									"name": "JUMPDEST"
								},
								{
									"begin": 915,
									"end": 918,
									"name": "DUP3"
								},
								{
									"begin": 908,
									"end": 966,
									"name": "MSTORE"
								},
								{
									"begin": 902,
									"end": 971,
									"name": "POP"
								},
								{
									"begin": 902,
									"end": 971,
									"name": "POP"
								},
								{
									"begin": 902,
									"end": 971,
									"name": "JUMP"
								},
								{
									"begin": 978,
									"end": 1091,
									"name": "tag",
									"value": "28"
								},
								{
									"begin": 978,
									"end": 1091,
									"name": "JUMPDEST"
								},
								{
									"begin": 1061,
									"end": 1085,
									"name": "PUSH [tag]",
									"value": "26"
								},
								{
									"begin": 1079,
									"end": 1084,
									"name": "DUP2"
								},
								{
									"begin": 1061,
									"end": 1085,
									"name": "PUSH [tag]",
									"value": "30"
								},
								{
									"begin": 1061,
									"end": 1085,
									"name": "JUMP"
								},
								{
									"begin": 1099,
									"end": 1493,
									"name": "tag",
									"value": "31"
								},
								{
									"begin": 1099,
									"end": 1493,
									"name": "JUMPDEST"
								},
								{
									"begin": 1099,
									"end": 1493,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1259,
									"end": 1326,
									"name": "PUSH [tag]",
									"value": "32"
								},
								{
									"begin": 1323,
									"end": 1325,
									"name": "PUSH",
									"value": "39"
								},
								{
									"begin": 1318,
									"end": 1321,
									"name": "DUP4"
								},
								{
									"begin": 1259,
									"end": 1326,
									"name": "PUSH [tag]",
									"value": "33"
								},
								{
									"begin": 1259,
									"end": 1326,
									"name": "JUMP"
								},
								{
									"begin": 1259,
									"end": 1326,
									"name": "tag",
									"value": "32"
								},
								{
									"begin": 1259,
									"end": 1326,
									"name": "JUMPDEST"
								},
								{
									"begin": 1359,
									"end": 1393,
									"name": "PUSH",
									"value": "556E693A3A636F6E7374727563746F723A206D696E74696E672063616E206F6E"
								},
								{
									"begin": 1339,
									"end": 1394,
									"name": "DUP2"
								},
								{
									"begin": 1339,
									"end": 1394,
									"name": "MSTORE"
								},
								{
									"begin": 1428,
									"end": 1455,
									"name": "PUSH",
									"value": "6C7920626567696E206166746572206465706C6F796D656E7400000000000000"
								},
								{
									"begin": 1423,
									"end": 1425,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1414,
									"end": 1426,
									"name": "DUP3"
								},
								{
									"begin": 1414,
									"end": 1426,
									"name": "ADD"
								},
								{
									"begin": 1407,
									"end": 1456,
									"name": "MSTORE"
								},
								{
									"begin": 1484,
									"end": 1486,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1475,
									"end": 1487,
									"name": "ADD"
								},
								{
									"begin": 1475,
									"end": 1487,
									"name": "SWAP3"
								},
								{
									"begin": 1245,
									"end": 1493,
									"name": "SWAP2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 1245,
									"end": 1493,
									"name": "JUMP"
								},
								{
									"begin": 1501,
									"end": 1614,
									"name": "tag",
									"value": "34"
								},
								{
									"begin": 1501,
									"end": 1614,
									"name": "JUMPDEST"
								},
								{
									"begin": 1584,
									"end": 1608,
									"name": "PUSH [tag]",
									"value": "26"
								},
								{
									"begin": 1602,
									"end": 1607,
									"name": "DUP2"
								},
								{
									"begin": 1584,
									"end": 1608,
									"name": "PUSH [tag]",
									"value": "36"
								},
								{
									"begin": 1584,
									"end": 1608,
									"name": "JUMP"
								},
								{
									"begin": 1621,
									"end": 1961,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 1621,
									"end": 1961,
									"name": "JUMPDEST"
								},
								{
									"begin": 1775,
									"end": 1777,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1760,
									"end": 1778,
									"name": "DUP2"
								},
								{
									"begin": 1760,
									"end": 1778,
									"name": "ADD"
								},
								{
									"begin": 1789,
									"end": 1868,
									"name": "PUSH [tag]",
									"value": "37"
								},
								{
									"begin": 1764,
									"end": 1773,
									"name": "DUP3"
								},
								{
									"begin": 1841,
									"end": 1847,
									"name": "DUP6"
								},
								{
									"begin": 1789,
									"end": 1868,
									"name": "PUSH [tag]",
									"value": "25"
								},
								{
									"begin": 1789,
									"end": 1868,
									"name": "JUMP"
								},
								{
									"begin": 1789,
									"end": 1868,
									"name": "tag",
									"value": "37"
								},
								{
									"begin": 1789,
									"end": 1868,
									"name": "JUMPDEST"
								},
								{
									"begin": 1879,
									"end": 1951,
									"name": "PUSH [tag]",
									"value": "38"
								},
								{
									"begin": 1947,
									"end": 1949,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1936,
									"end": 1945,
									"name": "DUP4"
								},
								{
									"begin": 1932,
									"end": 1950,
									"name": "ADD"
								},
								{
									"begin": 1923,
									"end": 1929,
									"name": "DUP5"
								},
								{
									"begin": 1879,
									"end": 1951,
									"name": "PUSH [tag]",
									"value": "28"
								},
								{
									"begin": 1879,
									"end": 1951,
									"name": "JUMP"
								},
								{
									"begin": 1879,
									"end": 1951,
									"name": "tag",
									"value": "38"
								},
								{
									"begin": 1879,
									"end": 1951,
									"name": "JUMPDEST"
								},
								{
									"begin": 1746,
									"end": 1961,
									"name": "SWAP4"
								},
								{
									"begin": 1746,
									"end": 1961,
									"name": "SWAP3"
								},
								{
									"begin": 1746,
									"end": 1961,
									"name": "POP"
								},
								{
									"begin": 1746,
									"end": 1961,
									"name": "POP"
								},
								{
									"begin": 1746,
									"end": 1961,
									"name": "POP"
								},
								{
									"begin": 1746,
									"end": 1961,
									"name": "JUMP"
								},
								{
									"begin": 1968,
									"end": 2375,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 1968,
									"end": 2375,
									"name": "JUMPDEST"
								},
								{
									"begin": 2159,
									"end": 2161,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2173,
									"end": 2220,
									"name": "DUP1"
								},
								{
									"begin": 2173,
									"end": 2220,
									"name": "DUP3"
								},
								{
									"begin": 2173,
									"end": 2220,
									"name": "MSTORE"
								},
								{
									"begin": 2144,
									"end": 2162,
									"name": "DUP2"
								},
								{
									"begin": 2144,
									"end": 2162,
									"name": "ADD"
								},
								{
									"begin": 2234,
									"end": 2365,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 2144,
									"end": 2162,
									"name": "DUP2"
								},
								{
									"begin": 2234,
									"end": 2365,
									"name": "PUSH [tag]",
									"value": "31"
								},
								{
									"begin": 2234,
									"end": 2365,
									"name": "JUMP"
								},
								{
									"begin": 2382,
									"end": 2595,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 2382,
									"end": 2595,
									"name": "JUMPDEST"
								},
								{
									"begin": 2500,
									"end": 2502,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2485,
									"end": 2503,
									"name": "DUP2"
								},
								{
									"begin": 2485,
									"end": 2503,
									"name": "ADD"
								},
								{
									"begin": 2514,
									"end": 2585,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 2489,
									"end": 2498,
									"name": "DUP3"
								},
								{
									"begin": 2558,
									"end": 2564,
									"name": "DUP5"
								},
								{
									"begin": 2514,
									"end": 2585,
									"name": "PUSH [tag]",
									"value": "34"
								},
								{
									"begin": 2514,
									"end": 2585,
									"name": "JUMP"
								},
								{
									"begin": 2603,
									"end": 2766,
									"name": "tag",
									"value": "33"
								},
								{
									"begin": 2603,
									"end": 2766,
									"name": "JUMPDEST"
								},
								{
									"begin": 2706,
									"end": 2725,
									"name": "SWAP1"
								},
								{
									"begin": 2706,
									"end": 2725,
									"name": "DUP2"
								},
								{
									"begin": 2706,
									"end": 2725,
									"name": "MSTORE"
								},
								{
									"begin": 2755,
									"end": 2759,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2746,
									"end": 2760,
									"name": "ADD"
								},
								{
									"begin": 2746,
									"end": 2760,
									"name": "SWAP1"
								},
								{
									"begin": 2699,
									"end": 2766,
									"name": "JUMP"
								},
								{
									"begin": 2774,
									"end": 2865,
									"name": "tag",
									"value": "30"
								},
								{
									"begin": 2774,
									"end": 2865,
									"name": "JUMPDEST"
								},
								{
									"begin": 2774,
									"end": 2865,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 2934,
									"end": 2988,
									"name": "DUP3"
								},
								{
									"begin": 2934,
									"end": 2988,
									"name": "AND"
								},
								{
									"begin": 2836,
									"end": 2860,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 2917,
									"end": 2993,
									"name": "JUMP"
								},
								{
									"begin": 3000,
									"end": 3072,
									"name": "tag",
									"value": "36"
								},
								{
									"begin": 3000,
									"end": 3072,
									"name": "JUMPDEST"
								},
								{
									"begin": 3062,
									"end": 3067,
									"name": "SWAP1"
								},
								{
									"begin": 3045,
									"end": 3072,
									"name": "JUMP"
								},
								{
									"begin": 3079,
									"end": 3208,
									"name": "tag",
									"value": "27"
								},
								{
									"begin": 3079,
									"end": 3208,
									"name": "JUMPDEST"
								},
								{
									"begin": 3079,
									"end": 3208,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3166,
									"end": 3203,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 3197,
									"end": 3202,
									"name": "DUP3"
								},
								{
									"begin": 3215,
									"end": 3336,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3294,
									"end": 3331,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 3325,
									"end": 3330,
									"name": "DUP3"
								},
								{
									"begin": 3294,
									"end": 3331,
									"name": "PUSH [tag]",
									"value": "30"
								},
								{
									"begin": 3294,
									"end": 3331,
									"name": "JUMP"
								},
								{
									"begin": 3458,
									"end": 3575,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 3458,
									"end": 3575,
									"name": "JUMPDEST"
								},
								{
									"begin": 3527,
									"end": 3551,
									"name": "PUSH [tag]",
									"value": "48"
								},
								{
									"begin": 3545,
									"end": 3550,
									"name": "DUP2"
								},
								{
									"begin": 3527,
									"end": 3551,
									"name": "PUSH [tag]",
									"value": "30"
								},
								{
									"begin": 3527,
									"end": 3551,
									"name": "JUMP"
								},
								{
									"begin": 3527,
									"end": 3551,
									"name": "tag",
									"value": "48"
								},
								{
									"begin": 3527,
									"end": 3551,
									"name": "JUMPDEST"
								},
								{
									"begin": 3520,
									"end": 3525,
									"name": "DUP2"
								},
								{
									"begin": 3517,
									"end": 3552,
									"name": "EQ"
								},
								{
									"begin": 3507,
									"end": 3509,
									"name": "PUSH [tag]",
									"value": "49"
								},
								{
									"begin": 3507,
									"end": 3509,
									"name": "JUMPI"
								},
								{
									"begin": 3566,
									"end": 3567,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3563,
									"end": 3564,
									"name": "DUP1"
								},
								{
									"begin": 3556,
									"end": 3568,
									"name": "REVERT"
								},
								{
									"begin": 3507,
									"end": 3509,
									"name": "tag",
									"value": "49"
								},
								{
									"begin": 3507,
									"end": 3509,
									"name": "JUMPDEST"
								},
								{
									"begin": 3501,
									"end": 3575,
									"name": "POP"
								},
								{
									"begin": 3501,
									"end": 3575,
									"name": "JUMP"
								},
								{
									"begin": 3582,
									"end": 3699,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 3582,
									"end": 3699,
									"name": "JUMPDEST"
								},
								{
									"begin": 3651,
									"end": 3675,
									"name": "PUSH [tag]",
									"value": "48"
								},
								{
									"begin": 3669,
									"end": 3674,
									"name": "DUP2"
								},
								{
									"begin": 3651,
									"end": 3675,
									"name": "PUSH [tag]",
									"value": "36"
								},
								{
									"begin": 3651,
									"end": 3675,
									"name": "JUMP"
								},
								{
									"begin": 3625,
									"end": 3699,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 3625,
									"end": 3699,
									"name": "JUMPDEST"
								},
								{
									"begin": 6581,
									"end": 23344,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6581,
									"end": 23344,
									"name": "DUP1"
								},
								{
									"begin": 6581,
									"end": 23344,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6581,
									"end": 23344,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 6581,
									"end": 23344,
									"name": "CODECOPY"
								},
								{
									"begin": 6581,
									"end": 23344,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 6581,
									"end": 23344,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a365627a7a72315820b228f14032f179f6e81f367b78ff3ff6cdc127c0f42b53f91c18ec8ff8135cbe6c6578706572696d656e74616cf564736f6c63430005110040",
									".code": [
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "MSTORE"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "POP"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "LT"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPI"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "SHR"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "DUP1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "6FCFFF45"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "GT"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPI"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "DUP1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "B4B5EA57"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "GT"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPI"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "DUP1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "GT"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPI"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "DUP1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "EQ"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPI"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "DUP1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "E7A324DC"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "EQ"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPI"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "DUP1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "F1127ED8"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "EQ"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPI"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "DUP1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "FCA3B5AA"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "EQ"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPI"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMP"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPDEST"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "DUP1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "B4B5EA57"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "EQ"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPI"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "DUP1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "C3CDA520"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "EQ"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPI"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "DUP1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "D505ACCF"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "EQ"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPI"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMP"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPDEST"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "DUP1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "782D6FE1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "GT"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPI"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "DUP1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "782D6FE1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "EQ"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPI"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "DUP1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "EQ"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPI"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "DUP1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "EQ"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPI"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "DUP1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "EQ"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPI"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMP"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPDEST"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "DUP1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "6FCFFF45"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "EQ"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPI"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "DUP1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "EQ"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPI"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "DUP1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "76C71CA1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "EQ"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPI"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMP"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPDEST"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "DUP1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "30ADF81F"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "GT"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPI"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "DUP1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "40C10F19"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "GT"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPI"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "DUP1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "40C10F19"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "EQ"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPI"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "DUP1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "587CDE1E"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "EQ"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPI"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "DUP1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "5C11D62F"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "EQ"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPI"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "DUP1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "5C19A95C"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "EQ"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPI"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMP"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPDEST"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "DUP1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "30ADF81F"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "EQ"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPI"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "DUP1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "30B36CEF"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "EQ"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPI"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "DUP1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "EQ"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPI"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMP"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPDEST"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "DUP1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "EQ"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPI"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "DUP1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "7546172"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "EQ"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPI"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "DUP1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "EQ"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPI"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "DUP1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "EQ"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPI"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "DUP1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "20606B70"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "EQ"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPI"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "DUP1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "EQ"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPI"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPDEST"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "DUP1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "REVERT"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "JUMPDEST"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "JUMPDEST"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "MLOAD"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "SWAP2"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "SWAP1"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "JUMP"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "JUMPDEST"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "MLOAD"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "DUP1"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "SWAP2"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "SUB"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "SWAP1"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "RETURN"
										},
										{
											"begin": 7055,
											"end": 7076,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 7055,
											"end": 7076,
											"name": "JUMPDEST"
										},
										{
											"begin": 7055,
											"end": 7076,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 7055,
											"end": 7076,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 7055,
											"end": 7076,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7055,
											"end": 7076,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 7055,
											"end": 7076,
											"name": "JUMPDEST"
										},
										{
											"begin": 7055,
											"end": 7076,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7055,
											"end": 7076,
											"name": "MLOAD"
										},
										{
											"begin": 7055,
											"end": 7076,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 7055,
											"end": 7076,
											"name": "SWAP2"
										},
										{
											"begin": 7055,
											"end": 7076,
											"name": "SWAP1"
										},
										{
											"begin": 7055,
											"end": 7076,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 7055,
											"end": 7076,
											"name": "JUMP"
										},
										{
											"begin": 12846,
											"end": 13252,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 12846,
											"end": 13252,
											"name": "JUMPDEST"
										},
										{
											"begin": 12846,
											"end": 13252,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 12846,
											"end": 13252,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 12846,
											"end": 13252,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12846,
											"end": 13252,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12846,
											"end": 13252,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 12846,
											"end": 13252,
											"name": "JUMP"
										},
										{
											"begin": 12846,
											"end": 13252,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 12846,
											"end": 13252,
											"name": "JUMPDEST"
										},
										{
											"begin": 12846,
											"end": 13252,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 12846,
											"end": 13252,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12846,
											"end": 13252,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 12846,
											"end": 13252,
											"name": "JUMPDEST"
										},
										{
											"begin": 12846,
											"end": 13252,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12846,
											"end": 13252,
											"name": "MLOAD"
										},
										{
											"begin": 12846,
											"end": 13252,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 12846,
											"end": 13252,
											"name": "SWAP2"
										},
										{
											"begin": 12846,
											"end": 13252,
											"name": "SWAP1"
										},
										{
											"begin": 12846,
											"end": 13252,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 12846,
											"end": 13252,
											"name": "JUMP"
										},
										{
											"begin": 6939,
											"end": 6981,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 6939,
											"end": 6981,
											"name": "JUMPDEST"
										},
										{
											"begin": 6939,
											"end": 6981,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 6939,
											"end": 6981,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 6939,
											"end": 6981,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6939,
											"end": 6981,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 6939,
											"end": 6981,
											"name": "JUMPDEST"
										},
										{
											"begin": 6939,
											"end": 6981,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6939,
											"end": 6981,
											"name": "MLOAD"
										},
										{
											"begin": 6939,
											"end": 6981,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 6939,
											"end": 6981,
											"name": "SWAP2"
										},
										{
											"begin": 6939,
											"end": 6981,
											"name": "SWAP1"
										},
										{
											"begin": 6939,
											"end": 6981,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 6939,
											"end": 6981,
											"name": "JUMP"
										},
										{
											"begin": 8251,
											"end": 8373,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 8251,
											"end": 8373,
											"name": "JUMPDEST"
										},
										{
											"begin": 8251,
											"end": 8373,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 8251,
											"end": 8373,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 8251,
											"end": 8373,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15853,
											"end": 16509,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 15853,
											"end": 16509,
											"name": "JUMPDEST"
										},
										{
											"begin": 15853,
											"end": 16509,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 15853,
											"end": 16509,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 15853,
											"end": 16509,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 15853,
											"end": 16509,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15853,
											"end": 16509,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 15853,
											"end": 16509,
											"name": "JUMP"
										},
										{
											"begin": 15853,
											"end": 16509,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 15853,
											"end": 16509,
											"name": "JUMPDEST"
										},
										{
											"begin": 15853,
											"end": 16509,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 15853,
											"end": 16509,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8668,
											"end": 8805,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 8668,
											"end": 8805,
											"name": "JUMPDEST"
										},
										{
											"begin": 8668,
											"end": 8805,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 8668,
											"end": 8805,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 8668,
											"end": 8805,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7143,
											"end": 7174,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 7143,
											"end": 7174,
											"name": "JUMPDEST"
										},
										{
											"begin": 7143,
											"end": 7174,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 7143,
											"end": 7174,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 7143,
											"end": 7174,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "JUMPDEST"
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "JUMPDEST"
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "MLOAD"
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "SWAP2"
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "SWAP1"
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "JUMP"
										},
										{
											"begin": 10909,
											"end": 11948,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 10909,
											"end": 11948,
											"name": "JUMPDEST"
										},
										{
											"begin": 10909,
											"end": 11948,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 10909,
											"end": 11948,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 10909,
											"end": 11948,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 10909,
											"end": 11948,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10909,
											"end": 11948,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 10909,
											"end": 11948,
											"name": "JUMP"
										},
										{
											"begin": 10909,
											"end": 11948,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 10909,
											"end": 11948,
											"name": "JUMPDEST"
										},
										{
											"begin": 10909,
											"end": 11948,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 10909,
											"end": 11948,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10909,
											"end": 11948,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 10909,
											"end": 11948,
											"name": "JUMPDEST"
										},
										{
											"begin": 10909,
											"end": 11948,
											"name": "STOP"
										},
										{
											"begin": 7716,
											"end": 7761,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 7716,
											"end": 7761,
											"name": "JUMPDEST"
										},
										{
											"begin": 7716,
											"end": 7761,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 7716,
											"end": 7761,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 7716,
											"end": 7761,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 7716,
											"end": 7761,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7716,
											"end": 7761,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 7716,
											"end": 7761,
											"name": "JUMP"
										},
										{
											"begin": 7716,
											"end": 7761,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 7716,
											"end": 7761,
											"name": "JUMPDEST"
										},
										{
											"begin": 7716,
											"end": 7761,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 7716,
											"end": 7761,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7224,
											"end": 7285,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 7224,
											"end": 7285,
											"name": "JUMPDEST"
										},
										{
											"begin": 7224,
											"end": 7285,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 7224,
											"end": 7285,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 7224,
											"end": 7285,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7224,
											"end": 7285,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 7224,
											"end": 7285,
											"name": "JUMPDEST"
										},
										{
											"begin": 7224,
											"end": 7285,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7224,
											"end": 7285,
											"name": "MLOAD"
										},
										{
											"begin": 7224,
											"end": 7285,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 7224,
											"end": 7285,
											"name": "SWAP2"
										},
										{
											"begin": 7224,
											"end": 7285,
											"name": "SWAP1"
										},
										{
											"begin": 7224,
											"end": 7285,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 7224,
											"end": 7285,
											"name": "JUMP"
										},
										{
											"begin": 16651,
											"end": 16751,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 16651,
											"end": 16751,
											"name": "JUMPDEST"
										},
										{
											"begin": 16651,
											"end": 16751,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 16651,
											"end": 16751,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 16651,
											"end": 16751,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 16651,
											"end": 16751,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16651,
											"end": 16751,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 16651,
											"end": 16751,
											"name": "JUMP"
										},
										{
											"begin": 16651,
											"end": 16751,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 16651,
											"end": 16751,
											"name": "JUMPDEST"
										},
										{
											"begin": 16651,
											"end": 16751,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 16651,
											"end": 16751,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8132,
											"end": 8181,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 8132,
											"end": 8181,
											"name": "JUMPDEST"
										},
										{
											"begin": 8132,
											"end": 8181,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 8132,
											"end": 8181,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 8132,
											"end": 8181,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 8132,
											"end": 8181,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8132,
											"end": 8181,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 8132,
											"end": 8181,
											"name": "JUMP"
										},
										{
											"begin": 8132,
											"end": 8181,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 8132,
											"end": 8181,
											"name": "JUMPDEST"
										},
										{
											"begin": 8132,
											"end": 8181,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 8132,
											"end": 8181,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14957,
											"end": 15063,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 14957,
											"end": 15063,
											"name": "JUMPDEST"
										},
										{
											"begin": 14957,
											"end": 15063,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 14957,
											"end": 15063,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 14957,
											"end": 15063,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14957,
											"end": 15063,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14957,
											"end": 15063,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 14957,
											"end": 15063,
											"name": "JUMP"
										},
										{
											"begin": 14957,
											"end": 15063,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 14957,
											"end": 15063,
											"name": "JUMPDEST"
										},
										{
											"begin": 14957,
											"end": 15063,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 14957,
											"end": 15063,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7377,
											"end": 7410,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 7377,
											"end": 7410,
											"name": "JUMPDEST"
										},
										{
											"begin": 7377,
											"end": 7410,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 7377,
											"end": 7410,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 7377,
											"end": 7410,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18786,
											"end": 19971,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 18786,
											"end": 19971,
											"name": "JUMPDEST"
										},
										{
											"begin": 18786,
											"end": 19971,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 18786,
											"end": 19971,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 18786,
											"end": 19971,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 18786,
											"end": 19971,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18786,
											"end": 19971,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 18786,
											"end": 19971,
											"name": "JUMP"
										},
										{
											"begin": 18786,
											"end": 19971,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 18786,
											"end": 19971,
											"name": "JUMPDEST"
										},
										{
											"begin": 18786,
											"end": 19971,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 18786,
											"end": 19971,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18786,
											"end": 19971,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 18786,
											"end": 19971,
											"name": "JUMPDEST"
										},
										{
											"begin": 18786,
											"end": 19971,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18786,
											"end": 19971,
											"name": "MLOAD"
										},
										{
											"begin": 18786,
											"end": 19971,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 18786,
											"end": 19971,
											"name": "SWAP2"
										},
										{
											"begin": 18786,
											"end": 19971,
											"name": "SWAP1"
										},
										{
											"begin": 18786,
											"end": 19971,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 18786,
											"end": 19971,
											"name": "JUMP"
										},
										{
											"begin": 8883,
											"end": 8922,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 8883,
											"end": 8922,
											"name": "JUMPDEST"
										},
										{
											"begin": 8883,
											"end": 8922,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 8883,
											"end": 8922,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 8883,
											"end": 8922,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 8883,
											"end": 8922,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8883,
											"end": 8922,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 8883,
											"end": 8922,
											"name": "JUMP"
										},
										{
											"begin": 8883,
											"end": 8922,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 8883,
											"end": 8922,
											"name": "JUMPDEST"
										},
										{
											"begin": 8883,
											"end": 8922,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 8883,
											"end": 8922,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6746,
											"end": 6783,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 6746,
											"end": 6783,
											"name": "JUMPDEST"
										},
										{
											"begin": 6746,
											"end": 6783,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 6746,
											"end": 6783,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 6746,
											"end": 6783,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15319,
											"end": 15552,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 15319,
											"end": 15552,
											"name": "JUMPDEST"
										},
										{
											"begin": 15319,
											"end": 15552,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 15319,
											"end": 15552,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 15319,
											"end": 15552,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 15319,
											"end": 15552,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15319,
											"end": 15552,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 15319,
											"end": 15552,
											"name": "JUMP"
										},
										{
											"begin": 15319,
											"end": 15552,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 15319,
											"end": 15552,
											"name": "JUMPDEST"
										},
										{
											"begin": 15319,
											"end": 15552,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 15319,
											"end": 15552,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18145,
											"end": 18364,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 18145,
											"end": 18364,
											"name": "JUMPDEST"
										},
										{
											"begin": 18145,
											"end": 18364,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 18145,
											"end": 18364,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 18145,
											"end": 18364,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 18145,
											"end": 18364,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18145,
											"end": 18364,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 18145,
											"end": 18364,
											"name": "JUMP"
										},
										{
											"begin": 18145,
											"end": 18364,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 18145,
											"end": 18364,
											"name": "JUMPDEST"
										},
										{
											"begin": 18145,
											"end": 18364,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 18145,
											"end": 18364,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17174,
											"end": 17951,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 17174,
											"end": 17951,
											"name": "JUMPDEST"
										},
										{
											"begin": 17174,
											"end": 17951,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 17174,
											"end": 17951,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 17174,
											"end": 17951,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 17174,
											"end": 17951,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17174,
											"end": 17951,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 17174,
											"end": 17951,
											"name": "JUMP"
										},
										{
											"begin": 17174,
											"end": 17951,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 17174,
											"end": 17951,
											"name": "JUMPDEST"
										},
										{
											"begin": 17174,
											"end": 17951,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 17174,
											"end": 17951,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13730,
											"end": 14761,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 13730,
											"end": 14761,
											"name": "JUMPDEST"
										},
										{
											"begin": 13730,
											"end": 14761,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 13730,
											"end": 14761,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 13730,
											"end": 14761,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13730,
											"end": 14761,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13730,
											"end": 14761,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 13730,
											"end": 14761,
											"name": "JUMP"
										},
										{
											"begin": 13730,
											"end": 14761,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 13730,
											"end": 14761,
											"name": "JUMPDEST"
										},
										{
											"begin": 13730,
											"end": 14761,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 13730,
											"end": 14761,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12244,
											"end": 12378,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 12244,
											"end": 12378,
											"name": "JUMPDEST"
										},
										{
											"begin": 12244,
											"end": 12378,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 12244,
											"end": 12378,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 12244,
											"end": 12378,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12244,
											"end": 12378,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12244,
											"end": 12378,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 12244,
											"end": 12378,
											"name": "JUMP"
										},
										{
											"begin": 12244,
											"end": 12378,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 12244,
											"end": 12378,
											"name": "JUMPDEST"
										},
										{
											"begin": 12244,
											"end": 12378,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 12244,
											"end": 12378,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8464,
											"end": 8581,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 8464,
											"end": 8581,
											"name": "JUMPDEST"
										},
										{
											"begin": 8464,
											"end": 8581,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 8464,
											"end": 8581,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 8464,
											"end": 8581,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "JUMPDEST"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "JUMP"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "JUMPDEST"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "JUMPDEST"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "MLOAD"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "SWAP3"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "SWAP2"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "SWAP1"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "JUMP"
										},
										{
											"begin": 10514,
											"end": 10741,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 10514,
											"end": 10741,
											"name": "JUMPDEST"
										},
										{
											"begin": 10514,
											"end": 10741,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 10514,
											"end": 10741,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 10514,
											"end": 10741,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 10514,
											"end": 10741,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10514,
											"end": 10741,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 10514,
											"end": 10741,
											"name": "JUMP"
										},
										{
											"begin": 10514,
											"end": 10741,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 10514,
											"end": 10741,
											"name": "JUMPDEST"
										},
										{
											"begin": 10514,
											"end": 10741,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 10514,
											"end": 10741,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "JUMPDEST"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "MLOAD"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "DUP1"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "ADD"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "MSTORE"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "DUP1"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "DUP2"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "MSTORE"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "556E697377617"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "CC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "DUP2"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "MSTORE"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "POP"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "DUP2"
										},
										{
											"begin": 6649,
											"end": 6688,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7055,
											"end": 7076,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 7055,
											"end": 7076,
											"name": "JUMPDEST"
										},
										{
											"begin": 7055,
											"end": 7076,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7055,
											"end": 7076,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7055,
											"end": 7076,
											"name": "AND"
										},
										{
											"begin": 7055,
											"end": 7076,
											"name": "DUP2"
										},
										{
											"begin": 7055,
											"end": 7076,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12846,
											"end": 13252,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 12846,
											"end": 13252,
											"name": "JUMPDEST"
										},
										{
											"begin": 12914,
											"end": 12918,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12930,
											"end": 12943,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 12957,
											"end": 12966,
											"name": "DUP4"
										},
										{
											"begin": 12957,
											"end": 12978,
											"name": "EQ"
										},
										{
											"begin": 12953,
											"end": 13121,
											"name": "ISZERO"
										},
										{
											"begin": 12953,
											"end": 13121,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 12953,
											"end": 13121,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 12953,
											"end": 13121,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 12953,
											"end": 13121,
											"name": "JUMP"
										},
										{
											"begin": 12953,
											"end": 13121,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 12953,
											"end": 13121,
											"name": "JUMPDEST"
										},
										{
											"begin": 13053,
											"end": 13110,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 13060,
											"end": 13069,
											"name": "DUP4"
										},
										{
											"begin": 13053,
											"end": 13110,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13053,
											"end": 13110,
											"name": "MLOAD"
										},
										{
											"begin": 13053,
											"end": 13110,
											"name": "DUP1"
										},
										{
											"begin": 13053,
											"end": 13110,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 13053,
											"end": 13110,
											"name": "ADD"
										},
										{
											"begin": 13053,
											"end": 13110,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13053,
											"end": 13110,
											"name": "MSTORE"
										},
										{
											"begin": 13053,
											"end": 13110,
											"name": "DUP1"
										},
										{
											"begin": 13053,
											"end": 13110,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13053,
											"end": 13110,
											"name": "DUP2"
										},
										{
											"begin": 13053,
											"end": 13110,
											"name": "MSTORE"
										},
										{
											"begin": 13053,
											"end": 13110,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13053,
											"end": 13110,
											"name": "ADD"
										},
										{
											"begin": 13053,
											"end": 13110,
											"name": "PUSH data",
											"value": "CB3E128DA7F3F16C83A901CCE3AB145C66BAD45A0CD648091FECC9964EBF42FE"
										},
										{
											"begin": 13053,
											"end": 13110,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13053,
											"end": 13110,
											"name": "SWAP2"
										},
										{
											"begin": 13053,
											"end": 13110,
											"name": "CODECOPY"
										},
										{
											"begin": 13053,
											"end": 13059,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 13053,
											"end": 13110,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13053,
											"end": 13110,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 13053,
											"end": 13110,
											"name": "JUMPDEST"
										},
										{
											"begin": 13044,
											"end": 13110,
											"name": "SWAP1"
										},
										{
											"begin": 13044,
											"end": 13110,
											"name": "POP"
										},
										{
											"begin": 12953,
											"end": 13121,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 12953,
											"end": 13121,
											"name": "JUMPDEST"
										},
										{
											"begin": 13142,
											"end": 13152,
											"name": "CALLER"
										},
										{
											"begin": 13131,
											"end": 13153,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13131,
											"end": 13153,
											"name": "DUP2"
										},
										{
											"begin": 13131,
											"end": 13153,
											"name": "DUP2"
										},
										{
											"begin": 13131,
											"end": 13153,
											"name": "MSTORE"
										},
										{
											"begin": 13131,
											"end": 13141,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 13131,
											"end": 13153,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13131,
											"end": 13153,
											"name": "SWAP1"
										},
										{
											"begin": 13131,
											"end": 13153,
											"name": "DUP2"
										},
										{
											"begin": 13131,
											"end": 13153,
											"name": "MSTORE"
										},
										{
											"begin": 13131,
											"end": 13153,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13131,
											"end": 13153,
											"name": "DUP1"
										},
										{
											"begin": 13131,
											"end": 13153,
											"name": "DUP4"
										},
										{
											"begin": 13131,
											"end": 13153,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13131,
											"end": 13162,
											"name": "DUP10"
										},
										{
											"begin": 13131,
											"end": 13162,
											"name": "AND"
										},
										{
											"begin": 13131,
											"end": 13162,
											"name": "DUP1"
										},
										{
											"begin": 13131,
											"end": 13162,
											"name": "DUP6"
										},
										{
											"begin": 13131,
											"end": 13162,
											"name": "MSTORE"
										},
										{
											"begin": 13131,
											"end": 13162,
											"name": "SWAP3"
										},
										{
											"begin": 13131,
											"end": 13162,
											"name": "MSTORE"
										},
										{
											"begin": 13131,
											"end": 13162,
											"name": "SWAP2"
										},
										{
											"begin": 13131,
											"end": 13162,
											"name": "DUP3"
										},
										{
											"begin": 13131,
											"end": 13162,
											"name": "SWAP1"
										},
										{
											"begin": 13131,
											"end": 13162,
											"name": "KECCAK256"
										},
										{
											"begin": 13131,
											"end": 13171,
											"name": "DUP1"
										},
										{
											"begin": 13131,
											"end": 13171,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 13131,
											"end": 13171,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13131,
											"end": 13171,
											"name": "DUP7"
										},
										{
											"begin": 13131,
											"end": 13171,
											"name": "AND"
										},
										{
											"begin": 13131,
											"end": 13171,
											"name": "OR"
										},
										{
											"begin": 13131,
											"end": 13171,
											"name": "SWAP1"
										},
										{
											"begin": 13131,
											"end": 13171,
											"name": "SSTORE"
										},
										{
											"begin": 13187,
											"end": 13224,
											"name": "SWAP1"
										},
										{
											"begin": 13187,
											"end": 13224,
											"name": "MLOAD"
										},
										{
											"begin": 13131,
											"end": 13162,
											"name": "SWAP1"
										},
										{
											"begin": 13131,
											"end": 13162,
											"name": "SWAP2"
										},
										{
											"begin": 13142,
											"end": 13152,
											"name": "SWAP1"
										},
										{
											"begin": 13187,
											"end": 13224,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 13187,
											"end": 13224,
											"name": "SWAP1"
										},
										{
											"begin": 13187,
											"end": 13224,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 13187,
											"end": 13224,
											"name": "SWAP1"
										},
										{
											"begin": 13131,
											"end": 13171,
											"name": "DUP6"
										},
										{
											"begin": 13131,
											"end": 13171,
											"name": "SWAP1"
										},
										{
											"begin": 13187,
											"end": 13224,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 13187,
											"end": 13224,
											"name": "JUMP"
										},
										{
											"begin": 13187,
											"end": 13224,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 13187,
											"end": 13224,
											"name": "JUMPDEST"
										},
										{
											"begin": 13187,
											"end": 13224,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13187,
											"end": 13224,
											"name": "MLOAD"
										},
										{
											"begin": 13187,
											"end": 13224,
											"name": "DUP1"
										},
										{
											"begin": 13187,
											"end": 13224,
											"name": "SWAP2"
										},
										{
											"begin": 13187,
											"end": 13224,
											"name": "SUB"
										},
										{
											"begin": 13187,
											"end": 13224,
											"name": "SWAP1"
										},
										{
											"begin": 13187,
											"end": 13224,
											"name": "LOG3"
										},
										{
											"begin": 13241,
											"end": 13245,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13234,
											"end": 13245,
											"name": "SWAP2"
										},
										{
											"begin": 13234,
											"end": 13245,
											"name": "POP"
										},
										{
											"begin": 13234,
											"end": 13245,
											"name": "POP"
										},
										{
											"begin": 12846,
											"end": 13252,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 12846,
											"end": 13252,
											"name": "JUMPDEST"
										},
										{
											"begin": 12846,
											"end": 13252,
											"name": "SWAP3"
										},
										{
											"begin": 12846,
											"end": 13252,
											"name": "SWAP2"
										},
										{
											"begin": 12846,
											"end": 13252,
											"name": "POP"
										},
										{
											"begin": 12846,
											"end": 13252,
											"name": "POP"
										},
										{
											"begin": 12846,
											"end": 13252,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6939,
											"end": 6981,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 6939,
											"end": 6981,
											"name": "JUMPDEST"
										},
										{
											"begin": 6939,
											"end": 6981,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6939,
											"end": 6981,
											"name": "SLOAD"
										},
										{
											"begin": 6939,
											"end": 6981,
											"name": "DUP2"
										},
										{
											"begin": 6939,
											"end": 6981,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8251,
											"end": 8373,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 8251,
											"end": 8373,
											"name": "JUMPDEST"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "MLOAD"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "SWAP1"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "JUMP"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "JUMPDEST"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "MLOAD"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "DUP1"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "SWAP2"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "SUB"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "SWAP1"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "KECCAK256"
										},
										{
											"begin": 8251,
											"end": 8373,
											"name": "DUP2"
										},
										{
											"begin": 8251,
											"end": 8373,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15853,
											"end": 16509,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 15853,
											"end": 16509,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16015,
											"end": 16030,
											"name": "DUP4"
										},
										{
											"begin": 16015,
											"end": 16030,
											"name": "AND"
										},
										{
											"begin": 15935,
											"end": 15939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16015,
											"end": 16030,
											"name": "SWAP1"
										},
										{
											"begin": 16015,
											"end": 16030,
											"name": "DUP2"
										},
										{
											"begin": 16015,
											"end": 16030,
											"name": "MSTORE"
										},
										{
											"begin": 16015,
											"end": 16025,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 16015,
											"end": 16030,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16015,
											"end": 16030,
											"name": "SWAP1"
										},
										{
											"begin": 16015,
											"end": 16030,
											"name": "DUP2"
										},
										{
											"begin": 16015,
											"end": 16030,
											"name": "MSTORE"
										},
										{
											"begin": 16015,
											"end": 16030,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16015,
											"end": 16030,
											"name": "DUP1"
										},
										{
											"begin": 16015,
											"end": 16030,
											"name": "DUP4"
										},
										{
											"begin": 16015,
											"end": 16030,
											"name": "KECCAK256"
										},
										{
											"begin": 15969,
											"end": 15979,
											"name": "CALLER"
										},
										{
											"begin": 16015,
											"end": 16039,
											"name": "DUP1"
										},
										{
											"begin": 16015,
											"end": 16039,
											"name": "DUP6"
										},
										{
											"begin": 16015,
											"end": 16039,
											"name": "MSTORE"
										},
										{
											"begin": 16015,
											"end": 16039,
											"name": "SWAP1"
										},
										{
											"begin": 16015,
											"end": 16039,
											"name": "DUP4"
										},
										{
											"begin": 16015,
											"end": 16039,
											"name": "MSTORE"
										},
										{
											"begin": 16015,
											"end": 16039,
											"name": "DUP2"
										},
										{
											"begin": 16015,
											"end": 16039,
											"name": "DUP5"
										},
										{
											"begin": 16015,
											"end": 16039,
											"name": "KECCAK256"
										},
										{
											"begin": 16015,
											"end": 16039,
											"name": "SLOAD"
										},
										{
											"begin": 16065,
											"end": 16122,
											"name": "DUP3"
										},
										{
											"begin": 16065,
											"end": 16122,
											"name": "MLOAD"
										},
										{
											"begin": 16065,
											"end": 16122,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 16065,
											"end": 16122,
											"name": "DUP2"
										},
										{
											"begin": 16065,
											"end": 16122,
											"name": "ADD"
										},
										{
											"begin": 16065,
											"end": 16122,
											"name": "SWAP1"
										},
										{
											"begin": 16065,
											"end": 16122,
											"name": "SWAP4"
										},
										{
											"begin": 16065,
											"end": 16122,
											"name": "MSTORE"
										},
										{
											"begin": 16065,
											"end": 16122,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 16065,
											"end": 16122,
											"name": "DUP1"
										},
										{
											"begin": 16065,
											"end": 16122,
											"name": "DUP5"
										},
										{
											"begin": 16065,
											"end": 16122,
											"name": "MSTORE"
										},
										{
											"begin": 15969,
											"end": 15979,
											"name": "SWAP2"
										},
										{
											"begin": 15969,
											"end": 15979,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16015,
											"end": 16039,
											"name": "SWAP1"
										},
										{
											"begin": 16015,
											"end": 16039,
											"name": "SWAP2"
										},
										{
											"begin": 16015,
											"end": 16039,
											"name": "AND"
										},
										{
											"begin": 16015,
											"end": 16039,
											"name": "SWAP3"
										},
										{
											"begin": 15935,
											"end": 15939,
											"name": "DUP6"
										},
										{
											"begin": 15935,
											"end": 15939,
											"name": "SWAP3"
										},
										{
											"begin": 16065,
											"end": 16122,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 16065,
											"end": 16122,
											"name": "SWAP3"
										},
										{
											"begin": 16072,
											"end": 16081,
											"name": "DUP9"
										},
										{
											"begin": 16072,
											"end": 16081,
											"name": "SWAP3"
										},
										{
											"begin": 16065,
											"end": 16122,
											"name": "SWAP2"
										},
										{
											"begin": 16065,
											"end": 16122,
											"name": "SWAP1"
										},
										{
											"begin": 16065,
											"end": 16122,
											"name": "PUSH data",
											"value": "CB3E128DA7F3F16C83A901CCE3AB145C66BAD45A0CD648091FECC9964EBF42FE"
										},
										{
											"begin": 16065,
											"end": 16122,
											"name": "SWAP1"
										},
										{
											"begin": 16065,
											"end": 16122,
											"name": "DUP4"
										},
										{
											"begin": 16065,
											"end": 16122,
											"name": "ADD"
										},
										{
											"begin": 16065,
											"end": 16122,
											"name": "CODECOPY"
										},
										{
											"begin": 16065,
											"end": 16071,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 16065,
											"end": 16122,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16065,
											"end": 16122,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 16065,
											"end": 16122,
											"name": "JUMPDEST"
										},
										{
											"begin": 16049,
											"end": 16122,
											"name": "SWAP1"
										},
										{
											"begin": 16049,
											"end": 16122,
											"name": "POP"
										},
										{
											"begin": 16148,
											"end": 16151,
											"name": "DUP7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16137,
											"end": 16151,
											"name": "AND"
										},
										{
											"begin": 16137,
											"end": 16144,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16137,
											"end": 16151,
											"name": "AND"
										},
										{
											"begin": 16137,
											"end": 16151,
											"name": "EQ"
										},
										{
											"begin": 16137,
											"end": 16151,
											"name": "ISZERO"
										},
										{
											"begin": 16137,
											"end": 16185,
											"name": "DUP1"
										},
										{
											"begin": 16137,
											"end": 16185,
											"name": "ISZERO"
										},
										{
											"begin": 16137,
											"end": 16185,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 16137,
											"end": 16185,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16155,
											"end": 16185,
											"name": "DUP3"
										},
										{
											"begin": 16155,
											"end": 16185,
											"name": "DUP2"
										},
										{
											"begin": 16155,
											"end": 16185,
											"name": "AND"
										},
										{
											"begin": 16155,
											"end": 16185,
											"name": "EQ"
										},
										{
											"begin": 16155,
											"end": 16185,
											"name": "ISZERO"
										},
										{
											"begin": 16137,
											"end": 16185,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 16137,
											"end": 16185,
											"name": "JUMPDEST"
										},
										{
											"begin": 16133,
											"end": 16438,
											"name": "ISZERO"
										},
										{
											"begin": 16133,
											"end": 16438,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 16133,
											"end": 16438,
											"name": "JUMPI"
										},
										{
											"begin": 16201,
											"end": 16220,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16223,
											"end": 16318,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 16229,
											"end": 16245,
											"name": "DUP4"
										},
										{
											"begin": 16247,
											"end": 16253,
											"name": "DUP4"
										},
										{
											"begin": 16223,
											"end": 16318,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16223,
											"end": 16318,
											"name": "MLOAD"
										},
										{
											"begin": 16223,
											"end": 16318,
											"name": "DUP1"
										},
										{
											"begin": 16223,
											"end": 16318,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 16223,
											"end": 16318,
											"name": "ADD"
										},
										{
											"begin": 16223,
											"end": 16318,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16223,
											"end": 16318,
											"name": "MSTORE"
										},
										{
											"begin": 16223,
											"end": 16318,
											"name": "DUP1"
										},
										{
											"begin": 16223,
											"end": 16318,
											"name": "PUSH",
											"value": "3C"
										},
										{
											"begin": 16223,
											"end": 16318,
											"name": "DUP2"
										},
										{
											"begin": 16223,
											"end": 16318,
											"name": "MSTORE"
										},
										{
											"begin": 16223,
											"end": 16318,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16223,
											"end": 16318,
											"name": "ADD"
										},
										{
											"begin": 16223,
											"end": 16318,
											"name": "PUSH data",
											"value": "136758788D48EC4D9744BA8C2136A9C9406D6C92CD4A81EFF0DE4942B636DB13"
										},
										{
											"begin": 16223,
											"end": 16318,
											"name": "PUSH",
											"value": "3C"
										},
										{
											"begin": 16223,
											"end": 16318,
											"name": "SWAP2"
										},
										{
											"begin": 16223,
											"end": 16318,
											"name": "CODECOPY"
										},
										{
											"begin": 16223,
											"end": 16228,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 16223,
											"end": 16318,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16223,
											"end": 16318,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 16223,
											"end": 16318,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16332,
											"end": 16347,
											"name": "DUP10"
										},
										{
											"begin": 16332,
											"end": 16347,
											"name": "DUP2"
										},
										{
											"begin": 16332,
											"end": 16347,
											"name": "AND"
										},
										{
											"begin": 16332,
											"end": 16347,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16332,
											"end": 16347,
											"name": "DUP2"
										},
										{
											"begin": 16332,
											"end": 16347,
											"name": "DUP2"
										},
										{
											"begin": 16332,
											"end": 16347,
											"name": "MSTORE"
										},
										{
											"begin": 16332,
											"end": 16342,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 16332,
											"end": 16347,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16332,
											"end": 16347,
											"name": "SWAP1"
										},
										{
											"begin": 16332,
											"end": 16347,
											"name": "DUP2"
										},
										{
											"begin": 16332,
											"end": 16347,
											"name": "MSTORE"
										},
										{
											"begin": 16332,
											"end": 16347,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16332,
											"end": 16347,
											"name": "DUP1"
										},
										{
											"begin": 16332,
											"end": 16347,
											"name": "DUP4"
										},
										{
											"begin": 16332,
											"end": 16347,
											"name": "KECCAK256"
										},
										{
											"begin": 16332,
											"end": 16356,
											"name": "SWAP5"
										},
										{
											"begin": 16332,
											"end": 16356,
											"name": "DUP11"
										},
										{
											"begin": 16332,
											"end": 16356,
											"name": "AND"
										},
										{
											"begin": 16332,
											"end": 16356,
											"name": "DUP1"
										},
										{
											"begin": 16332,
											"end": 16356,
											"name": "DUP5"
										},
										{
											"begin": 16332,
											"end": 16356,
											"name": "MSTORE"
										},
										{
											"begin": 16332,
											"end": 16356,
											"name": "SWAP5"
										},
										{
											"begin": 16332,
											"end": 16356,
											"name": "SWAP1"
										},
										{
											"begin": 16332,
											"end": 16356,
											"name": "SWAP2"
										},
										{
											"begin": 16332,
											"end": 16356,
											"name": "MSTORE"
										},
										{
											"begin": 16332,
											"end": 16356,
											"name": "SWAP1"
										},
										{
											"begin": 16332,
											"end": 16356,
											"name": "DUP2"
										},
										{
											"begin": 16332,
											"end": 16356,
											"name": "SWAP1"
										},
										{
											"begin": 16332,
											"end": 16356,
											"name": "KECCAK256"
										},
										{
											"begin": 16332,
											"end": 16371,
											"name": "DUP1"
										},
										{
											"begin": 16332,
											"end": 16371,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 16332,
											"end": 16371,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16332,
											"end": 16371,
											"name": "DUP7"
										},
										{
											"begin": 16332,
											"end": 16371,
											"name": "AND"
										},
										{
											"begin": 16332,
											"end": 16371,
											"name": "OR"
										},
										{
											"begin": 16332,
											"end": 16371,
											"name": "SWAP1"
										},
										{
											"begin": 16332,
											"end": 16371,
											"name": "SSTORE"
										},
										{
											"begin": 16391,
											"end": 16427,
											"name": "MLOAD"
										},
										{
											"begin": 16332,
											"end": 16371,
											"name": "SWAP3"
										},
										{
											"begin": 16332,
											"end": 16371,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 16332,
											"end": 16356,
											"name": "SWAP1"
										},
										{
											"begin": 16332,
											"end": 16356,
											"name": "SWAP2"
										},
										{
											"begin": 16391,
											"end": 16427,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 16391,
											"end": 16427,
											"name": "SWAP1"
										},
										{
											"begin": 16391,
											"end": 16427,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 16391,
											"end": 16427,
											"name": "SWAP1"
										},
										{
											"begin": 16332,
											"end": 16371,
											"name": "DUP6"
										},
										{
											"begin": 16332,
											"end": 16371,
											"name": "SWAP1"
										},
										{
											"begin": 16391,
											"end": 16427,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 16391,
											"end": 16427,
											"name": "JUMP"
										},
										{
											"begin": 16391,
											"end": 16427,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 16391,
											"end": 16427,
											"name": "JUMPDEST"
										},
										{
											"begin": 16391,
											"end": 16427,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16391,
											"end": 16427,
											"name": "MLOAD"
										},
										{
											"begin": 16391,
											"end": 16427,
											"name": "DUP1"
										},
										{
											"begin": 16391,
											"end": 16427,
											"name": "SWAP2"
										},
										{
											"begin": 16391,
											"end": 16427,
											"name": "SUB"
										},
										{
											"begin": 16391,
											"end": 16427,
											"name": "SWAP1"
										},
										{
											"begin": 16391,
											"end": 16427,
											"name": "LOG3"
										},
										{
											"begin": 16133,
											"end": 16438,
											"name": "POP"
										},
										{
											"begin": 16133,
											"end": 16438,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 16133,
											"end": 16438,
											"name": "JUMPDEST"
										},
										{
											"begin": 16448,
											"end": 16481,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 16464,
											"end": 16467,
											"name": "DUP8"
										},
										{
											"begin": 16469,
											"end": 16472,
											"name": "DUP8"
										},
										{
											"begin": 16474,
											"end": 16480,
											"name": "DUP4"
										},
										{
											"begin": 16448,
											"end": 16463,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 16448,
											"end": 16481,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16448,
											"end": 16481,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 16448,
											"end": 16481,
											"name": "JUMPDEST"
										},
										{
											"begin": 16498,
											"end": 16502,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16491,
											"end": 16502,
											"name": "SWAP4"
										},
										{
											"begin": 16491,
											"end": 16502,
											"name": "POP"
										},
										{
											"begin": 16491,
											"end": 16502,
											"name": "POP"
										},
										{
											"begin": 16491,
											"end": 16502,
											"name": "POP"
										},
										{
											"begin": 16491,
											"end": 16502,
											"name": "POP"
										},
										{
											"begin": 15853,
											"end": 16509,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 15853,
											"end": 16509,
											"name": "JUMPDEST"
										},
										{
											"begin": 15853,
											"end": 16509,
											"name": "SWAP4"
										},
										{
											"begin": 15853,
											"end": 16509,
											"name": "SWAP3"
										},
										{
											"begin": 15853,
											"end": 16509,
											"name": "POP"
										},
										{
											"begin": 15853,
											"end": 16509,
											"name": "POP"
										},
										{
											"begin": 15853,
											"end": 16509,
											"name": "POP"
										},
										{
											"begin": 15853,
											"end": 16509,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8668,
											"end": 8805,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 8668,
											"end": 8805,
											"name": "JUMPDEST"
										},
										{
											"begin": 8710,
											"end": 8805,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8710,
											"end": 8805,
											"name": "MLOAD"
										},
										{
											"begin": 8710,
											"end": 8805,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 8710,
											"end": 8805,
											"name": "SWAP1"
										},
										{
											"begin": 8710,
											"end": 8805,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 8710,
											"end": 8805,
											"name": "JUMP"
										},
										{
											"begin": 7143,
											"end": 7174,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 7143,
											"end": 7174,
											"name": "JUMPDEST"
										},
										{
											"begin": 7143,
											"end": 7174,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 7143,
											"end": 7174,
											"name": "SLOAD"
										},
										{
											"begin": 7143,
											"end": 7174,
											"name": "DUP2"
										},
										{
											"begin": 7143,
											"end": 7174,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "JUMPDEST"
										},
										{
											"begin": 6876,
											"end": 6878,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "DUP2"
										},
										{
											"begin": 6843,
											"end": 6878,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10909,
											"end": 11948,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 10909,
											"end": 11948,
											"name": "JUMPDEST"
										},
										{
											"begin": 10993,
											"end": 10999,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10993,
											"end": 10999,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10993,
											"end": 10999,
											"name": "AND"
										},
										{
											"begin": 10979,
											"end": 10989,
											"name": "CALLER"
										},
										{
											"begin": 10979,
											"end": 10999,
											"name": "EQ"
										},
										{
											"begin": 10971,
											"end": 11039,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 10971,
											"end": 11039,
											"name": "JUMPI"
										},
										{
											"begin": 10971,
											"end": 11039,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10971,
											"end": 11039,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 10971,
											"end": 11039,
											"name": "DUP2"
										},
										{
											"begin": 10971,
											"end": 11039,
											"name": "MSTORE"
										},
										{
											"begin": 10971,
											"end": 11039,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10971,
											"end": 11039,
											"name": "ADD"
										},
										{
											"begin": 10971,
											"end": 11039,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 10971,
											"end": 11039,
											"name": "SWAP1"
										},
										{
											"begin": 10971,
											"end": 11039,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 10971,
											"end": 11039,
											"name": "JUMP"
										},
										{
											"begin": 10971,
											"end": 11039,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 10971,
											"end": 11039,
											"name": "JUMPDEST"
										},
										{
											"begin": 10971,
											"end": 11039,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10971,
											"end": 11039,
											"name": "MLOAD"
										},
										{
											"begin": 10971,
											"end": 11039,
											"name": "DUP1"
										},
										{
											"begin": 10971,
											"end": 11039,
											"name": "SWAP2"
										},
										{
											"begin": 10971,
											"end": 11039,
											"name": "SUB"
										},
										{
											"begin": 10971,
											"end": 11039,
											"name": "SWAP1"
										},
										{
											"begin": 10971,
											"end": 11039,
											"name": "REVERT"
										},
										{
											"begin": 10971,
											"end": 11039,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 10971,
											"end": 11039,
											"name": "JUMPDEST"
										},
										{
											"begin": 11076,
											"end": 11095,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11076,
											"end": 11095,
											"name": "SLOAD"
										},
										{
											"begin": 11057,
											"end": 11072,
											"name": "TIMESTAMP"
										},
										{
											"begin": 11057,
											"end": 11095,
											"name": "LT"
										},
										{
											"begin": 11057,
											"end": 11095,
											"name": "ISZERO"
										},
										{
											"begin": 11049,
											"end": 11134,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 11049,
											"end": 11134,
											"name": "JUMPI"
										},
										{
											"begin": 11049,
											"end": 11134,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11049,
											"end": 11134,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 11049,
											"end": 11134,
											"name": "DUP2"
										},
										{
											"begin": 11049,
											"end": 11134,
											"name": "MSTORE"
										},
										{
											"begin": 11049,
											"end": 11134,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11049,
											"end": 11134,
											"name": "ADD"
										},
										{
											"begin": 11049,
											"end": 11134,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 11049,
											"end": 11134,
											"name": "SWAP1"
										},
										{
											"begin": 11049,
											"end": 11134,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 11049,
											"end": 11134,
											"name": "JUMP"
										},
										{
											"begin": 11049,
											"end": 11134,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 11049,
											"end": 11134,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11152,
											"end": 11169,
											"name": "DUP3"
										},
										{
											"begin": 11152,
											"end": 11169,
											"name": "AND"
										},
										{
											"begin": 11144,
											"end": 11220,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 11144,
											"end": 11220,
											"name": "JUMPI"
										},
										{
											"begin": 11144,
											"end": 11220,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11144,
											"end": 11220,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 11144,
											"end": 11220,
											"name": "DUP2"
										},
										{
											"begin": 11144,
											"end": 11220,
											"name": "MSTORE"
										},
										{
											"begin": 11144,
											"end": 11220,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11144,
											"end": 11220,
											"name": "ADD"
										},
										{
											"begin": 11144,
											"end": 11220,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 11144,
											"end": 11220,
											"name": "SWAP1"
										},
										{
											"begin": 11144,
											"end": 11220,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 11144,
											"end": 11220,
											"name": "JUMP"
										},
										{
											"begin": 11144,
											"end": 11220,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 11144,
											"end": 11220,
											"name": "JUMPDEST"
										},
										{
											"begin": 11280,
											"end": 11334,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 11293,
											"end": 11308,
											"name": "TIMESTAMP"
										},
										{
											"begin": 7273,
											"end": 7285,
											"name": "PUSH",
											"value": "1E13380"
										},
										{
											"begin": 11280,
											"end": 11292,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 11280,
											"end": 11334,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11280,
											"end": 11334,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 11280,
											"end": 11334,
											"name": "JUMPDEST"
										},
										{
											"begin": 11258,
											"end": 11277,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11258,
											"end": 11334,
											"name": "DUP2"
										},
										{
											"begin": 11258,
											"end": 11334,
											"name": "SWAP1"
										},
										{
											"begin": 11258,
											"end": 11334,
											"name": "SSTORE"
										},
										{
											"begin": 11258,
											"end": 11334,
											"name": "POP"
										},
										{
											"begin": 11372,
											"end": 11385,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11388,
											"end": 11442,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 11395,
											"end": 11404,
											"name": "DUP3"
										},
										{
											"begin": 11388,
											"end": 11442,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11388,
											"end": 11442,
											"name": "MLOAD"
										},
										{
											"begin": 11388,
											"end": 11442,
											"name": "DUP1"
										},
										{
											"begin": 11388,
											"end": 11442,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 11388,
											"end": 11442,
											"name": "ADD"
										},
										{
											"begin": 11388,
											"end": 11442,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11388,
											"end": 11442,
											"name": "MSTORE"
										},
										{
											"begin": 11388,
											"end": 11442,
											"name": "DUP1"
										},
										{
											"begin": 11388,
											"end": 11442,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 11388,
											"end": 11442,
											"name": "DUP2"
										},
										{
											"begin": 11388,
											"end": 11442,
											"name": "MSTORE"
										},
										{
											"begin": 11388,
											"end": 11442,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11388,
											"end": 11442,
											"name": "ADD"
										},
										{
											"begin": 11388,
											"end": 11442,
											"name": "PUSH data",
											"value": "BCB6733E7AC2AEE3C3602EE664D4B3CB251E429DF5C7E9148D412D0B60F07B16"
										},
										{
											"begin": 11388,
											"end": 11442,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 11388,
											"end": 11442,
											"name": "SWAP2"
										},
										{
											"begin": 11388,
											"end": 11442,
											"name": "CODECOPY"
										},
										{
											"begin": 11388,
											"end": 11394,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 11388,
											"end": 11442,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11388,
											"end": 11442,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 11388,
											"end": 11442,
											"name": "JUMPDEST"
										},
										{
											"begin": 11372,
											"end": 11442,
											"name": "SWAP1"
										},
										{
											"begin": 11372,
											"end": 11442,
											"name": "POP"
										},
										{
											"begin": 11470,
											"end": 11523,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 11483,
											"end": 11517,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 11496,
											"end": 11507,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11496,
											"end": 11507,
											"name": "SLOAD"
										},
										{
											"begin": 7409,
											"end": 7410,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11483,
											"end": 11517,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11483,
											"end": 11517,
											"name": "AND"
										},
										{
											"begin": 11483,
											"end": 11495,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 11483,
											"end": 11517,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11483,
											"end": 11517,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 11483,
											"end": 11517,
											"name": "JUMPDEST"
										},
										{
											"begin": 11519,
											"end": 11522,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 11470,
											"end": 11482,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 11470,
											"end": 11523,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11470,
											"end": 11523,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 11470,
											"end": 11523,
											"name": "JUMPDEST"
										},
										{
											"begin": 11460,
											"end": 11466,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11460,
											"end": 11523,
											"name": "AND"
										},
										{
											"begin": 11460,
											"end": 11523,
											"name": "GT"
										},
										{
											"begin": 11460,
											"end": 11523,
											"name": "ISZERO"
										},
										{
											"begin": 11452,
											"end": 11556,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 11452,
											"end": 11556,
											"name": "JUMPI"
										},
										{
											"begin": 11452,
											"end": 11556,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11452,
											"end": 11556,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 11452,
											"end": 11556,
											"name": "DUP2"
										},
										{
											"begin": 11452,
											"end": 11556,
											"name": "MSTORE"
										},
										{
											"begin": 11452,
											"end": 11556,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11452,
											"end": 11556,
											"name": "ADD"
										},
										{
											"begin": 11452,
											"end": 11556,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 11452,
											"end": 11556,
											"name": "SWAP1"
										},
										{
											"begin": 11452,
											"end": 11556,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 11452,
											"end": 11556,
											"name": "JUMP"
										},
										{
											"begin": 11452,
											"end": 11556,
											"name": "tag",
											"value": "181"
										},
										{
											"begin": 11452,
											"end": 11556,
											"name": "JUMPDEST"
										},
										{
											"begin": 11580,
											"end": 11663,
											"name": "PUSH [tag]",
											"value": "184"
										},
										{
											"begin": 11587,
											"end": 11620,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 11600,
											"end": 11611,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11600,
											"end": 11611,
											"name": "SLOAD"
										},
										{
											"begin": 11613,
											"end": 11619,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11587,
											"end": 11620,
											"name": "AND"
										},
										{
											"begin": 11587,
											"end": 11599,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 11587,
											"end": 11620,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11587,
											"end": 11620,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 11587,
											"end": 11620,
											"name": "JUMPDEST"
										},
										{
											"begin": 11580,
											"end": 11663,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11580,
											"end": 11663,
											"name": "MLOAD"
										},
										{
											"begin": 11580,
											"end": 11663,
											"name": "DUP1"
										},
										{
											"begin": 11580,
											"end": 11663,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 11580,
											"end": 11663,
											"name": "ADD"
										},
										{
											"begin": 11580,
											"end": 11663,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11580,
											"end": 11663,
											"name": "MSTORE"
										},
										{
											"begin": 11580,
											"end": 11663,
											"name": "DUP1"
										},
										{
											"begin": 11580,
											"end": 11663,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 11580,
											"end": 11663,
											"name": "DUP2"
										},
										{
											"begin": 11580,
											"end": 11663,
											"name": "MSTORE"
										},
										{
											"begin": 11580,
											"end": 11663,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11580,
											"end": 11663,
											"name": "ADD"
										},
										{
											"begin": 11580,
											"end": 11663,
											"name": "PUSH data",
											"value": "1EF2347F5DBB97E8EB7BC1442A128A1C6E65386B013257FE2B8AD95AAAA96AB8"
										},
										{
											"begin": 11580,
											"end": 11663,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 11580,
											"end": 11663,
											"name": "SWAP2"
										},
										{
											"begin": 11580,
											"end": 11663,
											"name": "CODECOPY"
										},
										{
											"begin": 11580,
											"end": 11586,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 11580,
											"end": 11663,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11580,
											"end": 11663,
											"name": "tag",
											"value": "184"
										},
										{
											"begin": 11580,
											"end": 11663,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11566,
											"end": 11663,
											"name": "SWAP1"
										},
										{
											"begin": 11566,
											"end": 11663,
											"name": "DUP2"
										},
										{
											"begin": 11566,
											"end": 11663,
											"name": "AND"
										},
										{
											"begin": 11566,
											"end": 11577,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11566,
											"end": 11663,
											"name": "SWAP1"
										},
										{
											"begin": 11566,
											"end": 11663,
											"name": "DUP2"
										},
										{
											"begin": 11566,
											"end": 11663,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11744,
											"end": 11757,
											"name": "DUP6"
										},
										{
											"begin": 11744,
											"end": 11757,
											"name": "AND"
										},
										{
											"begin": 11744,
											"end": 11757,
											"name": "DUP2"
										},
										{
											"begin": 11744,
											"end": 11757,
											"name": "MSTORE"
										},
										{
											"begin": 11744,
											"end": 11752,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11744,
											"end": 11757,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11744,
											"end": 11757,
											"name": "SWAP1"
										},
										{
											"begin": 11744,
											"end": 11757,
											"name": "DUP2"
										},
										{
											"begin": 11744,
											"end": 11757,
											"name": "MSTORE"
										},
										{
											"begin": 11744,
											"end": 11757,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11744,
											"end": 11757,
											"name": "SWAP2"
										},
										{
											"begin": 11744,
											"end": 11757,
											"name": "DUP3"
										},
										{
											"begin": 11744,
											"end": 11757,
											"name": "SWAP1"
										},
										{
											"begin": 11744,
											"end": 11757,
											"name": "KECCAK256"
										},
										{
											"begin": 11744,
											"end": 11757,
											"name": "SLOAD"
										},
										{
											"begin": 11738,
											"end": 11806,
											"name": "DUP3"
										},
										{
											"begin": 11738,
											"end": 11806,
											"name": "MLOAD"
										},
										{
											"begin": 11738,
											"end": 11806,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 11738,
											"end": 11806,
											"name": "DUP2"
										},
										{
											"begin": 11738,
											"end": 11806,
											"name": "ADD"
										},
										{
											"begin": 11738,
											"end": 11806,
											"name": "SWAP1"
										},
										{
											"begin": 11738,
											"end": 11806,
											"name": "SWAP4"
										},
										{
											"begin": 11738,
											"end": 11806,
											"name": "MSTORE"
										},
										{
											"begin": 11738,
											"end": 11806,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 11738,
											"end": 11806,
											"name": "DUP1"
										},
										{
											"begin": 11738,
											"end": 11806,
											"name": "DUP5"
										},
										{
											"begin": 11738,
											"end": 11806,
											"name": "MSTORE"
										},
										{
											"begin": 11738,
											"end": 11806,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 11738,
											"end": 11806,
											"name": "SWAP5"
										},
										{
											"begin": 11744,
											"end": 11757,
											"name": "SWAP2"
										},
										{
											"begin": 11744,
											"end": 11757,
											"name": "SWAP1"
										},
										{
											"begin": 11744,
											"end": 11757,
											"name": "SWAP2"
										},
										{
											"begin": 11744,
											"end": 11757,
											"name": "AND"
										},
										{
											"begin": 11744,
											"end": 11757,
											"name": "SWAP3"
										},
										{
											"begin": 11759,
											"end": 11765,
											"name": "DUP6"
										},
										{
											"begin": 11759,
											"end": 11765,
											"name": "SWAP3"
										},
										{
											"begin": 11738,
											"end": 11806,
											"name": "SWAP1"
										},
										{
											"begin": 11738,
											"end": 11806,
											"name": "SWAP2"
										},
										{
											"begin": 11738,
											"end": 11806,
											"name": "SWAP1"
										},
										{
											"begin": 11738,
											"end": 11806,
											"name": "PUSH data",
											"value": "AB5EAE08D50CC345C58C2D7D67F9034A98D0A88DD540314C408C39A8DCEC01D"
										},
										{
											"begin": 11738,
											"end": 11806,
											"name": "SWAP1"
										},
										{
											"begin": 11738,
											"end": 11806,
											"name": "DUP4"
										},
										{
											"begin": 11738,
											"end": 11806,
											"name": "ADD"
										},
										{
											"begin": 11738,
											"end": 11806,
											"name": "CODECOPY"
										},
										{
											"begin": 11738,
											"end": 11743,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 11738,
											"end": 11806,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11738,
											"end": 11806,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 11738,
											"end": 11806,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11722,
											"end": 11735,
											"name": "DUP5"
										},
										{
											"begin": 11722,
											"end": 11735,
											"name": "AND"
										},
										{
											"begin": 11722,
											"end": 11735,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11722,
											"end": 11735,
											"name": "DUP2"
										},
										{
											"begin": 11722,
											"end": 11735,
											"name": "DUP2"
										},
										{
											"begin": 11722,
											"end": 11735,
											"name": "MSTORE"
										},
										{
											"begin": 11722,
											"end": 11730,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11722,
											"end": 11735,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11722,
											"end": 11735,
											"name": "MSTORE"
										},
										{
											"begin": 11722,
											"end": 11735,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11722,
											"end": 11735,
											"name": "DUP1"
										},
										{
											"begin": 11722,
											"end": 11735,
											"name": "DUP3"
										},
										{
											"begin": 11722,
											"end": 11735,
											"name": "KECCAK256"
										},
										{
											"begin": 11722,
											"end": 11806,
											"name": "DUP1"
										},
										{
											"begin": 11722,
											"end": 11806,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 11722,
											"end": 11806,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11722,
											"end": 11806,
											"name": "SWAP6"
										},
										{
											"begin": 11722,
											"end": 11806,
											"name": "SWAP1"
										},
										{
											"begin": 11722,
											"end": 11806,
											"name": "SWAP6"
										},
										{
											"begin": 11722,
											"end": 11806,
											"name": "AND"
										},
										{
											"begin": 11722,
											"end": 11806,
											"name": "SWAP5"
										},
										{
											"begin": 11722,
											"end": 11806,
											"name": "SWAP1"
										},
										{
											"begin": 11722,
											"end": 11806,
											"name": "SWAP5"
										},
										{
											"begin": 11722,
											"end": 11806,
											"name": "OR"
										},
										{
											"begin": 11722,
											"end": 11806,
											"name": "SWAP1"
										},
										{
											"begin": 11722,
											"end": 11806,
											"name": "SWAP4"
										},
										{
											"begin": 11722,
											"end": 11806,
											"name": "SSTORE"
										},
										{
											"begin": 11821,
											"end": 11854,
											"name": "SWAP2"
										},
										{
											"begin": 11821,
											"end": 11854,
											"name": "MLOAD"
										},
										{
											"begin": 11722,
											"end": 11735,
											"name": "SWAP1"
										},
										{
											"begin": 11722,
											"end": 11735,
											"name": "SWAP2"
										},
										{
											"begin": 11722,
											"end": 11735,
											"name": "SWAP1"
										},
										{
											"begin": 11821,
											"end": 11854,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 11821,
											"end": 11854,
											"name": "SWAP1"
										},
										{
											"begin": 11821,
											"end": 11854,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 11821,
											"end": 11854,
											"name": "SWAP1"
										},
										{
											"begin": 11847,
											"end": 11853,
											"name": "DUP6"
										},
										{
											"begin": 11847,
											"end": 11853,
											"name": "SWAP1"
										},
										{
											"begin": 11821,
											"end": 11854,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 11821,
											"end": 11854,
											"name": "JUMP"
										},
										{
											"begin": 11821,
											"end": 11854,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 11821,
											"end": 11854,
											"name": "JUMPDEST"
										},
										{
											"begin": 11821,
											"end": 11854,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11821,
											"end": 11854,
											"name": "MLOAD"
										},
										{
											"begin": 11821,
											"end": 11854,
											"name": "DUP1"
										},
										{
											"begin": 11821,
											"end": 11854,
											"name": "SWAP2"
										},
										{
											"begin": 11821,
											"end": 11854,
											"name": "SUB"
										},
										{
											"begin": 11821,
											"end": 11854,
											"name": "SWAP1"
										},
										{
											"begin": 11821,
											"end": 11854,
											"name": "LOG3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11918,
											"end": 11932,
											"name": "DUP1"
										},
										{
											"begin": 11918,
											"end": 11932,
											"name": "DUP5"
										},
										{
											"begin": 11918,
											"end": 11932,
											"name": "AND"
										},
										{
											"begin": 11914,
											"end": 11915,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11918,
											"end": 11932,
											"name": "SWAP1"
										},
										{
											"begin": 11918,
											"end": 11932,
											"name": "DUP2"
										},
										{
											"begin": 11918,
											"end": 11932,
											"name": "MSTORE"
										},
										{
											"begin": 11918,
											"end": 11927,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 11918,
											"end": 11932,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11918,
											"end": 11932,
											"name": "MSTORE"
										},
										{
											"begin": 11918,
											"end": 11932,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11918,
											"end": 11932,
											"name": "DUP2"
										},
										{
											"begin": 11918,
											"end": 11932,
											"name": "KECCAK256"
										},
										{
											"begin": 11918,
											"end": 11932,
											"name": "SLOAD"
										},
										{
											"begin": 11891,
											"end": 11941,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 11891,
											"end": 11941,
											"name": "SWAP3"
										},
										{
											"begin": 11918,
											"end": 11932,
											"name": "AND"
										},
										{
											"begin": 11934,
											"end": 11940,
											"name": "DUP4"
										},
										{
											"begin": 11891,
											"end": 11905,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 11891,
											"end": 11941,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11891,
											"end": 11941,
											"name": "tag",
											"value": "189"
										},
										{
											"begin": 11891,
											"end": 11941,
											"name": "JUMPDEST"
										},
										{
											"begin": 10909,
											"end": 11948,
											"name": "POP"
										},
										{
											"begin": 10909,
											"end": 11948,
											"name": "POP"
										},
										{
											"begin": 10909,
											"end": 11948,
											"name": "POP"
										},
										{
											"begin": 10909,
											"end": 11948,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7716,
											"end": 7761,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 7716,
											"end": 7761,
											"name": "JUMPDEST"
										},
										{
											"begin": 7716,
											"end": 7761,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 7716,
											"end": 7761,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7716,
											"end": 7761,
											"name": "MSTORE"
										},
										{
											"begin": 7716,
											"end": 7761,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7716,
											"end": 7761,
											"name": "SWAP1"
										},
										{
											"begin": 7716,
											"end": 7761,
											"name": "DUP2"
										},
										{
											"begin": 7716,
											"end": 7761,
											"name": "MSTORE"
										},
										{
											"begin": 7716,
											"end": 7761,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7716,
											"end": 7761,
											"name": "SWAP1"
										},
										{
											"begin": 7716,
											"end": 7761,
											"name": "KECCAK256"
										},
										{
											"begin": 7716,
											"end": 7761,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7716,
											"end": 7761,
											"name": "AND"
										},
										{
											"begin": 7716,
											"end": 7761,
											"name": "DUP2"
										},
										{
											"begin": 7716,
											"end": 7761,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7224,
											"end": 7285,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 7224,
											"end": 7285,
											"name": "JUMPDEST"
										},
										{
											"begin": 7273,
											"end": 7285,
											"name": "PUSH",
											"value": "1E13380"
										},
										{
											"begin": 7224,
											"end": 7285,
											"name": "DUP2"
										},
										{
											"begin": 7224,
											"end": 7285,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16651,
											"end": 16751,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 16651,
											"end": 16751,
											"name": "JUMPDEST"
										},
										{
											"begin": 16712,
											"end": 16744,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 16722,
											"end": 16732,
											"name": "CALLER"
										},
										{
											"begin": 16734,
											"end": 16743,
											"name": "DUP3"
										},
										{
											"begin": 16712,
											"end": 16721,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 16712,
											"end": 16744,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16712,
											"end": 16744,
											"name": "tag",
											"value": "192"
										},
										{
											"begin": 16712,
											"end": 16744,
											"name": "JUMPDEST"
										},
										{
											"begin": 16651,
											"end": 16751,
											"name": "POP"
										},
										{
											"begin": 16651,
											"end": 16751,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8132,
											"end": 8181,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 8132,
											"end": 8181,
											"name": "JUMPDEST"
										},
										{
											"begin": 8132,
											"end": 8181,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 8132,
											"end": 8181,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8132,
											"end": 8181,
											"name": "MSTORE"
										},
										{
											"begin": 8132,
											"end": 8181,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8132,
											"end": 8181,
											"name": "SWAP1"
										},
										{
											"begin": 8132,
											"end": 8181,
											"name": "DUP2"
										},
										{
											"begin": 8132,
											"end": 8181,
											"name": "MSTORE"
										},
										{
											"begin": 8132,
											"end": 8181,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8132,
											"end": 8181,
											"name": "SWAP1"
										},
										{
											"begin": 8132,
											"end": 8181,
											"name": "KECCAK256"
										},
										{
											"begin": 8132,
											"end": 8181,
											"name": "SLOAD"
										},
										{
											"begin": 8132,
											"end": 8181,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8132,
											"end": 8181,
											"name": "AND"
										},
										{
											"begin": 8132,
											"end": 8181,
											"name": "DUP2"
										},
										{
											"begin": 8132,
											"end": 8181,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14957,
											"end": 15063,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 14957,
											"end": 15063,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 15039,
											"end": 15056,
											"name": "AND"
										},
										{
											"begin": 15016,
											"end": 15020,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15039,
											"end": 15056,
											"name": "SWAP1"
										},
										{
											"begin": 15039,
											"end": 15056,
											"name": "DUP2"
										},
										{
											"begin": 15039,
											"end": 15056,
											"name": "MSTORE"
										},
										{
											"begin": 15039,
											"end": 15047,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15039,
											"end": 15056,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15039,
											"end": 15056,
											"name": "MSTORE"
										},
										{
											"begin": 15039,
											"end": 15056,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15039,
											"end": 15056,
											"name": "SWAP1"
										},
										{
											"begin": 15039,
											"end": 15056,
											"name": "KECCAK256"
										},
										{
											"begin": 15039,
											"end": 15056,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 15039,
											"end": 15056,
											"name": "AND"
										},
										{
											"begin": 15039,
											"end": 15056,
											"name": "SWAP1"
										},
										{
											"begin": 14957,
											"end": 15063,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7377,
											"end": 7410,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 7377,
											"end": 7410,
											"name": "JUMPDEST"
										},
										{
											"begin": 7409,
											"end": 7410,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 7377,
											"end": 7410,
											"name": "DUP2"
										},
										{
											"begin": 7377,
											"end": 7410,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 18786,
											"end": 19971,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 18786,
											"end": 19971,
											"name": "JUMPDEST"
										},
										{
											"begin": 18865,
											"end": 18871,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18905,
											"end": 18917,
											"name": "NUMBER"
										},
										{
											"begin": 18891,
											"end": 18902,
											"name": "DUP3"
										},
										{
											"begin": 18891,
											"end": 18917,
											"name": "LT"
										},
										{
											"begin": 18883,
											"end": 18960,
											"name": "PUSH [tag]",
											"value": "196"
										},
										{
											"begin": 18883,
											"end": 18960,
											"name": "JUMPI"
										},
										{
											"begin": 18883,
											"end": 18960,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18883,
											"end": 18960,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 18883,
											"end": 18960,
											"name": "DUP2"
										},
										{
											"begin": 18883,
											"end": 18960,
											"name": "MSTORE"
										},
										{
											"begin": 18883,
											"end": 18960,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18883,
											"end": 18960,
											"name": "ADD"
										},
										{
											"begin": 18883,
											"end": 18960,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 18883,
											"end": 18960,
											"name": "SWAP1"
										},
										{
											"begin": 18883,
											"end": 18960,
											"name": "PUSH [tag]",
											"value": "198"
										},
										{
											"begin": 18883,
											"end": 18960,
											"name": "JUMP"
										},
										{
											"begin": 18883,
											"end": 18960,
											"name": "tag",
											"value": "196"
										},
										{
											"begin": 18883,
											"end": 18960,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18993,
											"end": 19016,
											"name": "DUP4"
										},
										{
											"begin": 18993,
											"end": 19016,
											"name": "AND"
										},
										{
											"begin": 18971,
											"end": 18990,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18993,
											"end": 19016,
											"name": "SWAP1"
										},
										{
											"begin": 18993,
											"end": 19016,
											"name": "DUP2"
										},
										{
											"begin": 18993,
											"end": 19016,
											"name": "MSTORE"
										},
										{
											"begin": 18993,
											"end": 19007,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 18993,
											"end": 19016,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18993,
											"end": 19016,
											"name": "MSTORE"
										},
										{
											"begin": 18993,
											"end": 19016,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18993,
											"end": 19016,
											"name": "SWAP1"
										},
										{
											"begin": 18993,
											"end": 19016,
											"name": "KECCAK256"
										},
										{
											"begin": 18993,
											"end": 19016,
											"name": "SLOAD"
										},
										{
											"begin": 18993,
											"end": 19016,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 18993,
											"end": 19016,
											"name": "AND"
										},
										{
											"begin": 19030,
											"end": 19047,
											"name": "DUP1"
										},
										{
											"begin": 19026,
											"end": 19082,
											"name": "PUSH [tag]",
											"value": "199"
										},
										{
											"begin": 19026,
											"end": 19082,
											"name": "JUMPI"
										},
										{
											"begin": 19070,
											"end": 19071,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19063,
											"end": 19071,
											"name": "SWAP2"
										},
										{
											"begin": 19063,
											"end": 19071,
											"name": "POP"
										},
										{
											"begin": 19063,
											"end": 19071,
											"name": "POP"
										},
										{
											"begin": 19063,
											"end": 19071,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 19063,
											"end": 19071,
											"name": "JUMP"
										},
										{
											"begin": 19026,
											"end": 19082,
											"name": "tag",
											"value": "199"
										},
										{
											"begin": 19026,
											"end": 19082,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 19139,
											"end": 19159,
											"name": "DUP5"
										},
										{
											"begin": 19139,
											"end": 19159,
											"name": "AND"
										},
										{
											"begin": 19139,
											"end": 19159,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19139,
											"end": 19159,
											"name": "SWAP1"
										},
										{
											"begin": 19139,
											"end": 19159,
											"name": "DUP2"
										},
										{
											"begin": 19139,
											"end": 19159,
											"name": "MSTORE"
										},
										{
											"begin": 19139,
											"end": 19150,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 19139,
											"end": 19159,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19139,
											"end": 19159,
											"name": "SWAP1"
										},
										{
											"begin": 19139,
											"end": 19159,
											"name": "DUP2"
										},
										{
											"begin": 19139,
											"end": 19159,
											"name": "MSTORE"
										},
										{
											"begin": 19139,
											"end": 19159,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19139,
											"end": 19159,
											"name": "DUP1"
										},
										{
											"begin": 19139,
											"end": 19159,
											"name": "DUP4"
										},
										{
											"begin": 19139,
											"end": 19159,
											"name": "KECCAK256"
										},
										{
											"begin": 19139,
											"end": 19177,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 19160,
											"end": 19176,
											"name": "DUP7"
										},
										{
											"begin": 19160,
											"end": 19176,
											"name": "ADD"
										},
										{
											"begin": 19139,
											"end": 19177,
											"name": "DUP2"
										},
										{
											"begin": 19139,
											"end": 19177,
											"name": "AND"
										},
										{
											"begin": 19139,
											"end": 19177,
											"name": "DUP6"
										},
										{
											"begin": 19139,
											"end": 19177,
											"name": "MSTORE"
										},
										{
											"begin": 19139,
											"end": 19177,
											"name": "SWAP3"
										},
										{
											"begin": 19139,
											"end": 19177,
											"name": "MSTORE"
										},
										{
											"begin": 19139,
											"end": 19177,
											"name": "SWAP1"
										},
										{
											"begin": 19139,
											"end": 19177,
											"name": "SWAP2"
										},
										{
											"begin": 19139,
											"end": 19177,
											"name": "KECCAK256"
										},
										{
											"begin": 19139,
											"end": 19187,
											"name": "SLOAD"
										},
										{
											"begin": 19139,
											"end": 19187,
											"name": "AND"
										},
										{
											"begin": 19139,
											"end": 19202,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT"
										},
										{
											"begin": 19135,
											"end": 19280,
											"name": "PUSH [tag]",
											"value": "200"
										},
										{
											"begin": 19135,
											"end": 19280,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 19225,
											"end": 19245,
											"name": "DUP5"
										},
										{
											"begin": 19225,
											"end": 19245,
											"name": "AND"
										},
										{
											"begin": 19225,
											"end": 19245,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19225,
											"end": 19245,
											"name": "SWAP1"
										},
										{
											"begin": 19225,
											"end": 19245,
											"name": "DUP2"
										},
										{
											"begin": 19225,
											"end": 19245,
											"name": "MSTORE"
										},
										{
											"begin": 19225,
											"end": 19236,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 19225,
											"end": 19245,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19225,
											"end": 19245,
											"name": "SWAP1"
										},
										{
											"begin": 19225,
											"end": 19245,
											"name": "DUP2"
										},
										{
											"begin": 19225,
											"end": 19245,
											"name": "MSTORE"
										},
										{
											"begin": 19225,
											"end": 19245,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19225,
											"end": 19245,
											"name": "DUP1"
										},
										{
											"begin": 19225,
											"end": 19245,
											"name": "DUP4"
										},
										{
											"begin": 19225,
											"end": 19245,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 19246,
											"end": 19262,
											"name": "SWAP5"
										},
										{
											"begin": 19246,
											"end": 19262,
											"name": "SWAP1"
										},
										{
											"begin": 19246,
											"end": 19262,
											"name": "SWAP5"
										},
										{
											"begin": 19246,
											"end": 19262,
											"name": "ADD"
										},
										{
											"begin": 19225,
											"end": 19263,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 19225,
											"end": 19263,
											"name": "AND"
										},
										{
											"begin": 19225,
											"end": 19263,
											"name": "DUP4"
										},
										{
											"begin": 19225,
											"end": 19263,
											"name": "MSTORE"
										},
										{
											"begin": 19225,
											"end": 19263,
											"name": "SWAP3"
										},
										{
											"begin": 19225,
											"end": 19263,
											"name": "SWAP1"
										},
										{
											"begin": 19225,
											"end": 19263,
											"name": "MSTORE"
										},
										{
											"begin": 19225,
											"end": 19263,
											"name": "KECCAK256"
										},
										{
											"begin": 19225,
											"end": 19269,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 19225,
											"end": 19269,
											"name": "SWAP1"
										},
										{
											"begin": 19225,
											"end": 19269,
											"name": "DIV"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 19225,
											"end": 19269,
											"name": "AND"
										},
										{
											"begin": 19225,
											"end": 19269,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 19218,
											"end": 19269,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 19218,
											"end": 19269,
											"name": "JUMP"
										},
										{
											"begin": 19135,
											"end": 19280,
											"name": "tag",
											"value": "200"
										},
										{
											"begin": 19135,
											"end": 19280,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 19338,
											"end": 19358,
											"name": "DUP5"
										},
										{
											"begin": 19338,
											"end": 19358,
											"name": "AND"
										},
										{
											"begin": 19338,
											"end": 19358,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19338,
											"end": 19358,
											"name": "SWAP1"
										},
										{
											"begin": 19338,
											"end": 19358,
											"name": "DUP2"
										},
										{
											"begin": 19338,
											"end": 19358,
											"name": "MSTORE"
										},
										{
											"begin": 19338,
											"end": 19349,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 19338,
											"end": 19358,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19338,
											"end": 19358,
											"name": "SWAP1"
										},
										{
											"begin": 19338,
											"end": 19358,
											"name": "DUP2"
										},
										{
											"begin": 19338,
											"end": 19358,
											"name": "MSTORE"
										},
										{
											"begin": 19338,
											"end": 19358,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19338,
											"end": 19358,
											"name": "DUP1"
										},
										{
											"begin": 19338,
											"end": 19358,
											"name": "DUP4"
										},
										{
											"begin": 19338,
											"end": 19358,
											"name": "KECCAK256"
										},
										{
											"begin": 19338,
											"end": 19361,
											"name": "DUP4"
										},
										{
											"begin": 19338,
											"end": 19361,
											"name": "DUP1"
										},
										{
											"begin": 19338,
											"end": 19361,
											"name": "MSTORE"
										},
										{
											"begin": 19338,
											"end": 19361,
											"name": "SWAP1"
										},
										{
											"begin": 19338,
											"end": 19361,
											"name": "SWAP2"
										},
										{
											"begin": 19338,
											"end": 19361,
											"name": "MSTORE"
										},
										{
											"begin": 19338,
											"end": 19361,
											"name": "SWAP1"
										},
										{
											"begin": 19338,
											"end": 19361,
											"name": "KECCAK256"
										},
										{
											"begin": 19338,
											"end": 19371,
											"name": "SLOAD"
										},
										{
											"begin": 19338,
											"end": 19361,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 19338,
											"end": 19371,
											"name": "AND"
										},
										{
											"begin": 19338,
											"end": 19385,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT"
										},
										{
											"begin": 19334,
											"end": 19420,
											"name": "ISZERO"
										},
										{
											"begin": 19334,
											"end": 19420,
											"name": "PUSH [tag]",
											"value": "201"
										},
										{
											"begin": 19334,
											"end": 19420,
											"name": "JUMPI"
										},
										{
											"begin": 19408,
											"end": 19409,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19401,
											"end": 19409,
											"name": "SWAP2"
										},
										{
											"begin": 19401,
											"end": 19409,
											"name": "POP"
										},
										{
											"begin": 19401,
											"end": 19409,
											"name": "POP"
										},
										{
											"begin": 19401,
											"end": 19409,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 19401,
											"end": 19409,
											"name": "JUMP"
										},
										{
											"begin": 19334,
											"end": 19420,
											"name": "tag",
											"value": "201"
										},
										{
											"begin": 19334,
											"end": 19420,
											"name": "JUMPDEST"
										},
										{
											"begin": 19430,
											"end": 19442,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 19471,
											"end": 19487,
											"name": "DUP3"
										},
										{
											"begin": 19471,
											"end": 19487,
											"name": "ADD"
										},
										{
											"begin": 19497,
											"end": 19915,
											"name": "tag",
											"value": "202"
										},
										{
											"begin": 19497,
											"end": 19915,
											"name": "JUMPDEST"
										},
										{
											"begin": 19512,
											"end": 19517,
											"name": "DUP2"
										},
										{
											"begin": 19504,
											"end": 19517,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 19504,
											"end": 19517,
											"name": "AND"
										},
										{
											"begin": 19504,
											"end": 19509,
											"name": "DUP2"
										},
										{
											"begin": 19504,
											"end": 19517,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 19504,
											"end": 19517,
											"name": "AND"
										},
										{
											"begin": 19504,
											"end": 19517,
											"name": "GT"
										},
										{
											"begin": 19497,
											"end": 19915,
											"name": "ISZERO"
										},
										{
											"begin": 19497,
											"end": 19915,
											"name": "PUSH [tag]",
											"value": "203"
										},
										{
											"begin": 19497,
											"end": 19915,
											"name": "JUMPI"
										},
										{
											"begin": 19575,
											"end": 19576,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 19558,
											"end": 19571,
											"name": "DUP3"
										},
										{
											"begin": 19558,
											"end": 19571,
											"name": "DUP3"
										},
										{
											"begin": 19558,
											"end": 19571,
											"name": "SUB"
										},
										{
											"begin": 19557,
											"end": 19576,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 19557,
											"end": 19576,
											"name": "AND"
										},
										{
											"begin": 19557,
											"end": 19576,
											"name": "DIV"
										},
										{
											"begin": 19549,
											"end": 19576,
											"name": "DUP2"
										},
										{
											"begin": 19549,
											"end": 19576,
											"name": "SUB"
										},
										{
											"begin": 19617,
											"end": 19637,
											"name": "PUSH [tag]",
											"value": "205"
										},
										{
											"begin": 19617,
											"end": 19637,
											"name": "PUSH [tag]",
											"value": "206"
										},
										{
											"begin": 19617,
											"end": 19637,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19617,
											"end": 19637,
											"name": "tag",
											"value": "205"
										},
										{
											"begin": 19617,
											"end": 19637,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 19640,
											"end": 19660,
											"name": "DUP8"
										},
										{
											"begin": 19640,
											"end": 19660,
											"name": "AND"
										},
										{
											"begin": 19640,
											"end": 19660,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19640,
											"end": 19660,
											"name": "SWAP1"
										},
										{
											"begin": 19640,
											"end": 19660,
											"name": "DUP2"
										},
										{
											"begin": 19640,
											"end": 19660,
											"name": "MSTORE"
										},
										{
											"begin": 19640,
											"end": 19651,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 19640,
											"end": 19660,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19640,
											"end": 19660,
											"name": "SWAP1"
										},
										{
											"begin": 19640,
											"end": 19660,
											"name": "DUP2"
										},
										{
											"begin": 19640,
											"end": 19660,
											"name": "MSTORE"
										},
										{
											"begin": 19640,
											"end": 19660,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19640,
											"end": 19660,
											"name": "DUP1"
										},
										{
											"begin": 19640,
											"end": 19660,
											"name": "DUP4"
										},
										{
											"begin": 19640,
											"end": 19660,
											"name": "KECCAK256"
										},
										{
											"begin": 19640,
											"end": 19668,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 19640,
											"end": 19668,
											"name": "DUP6"
										},
										{
											"begin": 19640,
											"end": 19668,
											"name": "DUP2"
										},
										{
											"begin": 19640,
											"end": 19668,
											"name": "AND"
										},
										{
											"begin": 19640,
											"end": 19668,
											"name": "DUP6"
										},
										{
											"begin": 19640,
											"end": 19668,
											"name": "MSTORE"
										},
										{
											"begin": 19640,
											"end": 19668,
											"name": "SWAP1"
										},
										{
											"begin": 19640,
											"end": 19668,
											"name": "DUP4"
										},
										{
											"begin": 19640,
											"end": 19668,
											"name": "MSTORE"
										},
										{
											"begin": 19640,
											"end": 19668,
											"name": "SWAP3"
										},
										{
											"begin": 19640,
											"end": 19668,
											"name": "DUP2"
										},
										{
											"begin": 19640,
											"end": 19668,
											"name": "SWAP1"
										},
										{
											"begin": 19640,
											"end": 19668,
											"name": "KECCAK256"
										},
										{
											"begin": 19617,
											"end": 19668,
											"name": "DUP2"
										},
										{
											"begin": 19617,
											"end": 19668,
											"name": "MLOAD"
										},
										{
											"begin": 19617,
											"end": 19668,
											"name": "DUP1"
										},
										{
											"begin": 19617,
											"end": 19668,
											"name": "DUP4"
										},
										{
											"begin": 19617,
											"end": 19668,
											"name": "ADD"
										},
										{
											"begin": 19617,
											"end": 19668,
											"name": "SWAP1"
										},
										{
											"begin": 19617,
											"end": 19668,
											"name": "SWAP3"
										},
										{
											"begin": 19617,
											"end": 19668,
											"name": "MSTORE"
										},
										{
											"begin": 19617,
											"end": 19668,
											"name": "SLOAD"
										},
										{
											"begin": 19617,
											"end": 19668,
											"name": "SWAP3"
										},
										{
											"begin": 19617,
											"end": 19668,
											"name": "DUP4"
										},
										{
											"begin": 19617,
											"end": 19668,
											"name": "AND"
										},
										{
											"begin": 19617,
											"end": 19668,
											"name": "DUP1"
										},
										{
											"begin": 19617,
											"end": 19668,
											"name": "DUP3"
										},
										{
											"begin": 19617,
											"end": 19668,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 19617,
											"end": 19668,
											"name": "SWAP1"
										},
										{
											"begin": 19617,
											"end": 19668,
											"name": "SWAP4"
										},
										{
											"begin": 19617,
											"end": 19668,
											"name": "DIV"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 19617,
											"end": 19668,
											"name": "AND"
										},
										{
											"begin": 19617,
											"end": 19668,
											"name": "SWAP2"
										},
										{
											"begin": 19617,
											"end": 19668,
											"name": "DUP2"
										},
										{
											"begin": 19617,
											"end": 19668,
											"name": "ADD"
										},
										{
											"begin": 19617,
											"end": 19668,
											"name": "SWAP2"
										},
										{
											"begin": 19617,
											"end": 19668,
											"name": "SWAP1"
										},
										{
											"begin": 19617,
											"end": 19668,
											"name": "SWAP2"
										},
										{
											"begin": 19617,
											"end": 19668,
											"name": "MSTORE"
										},
										{
											"begin": 19617,
											"end": 19668,
											"name": "SWAP1"
										},
										{
											"begin": 19686,
											"end": 19713,
											"name": "DUP8"
										},
										{
											"begin": 19686,
											"end": 19713,
											"name": "EQ"
										},
										{
											"begin": 19682,
											"end": 19905,
											"name": "ISZERO"
										},
										{
											"begin": 19682,
											"end": 19905,
											"name": "PUSH [tag]",
											"value": "207"
										},
										{
											"begin": 19682,
											"end": 19905,
											"name": "JUMPI"
										},
										{
											"begin": 19740,
											"end": 19748,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19740,
											"end": 19748,
											"name": "ADD"
										},
										{
											"begin": 19740,
											"end": 19748,
											"name": "MLOAD"
										},
										{
											"begin": 19740,
											"end": 19748,
											"name": "SWAP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 19733,
											"end": 19748,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 19733,
											"end": 19748,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 19733,
											"end": 19748,
											"name": "JUMP"
										},
										{
											"begin": 19682,
											"end": 19905,
											"name": "tag",
											"value": "207"
										},
										{
											"begin": 19682,
											"end": 19905,
											"name": "JUMPDEST"
										},
										{
											"begin": 19773,
											"end": 19785,
											"name": "DUP1"
										},
										{
											"begin": 19773,
											"end": 19785,
											"name": "MLOAD"
										},
										{
											"begin": 19773,
											"end": 19799,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 19773,
											"end": 19799,
											"name": "AND"
										},
										{
											"begin": 19773,
											"end": 19799,
											"name": "DUP8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT"
										},
										{
											"begin": 19769,
											"end": 19905,
											"name": "ISZERO"
										},
										{
											"begin": 19769,
											"end": 19905,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 19769,
											"end": 19905,
											"name": "JUMPI"
										},
										{
											"begin": 19827,
											"end": 19833,
											"name": "DUP2"
										},
										{
											"begin": 19819,
											"end": 19833,
											"name": "SWAP4"
										},
										{
											"begin": 19819,
											"end": 19833,
											"name": "POP"
										},
										{
											"begin": 19769,
											"end": 19905,
											"name": "PUSH [tag]",
											"value": "210"
										},
										{
											"begin": 19769,
											"end": 19905,
											"name": "JUMP"
										},
										{
											"begin": 19769,
											"end": 19905,
											"name": "tag",
											"value": "209"
										},
										{
											"begin": 19769,
											"end": 19905,
											"name": "JUMPDEST"
										},
										{
											"begin": 19889,
											"end": 19890,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19880,
											"end": 19886,
											"name": "DUP3"
										},
										{
											"begin": 19880,
											"end": 19890,
											"name": "SUB"
										},
										{
											"begin": 19872,
											"end": 19890,
											"name": "SWAP3"
										},
										{
											"begin": 19872,
											"end": 19890,
											"name": "POP"
										},
										{
											"begin": 19769,
											"end": 19905,
											"name": "tag",
											"value": "210"
										},
										{
											"begin": 19769,
											"end": 19905,
											"name": "JUMPDEST"
										},
										{
											"begin": 19497,
											"end": 19915,
											"name": "POP"
										},
										{
											"begin": 19497,
											"end": 19915,
											"name": "POP"
										},
										{
											"begin": 19497,
											"end": 19915,
											"name": "PUSH [tag]",
											"value": "202"
										},
										{
											"begin": 19497,
											"end": 19915,
											"name": "JUMP"
										},
										{
											"begin": 19497,
											"end": 19915,
											"name": "tag",
											"value": "203"
										},
										{
											"begin": 19497,
											"end": 19915,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 19931,
											"end": 19951,
											"name": "DUP6"
										},
										{
											"begin": 19931,
											"end": 19951,
											"name": "AND"
										},
										{
											"begin": 19931,
											"end": 19951,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19931,
											"end": 19951,
											"name": "SWAP1"
										},
										{
											"begin": 19931,
											"end": 19951,
											"name": "DUP2"
										},
										{
											"begin": 19931,
											"end": 19951,
											"name": "MSTORE"
										},
										{
											"begin": 19931,
											"end": 19942,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 19931,
											"end": 19951,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19931,
											"end": 19951,
											"name": "SWAP1"
										},
										{
											"begin": 19931,
											"end": 19951,
											"name": "DUP2"
										},
										{
											"begin": 19931,
											"end": 19951,
											"name": "MSTORE"
										},
										{
											"begin": 19931,
											"end": 19951,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19931,
											"end": 19951,
											"name": "DUP1"
										},
										{
											"begin": 19931,
											"end": 19951,
											"name": "DUP4"
										},
										{
											"begin": 19931,
											"end": 19951,
											"name": "KECCAK256"
										},
										{
											"begin": 19931,
											"end": 19958,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 19931,
											"end": 19958,
											"name": "SWAP1"
										},
										{
											"begin": 19931,
											"end": 19958,
											"name": "SWAP5"
										},
										{
											"begin": 19931,
											"end": 19958,
											"name": "AND"
										},
										{
											"begin": 19931,
											"end": 19958,
											"name": "DUP4"
										},
										{
											"begin": 19931,
											"end": 19958,
											"name": "MSTORE"
										},
										{
											"begin": 19931,
											"end": 19958,
											"name": "SWAP3"
										},
										{
											"begin": 19931,
											"end": 19958,
											"name": "SWAP1"
										},
										{
											"begin": 19931,
											"end": 19958,
											"name": "MSTORE"
										},
										{
											"begin": 19931,
											"end": 19958,
											"name": "KECCAK256"
										},
										{
											"begin": 19931,
											"end": 19964,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 19931,
											"end": 19964,
											"name": "SWAP1"
										},
										{
											"begin": 19931,
											"end": 19964,
											"name": "SWAP2"
										},
										{
											"begin": 19931,
											"end": 19964,
											"name": "DIV"
										},
										{
											"begin": 19931,
											"end": 19964,
											"name": "AND"
										},
										{
											"begin": 19931,
											"end": 19964,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 18786,
											"end": 19971,
											"name": "SWAP3"
										},
										{
											"begin": 18786,
											"end": 19971,
											"name": "SWAP2"
										},
										{
											"begin": 18786,
											"end": 19971,
											"name": "POP"
										},
										{
											"begin": 18786,
											"end": 19971,
											"name": "POP"
										},
										{
											"begin": 18786,
											"end": 19971,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8883,
											"end": 8922,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 8883,
											"end": 8922,
											"name": "JUMPDEST"
										},
										{
											"begin": 8883,
											"end": 8922,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 8883,
											"end": 8922,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8883,
											"end": 8922,
											"name": "MSTORE"
										},
										{
											"begin": 8883,
											"end": 8922,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8883,
											"end": 8922,
											"name": "SWAP1"
										},
										{
											"begin": 8883,
											"end": 8922,
											"name": "DUP2"
										},
										{
											"begin": 8883,
											"end": 8922,
											"name": "MSTORE"
										},
										{
											"begin": 8883,
											"end": 8922,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8883,
											"end": 8922,
											"name": "SWAP1"
										},
										{
											"begin": 8883,
											"end": 8922,
											"name": "KECCAK256"
										},
										{
											"begin": 8883,
											"end": 8922,
											"name": "SLOAD"
										},
										{
											"begin": 8883,
											"end": 8922,
											"name": "DUP2"
										},
										{
											"begin": 8883,
											"end": 8922,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6746,
											"end": 6783,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 6746,
											"end": 6783,
											"name": "JUMPDEST"
										},
										{
											"begin": 6746,
											"end": 6783,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6746,
											"end": 6783,
											"name": "MLOAD"
										},
										{
											"begin": 6746,
											"end": 6783,
											"name": "DUP1"
										},
										{
											"begin": 6746,
											"end": 6783,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6746,
											"end": 6783,
											"name": "ADD"
										},
										{
											"begin": 6746,
											"end": 6783,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6746,
											"end": 6783,
											"name": "MSTORE"
										},
										{
											"begin": 6746,
											"end": 6783,
											"name": "DUP1"
										},
										{
											"begin": 6746,
											"end": 6783,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 6746,
											"end": 6783,
											"name": "DUP2"
										},
										{
											"begin": 6746,
											"end": 6783,
											"name": "MSTORE"
										},
										{
											"begin": 6746,
											"end": 6783,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6746,
											"end": 6783,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "554E49"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 6746,
											"end": 6783,
											"name": "DUP2"
										},
										{
											"begin": 6746,
											"end": 6783,
											"name": "MSTORE"
										},
										{
											"begin": 6746,
											"end": 6783,
											"name": "POP"
										},
										{
											"begin": 6746,
											"end": 6783,
											"name": "DUP2"
										},
										{
											"begin": 6746,
											"end": 6783,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15319,
											"end": 15552,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 15319,
											"end": 15552,
											"name": "JUMPDEST"
										},
										{
											"begin": 15384,
											"end": 15388,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15400,
											"end": 15413,
											"name": "DUP1"
										},
										{
											"begin": 15416,
											"end": 15474,
											"name": "PUSH [tag]",
											"value": "212"
										},
										{
											"begin": 15423,
											"end": 15432,
											"name": "DUP4"
										},
										{
											"begin": 15416,
											"end": 15474,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15416,
											"end": 15474,
											"name": "MLOAD"
										},
										{
											"begin": 15416,
											"end": 15474,
											"name": "DUP1"
										},
										{
											"begin": 15416,
											"end": 15474,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 15416,
											"end": 15474,
											"name": "ADD"
										},
										{
											"begin": 15416,
											"end": 15474,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15416,
											"end": 15474,
											"name": "MSTORE"
										},
										{
											"begin": 15416,
											"end": 15474,
											"name": "DUP1"
										},
										{
											"begin": 15416,
											"end": 15474,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 15416,
											"end": 15474,
											"name": "DUP2"
										},
										{
											"begin": 15416,
											"end": 15474,
											"name": "MSTORE"
										},
										{
											"begin": 15416,
											"end": 15474,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15416,
											"end": 15474,
											"name": "ADD"
										},
										{
											"begin": 15416,
											"end": 15474,
											"name": "PUSH data",
											"value": "9BC67DB7413F33B8F7A9995149809B7B3A4A83B5BA884084BEA06CFB35986555"
										},
										{
											"begin": 15416,
											"end": 15474,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 15416,
											"end": 15474,
											"name": "SWAP2"
										},
										{
											"begin": 15416,
											"end": 15474,
											"name": "CODECOPY"
										},
										{
											"begin": 15416,
											"end": 15422,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 15416,
											"end": 15474,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15416,
											"end": 15474,
											"name": "tag",
											"value": "212"
										},
										{
											"begin": 15416,
											"end": 15474,
											"name": "JUMPDEST"
										},
										{
											"begin": 15400,
											"end": 15474,
											"name": "SWAP1"
										},
										{
											"begin": 15400,
											"end": 15474,
											"name": "POP"
										},
										{
											"begin": 15484,
											"end": 15524,
											"name": "PUSH [tag]",
											"value": "213"
										},
										{
											"begin": 15500,
											"end": 15510,
											"name": "CALLER"
										},
										{
											"begin": 15512,
											"end": 15515,
											"name": "DUP6"
										},
										{
											"begin": 15517,
											"end": 15523,
											"name": "DUP4"
										},
										{
											"begin": 15484,
											"end": 15499,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 15484,
											"end": 15524,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15484,
											"end": 15524,
											"name": "tag",
											"value": "213"
										},
										{
											"begin": 15484,
											"end": 15524,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 15541,
											"end": 15545,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15541,
											"end": 15545,
											"name": "SWAP4"
										},
										{
											"begin": 15319,
											"end": 15552,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 15319,
											"end": 15552,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 18145,
											"end": 18364,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 18145,
											"end": 18364,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18250,
											"end": 18273,
											"name": "DUP2"
										},
										{
											"begin": 18250,
											"end": 18273,
											"name": "AND"
										},
										{
											"begin": 18210,
											"end": 18216,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18250,
											"end": 18273,
											"name": "SWAP1"
										},
										{
											"begin": 18250,
											"end": 18273,
											"name": "DUP2"
										},
										{
											"begin": 18250,
											"end": 18273,
											"name": "MSTORE"
										},
										{
											"begin": 18250,
											"end": 18264,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 18250,
											"end": 18273,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18250,
											"end": 18273,
											"name": "MSTORE"
										},
										{
											"begin": 18250,
											"end": 18273,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18250,
											"end": 18273,
											"name": "DUP2"
										},
										{
											"begin": 18250,
											"end": 18273,
											"name": "KECCAK256"
										},
										{
											"begin": 18250,
											"end": 18273,
											"name": "SLOAD"
										},
										{
											"begin": 18250,
											"end": 18273,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 18250,
											"end": 18273,
											"name": "AND"
										},
										{
											"begin": 18290,
											"end": 18306,
											"name": "DUP1"
										},
										{
											"begin": 18290,
											"end": 18357,
											"name": "PUSH [tag]",
											"value": "215"
										},
										{
											"begin": 18290,
											"end": 18357,
											"name": "JUMPI"
										},
										{
											"begin": 18356,
											"end": 18357,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18290,
											"end": 18357,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 18290,
											"end": 18357,
											"name": "JUMP"
										},
										{
											"begin": 18290,
											"end": 18357,
											"name": "tag",
											"value": "215"
										},
										{
											"begin": 18290,
											"end": 18357,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18309,
											"end": 18329,
											"name": "DUP4"
										},
										{
											"begin": 18309,
											"end": 18329,
											"name": "AND"
										},
										{
											"begin": 18309,
											"end": 18329,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18309,
											"end": 18329,
											"name": "SWAP1"
										},
										{
											"begin": 18309,
											"end": 18329,
											"name": "DUP2"
										},
										{
											"begin": 18309,
											"end": 18329,
											"name": "MSTORE"
										},
										{
											"begin": 18309,
											"end": 18320,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 18309,
											"end": 18329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18309,
											"end": 18329,
											"name": "SWAP1"
										},
										{
											"begin": 18309,
											"end": 18329,
											"name": "DUP2"
										},
										{
											"begin": 18309,
											"end": 18329,
											"name": "MSTORE"
										},
										{
											"begin": 18309,
											"end": 18329,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18309,
											"end": 18329,
											"name": "DUP1"
										},
										{
											"begin": 18309,
											"end": 18329,
											"name": "DUP4"
										},
										{
											"begin": 18309,
											"end": 18329,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 18330,
											"end": 18346,
											"name": "DUP6"
										},
										{
											"begin": 18330,
											"end": 18346,
											"name": "ADD"
										},
										{
											"begin": 18309,
											"end": 18347,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 18309,
											"end": 18347,
											"name": "AND"
										},
										{
											"begin": 18309,
											"end": 18347,
											"name": "DUP5"
										},
										{
											"begin": 18309,
											"end": 18347,
											"name": "MSTORE"
										},
										{
											"begin": 18309,
											"end": 18347,
											"name": "SWAP1"
										},
										{
											"begin": 18309,
											"end": 18347,
											"name": "SWAP2"
										},
										{
											"begin": 18309,
											"end": 18347,
											"name": "MSTORE"
										},
										{
											"begin": 18309,
											"end": 18347,
											"name": "SWAP1"
										},
										{
											"begin": 18309,
											"end": 18347,
											"name": "KECCAK256"
										},
										{
											"begin": 18309,
											"end": 18353,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 18309,
											"end": 18353,
											"name": "SWAP1"
										},
										{
											"begin": 18309,
											"end": 18353,
											"name": "DIV"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18309,
											"end": 18353,
											"name": "AND"
										},
										{
											"begin": 18283,
											"end": 18357,
											"name": "SWAP4"
										},
										{
											"begin": 18145,
											"end": 18364,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 18145,
											"end": 18364,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17174,
											"end": 17951,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 17174,
											"end": 17951,
											"name": "JUMPDEST"
										},
										{
											"begin": 17289,
											"end": 17312,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "MLOAD"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "PUSH [tag]",
											"value": "218"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "SWAP1"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "JUMP"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "tag",
											"value": "218"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "JUMPDEST"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "DUP1"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "MLOAD"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "SWAP2"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "DUP3"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "SWAP1"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "SUB"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "DUP3"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "KECCAK256"
										},
										{
											"begin": 17369,
											"end": 17373,
											"name": "DUP3"
										},
										{
											"begin": 17369,
											"end": 17373,
											"name": "DUP3"
										},
										{
											"begin": 17369,
											"end": 17373,
											"name": "ADD"
										},
										{
											"begin": 17369,
											"end": 17373,
											"name": "SWAP1"
										},
										{
											"begin": 17369,
											"end": 17373,
											"name": "SWAP2"
										},
										{
											"begin": 17369,
											"end": 17373,
											"name": "MSTORE"
										},
										{
											"begin": 17369,
											"end": 17373,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 17369,
											"end": 17373,
											"name": "DUP3"
										},
										{
											"begin": 17369,
											"end": 17373,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "556E697377617"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "CC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 17369,
											"end": 17373,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17369,
											"end": 17373,
											"name": "SWAP1"
										},
										{
											"begin": 17369,
											"end": 17373,
											"name": "SWAP3"
										},
										{
											"begin": 17369,
											"end": 17373,
											"name": "ADD"
										},
										{
											"begin": 17369,
											"end": 17373,
											"name": "SWAP2"
										},
										{
											"begin": 17369,
											"end": 17373,
											"name": "SWAP1"
										},
										{
											"begin": 17369,
											"end": 17373,
											"name": "SWAP2"
										},
										{
											"begin": 17369,
											"end": 17373,
											"name": "MSTORE"
										},
										{
											"begin": 17353,
											"end": 17375,
											"name": "PUSH",
											"value": "99C45E8EE5DDE061CED9C812089094FBD28A020E7E37F2851198887E5CA64985"
										},
										{
											"begin": 17377,
											"end": 17389,
											"name": "PUSH [tag]",
											"value": "219"
										},
										{
											"begin": 17377,
											"end": 17387,
											"name": "PUSH [tag]",
											"value": "220"
										},
										{
											"begin": 17377,
											"end": 17389,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17377,
											"end": 17389,
											"name": "tag",
											"value": "219"
										},
										{
											"begin": 17377,
											"end": 17389,
											"name": "JUMPDEST"
										},
										{
											"begin": 17399,
											"end": 17403,
											"name": "ADDRESS"
										},
										{
											"begin": 17325,
											"end": 17405,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17325,
											"end": 17405,
											"name": "MLOAD"
										},
										{
											"begin": 17325,
											"end": 17405,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17325,
											"end": 17405,
											"name": "ADD"
										},
										{
											"begin": 17325,
											"end": 17405,
											"name": "PUSH [tag]",
											"value": "221"
										},
										{
											"begin": 17325,
											"end": 17405,
											"name": "SWAP5"
										},
										{
											"begin": 17325,
											"end": 17405,
											"name": "SWAP4"
										},
										{
											"begin": 17325,
											"end": 17405,
											"name": "SWAP3"
										},
										{
											"begin": 17325,
											"end": 17405,
											"name": "SWAP2"
										},
										{
											"begin": 17325,
											"end": 17405,
											"name": "SWAP1"
										},
										{
											"begin": 17325,
											"end": 17405,
											"name": "PUSH [tag]",
											"value": "222"
										},
										{
											"begin": 17325,
											"end": 17405,
											"name": "JUMP"
										},
										{
											"begin": 17325,
											"end": 17405,
											"name": "tag",
											"value": "221"
										},
										{
											"begin": 17325,
											"end": 17405,
											"name": "JUMPDEST"
										},
										{
											"begin": 17325,
											"end": 17405,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17325,
											"end": 17405,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 17325,
											"end": 17405,
											"name": "SWAP1"
										},
										{
											"begin": 17325,
											"end": 17405,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17325,
											"end": 17405,
											"name": "MSTORE"
										},
										{
											"begin": 17315,
											"end": 17406,
											"name": "DUP1"
										},
										{
											"begin": 17315,
											"end": 17406,
											"name": "MLOAD"
										},
										{
											"begin": 17315,
											"end": 17406,
											"name": "SWAP1"
										},
										{
											"begin": 17315,
											"end": 17406,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17315,
											"end": 17406,
											"name": "ADD"
										},
										{
											"begin": 17315,
											"end": 17406,
											"name": "KECCAK256"
										},
										{
											"begin": 17289,
											"end": 17406,
											"name": "SWAP1"
										},
										{
											"begin": 17289,
											"end": 17406,
											"name": "POP"
										},
										{
											"begin": 17416,
											"end": 17434,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8510,
											"end": 8581,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8510,
											"end": 8581,
											"name": "MLOAD"
										},
										{
											"begin": 8510,
											"end": 8581,
											"name": "PUSH [tag]",
											"value": "223"
										},
										{
											"begin": 8510,
											"end": 8581,
											"name": "SWAP1"
										},
										{
											"begin": 8510,
											"end": 8581,
											"name": "PUSH [tag]",
											"value": "224"
										},
										{
											"begin": 8510,
											"end": 8581,
											"name": "JUMP"
										},
										{
											"begin": 8510,
											"end": 8581,
											"name": "tag",
											"value": "223"
										},
										{
											"begin": 8510,
											"end": 8581,
											"name": "JUMPDEST"
										},
										{
											"begin": 8510,
											"end": 8581,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8510,
											"end": 8581,
											"name": "MLOAD"
										},
										{
											"begin": 8510,
											"end": 8581,
											"name": "SWAP1"
										},
										{
											"begin": 8510,
											"end": 8581,
											"name": "DUP2"
										},
										{
											"begin": 8510,
											"end": 8581,
											"name": "SWAP1"
										},
										{
											"begin": 8510,
											"end": 8581,
											"name": "SUB"
										},
										{
											"begin": 8510,
											"end": 8581,
											"name": "DUP2"
										},
										{
											"begin": 8510,
											"end": 8581,
											"name": "KECCAK256"
										},
										{
											"begin": 17447,
											"end": 17504,
											"name": "PUSH [tag]",
											"value": "225"
										},
										{
											"begin": 17447,
											"end": 17504,
											"name": "SWAP2"
										},
										{
											"begin": 17479,
											"end": 17488,
											"name": "DUP11"
										},
										{
											"begin": 17479,
											"end": 17488,
											"name": "SWAP1"
										},
										{
											"begin": 17490,
											"end": 17495,
											"name": "DUP11"
										},
										{
											"begin": 17490,
											"end": 17495,
											"name": "SWAP1"
										},
										{
											"begin": 17497,
											"end": 17503,
											"name": "DUP11"
										},
										{
											"begin": 17497,
											"end": 17503,
											"name": "SWAP1"
										},
										{
											"begin": 17447,
											"end": 17504,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17447,
											"end": 17504,
											"name": "ADD"
										},
										{
											"begin": 17447,
											"end": 17504,
											"name": "PUSH [tag]",
											"value": "226"
										},
										{
											"begin": 17447,
											"end": 17504,
											"name": "JUMP"
										},
										{
											"begin": 17447,
											"end": 17504,
											"name": "tag",
											"value": "225"
										},
										{
											"begin": 17447,
											"end": 17504,
											"name": "JUMPDEST"
										},
										{
											"begin": 17447,
											"end": 17504,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17447,
											"end": 17504,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 17447,
											"end": 17504,
											"name": "SWAP1"
										},
										{
											"begin": 17447,
											"end": 17504,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17447,
											"end": 17504,
											"name": "MSTORE"
										},
										{
											"begin": 17437,
											"end": 17505,
											"name": "DUP1"
										},
										{
											"begin": 17437,
											"end": 17505,
											"name": "MLOAD"
										},
										{
											"begin": 17437,
											"end": 17505,
											"name": "SWAP1"
										},
										{
											"begin": 17437,
											"end": 17505,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17437,
											"end": 17505,
											"name": "ADD"
										},
										{
											"begin": 17437,
											"end": 17505,
											"name": "KECCAK256"
										},
										{
											"begin": 17416,
											"end": 17505,
											"name": "SWAP1"
										},
										{
											"begin": 17416,
											"end": 17505,
											"name": "POP"
										},
										{
											"begin": 17515,
											"end": 17529,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17571,
											"end": 17586,
											"name": "DUP3"
										},
										{
											"begin": 17588,
											"end": 17598,
											"name": "DUP3"
										},
										{
											"begin": 17542,
											"end": 17599,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17542,
											"end": 17599,
											"name": "MLOAD"
										},
										{
											"begin": 17542,
											"end": 17599,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17542,
											"end": 17599,
											"name": "ADD"
										},
										{
											"begin": 17542,
											"end": 17599,
											"name": "PUSH [tag]",
											"value": "227"
										},
										{
											"begin": 17542,
											"end": 17599,
											"name": "SWAP3"
										},
										{
											"begin": 17542,
											"end": 17599,
											"name": "SWAP2"
										},
										{
											"begin": 17542,
											"end": 17599,
											"name": "SWAP1"
										},
										{
											"begin": 17542,
											"end": 17599,
											"name": "PUSH [tag]",
											"value": "228"
										},
										{
											"begin": 17542,
											"end": 17599,
											"name": "JUMP"
										},
										{
											"begin": 17542,
											"end": 17599,
											"name": "tag",
											"value": "227"
										},
										{
											"begin": 17542,
											"end": 17599,
											"name": "JUMPDEST"
										},
										{
											"begin": 17542,
											"end": 17599,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17542,
											"end": 17599,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 17542,
											"end": 17599,
											"name": "SWAP1"
										},
										{
											"begin": 17542,
											"end": 17599,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17542,
											"end": 17599,
											"name": "MSTORE"
										},
										{
											"begin": 17532,
											"end": 17600,
											"name": "DUP1"
										},
										{
											"begin": 17532,
											"end": 17600,
											"name": "MLOAD"
										},
										{
											"begin": 17532,
											"end": 17600,
											"name": "SWAP1"
										},
										{
											"begin": 17532,
											"end": 17600,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17532,
											"end": 17600,
											"name": "ADD"
										},
										{
											"begin": 17532,
											"end": 17600,
											"name": "KECCAK256"
										},
										{
											"begin": 17515,
											"end": 17600,
											"name": "SWAP1"
										},
										{
											"begin": 17515,
											"end": 17600,
											"name": "POP"
										},
										{
											"begin": 17610,
											"end": 17627,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17640,
											"end": 17646,
											"name": "DUP3"
										},
										{
											"begin": 17648,
											"end": 17649,
											"name": "DUP9"
										},
										{
											"begin": 17651,
											"end": 17652,
											"name": "DUP9"
										},
										{
											"begin": 17654,
											"end": 17655,
											"name": "DUP9"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "MLOAD"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "DUP2"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "MSTORE"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "ADD"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "MSTORE"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "MLOAD"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "PUSH [tag]",
											"value": "229"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "SWAP5"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "SWAP4"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "SWAP3"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "SWAP2"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "SWAP1"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "PUSH [tag]",
											"value": "230"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "JUMP"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "tag",
											"value": "229"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "JUMPDEST"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "MLOAD"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "DUP2"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "SUB"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "SWAP1"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "DUP1"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "DUP5"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "SUB"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "SWAP1"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "DUP6"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "GAS"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "STATICCALL"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "231"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "ADD"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "MLOAD"
										},
										{
											"begin": 17630,
											"end": 17656,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 17674,
											"end": 17697,
											"name": "DUP2"
										},
										{
											"begin": 17674,
											"end": 17697,
											"name": "AND"
										},
										{
											"begin": 17666,
											"end": 17739,
											"name": "PUSH [tag]",
											"value": "232"
										},
										{
											"begin": 17666,
											"end": 17739,
											"name": "JUMPI"
										},
										{
											"begin": 17666,
											"end": 17739,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17666,
											"end": 17739,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 17666,
											"end": 17739,
											"name": "DUP2"
										},
										{
											"begin": 17666,
											"end": 17739,
											"name": "MSTORE"
										},
										{
											"begin": 17666,
											"end": 17739,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17666,
											"end": 17739,
											"name": "ADD"
										},
										{
											"begin": 17666,
											"end": 17739,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 17666,
											"end": 17739,
											"name": "SWAP1"
										},
										{
											"begin": 17666,
											"end": 17739,
											"name": "PUSH [tag]",
											"value": "234"
										},
										{
											"begin": 17666,
											"end": 17739,
											"name": "JUMP"
										},
										{
											"begin": 17666,
											"end": 17739,
											"name": "tag",
											"value": "232"
										},
										{
											"begin": 17666,
											"end": 17739,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 17766,
											"end": 17783,
											"name": "DUP2"
										},
										{
											"begin": 17766,
											"end": 17783,
											"name": "AND"
										},
										{
											"begin": 17766,
											"end": 17783,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17766,
											"end": 17783,
											"name": "SWAP1"
										},
										{
											"begin": 17766,
											"end": 17783,
											"name": "DUP2"
										},
										{
											"begin": 17766,
											"end": 17783,
											"name": "MSTORE"
										},
										{
											"begin": 17766,
											"end": 17772,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 17766,
											"end": 17783,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17766,
											"end": 17783,
											"name": "MSTORE"
										},
										{
											"begin": 17766,
											"end": 17783,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17766,
											"end": 17783,
											"name": "SWAP1"
										},
										{
											"begin": 17766,
											"end": 17783,
											"name": "KECCAK256"
										},
										{
											"begin": 17766,
											"end": 17785,
											"name": "DUP1"
										},
										{
											"begin": 17766,
											"end": 17785,
											"name": "SLOAD"
										},
										{
											"begin": 17766,
											"end": 17785,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17766,
											"end": 17785,
											"name": "DUP2"
										},
										{
											"begin": 17766,
											"end": 17785,
											"name": "ADD"
										},
										{
											"begin": 17766,
											"end": 17785,
											"name": "SWAP1"
										},
										{
											"begin": 17766,
											"end": 17785,
											"name": "SWAP2"
										},
										{
											"begin": 17766,
											"end": 17785,
											"name": "SSTORE"
										},
										{
											"begin": 17757,
											"end": 17785,
											"name": "DUP10"
										},
										{
											"begin": 17757,
											"end": 17785,
											"name": "EQ"
										},
										{
											"begin": 17749,
											"end": 17823,
											"name": "PUSH [tag]",
											"value": "235"
										},
										{
											"begin": 17749,
											"end": 17823,
											"name": "JUMPI"
										},
										{
											"begin": 17749,
											"end": 17823,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17749,
											"end": 17823,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 17749,
											"end": 17823,
											"name": "DUP2"
										},
										{
											"begin": 17749,
											"end": 17823,
											"name": "MSTORE"
										},
										{
											"begin": 17749,
											"end": 17823,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17749,
											"end": 17823,
											"name": "ADD"
										},
										{
											"begin": 17749,
											"end": 17823,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 17749,
											"end": 17823,
											"name": "SWAP1"
										},
										{
											"begin": 17749,
											"end": 17823,
											"name": "PUSH [tag]",
											"value": "237"
										},
										{
											"begin": 17749,
											"end": 17823,
											"name": "JUMP"
										},
										{
											"begin": 17749,
											"end": 17823,
											"name": "tag",
											"value": "235"
										},
										{
											"begin": 17749,
											"end": 17823,
											"name": "JUMPDEST"
										},
										{
											"begin": 17848,
											"end": 17854,
											"name": "DUP8"
										},
										{
											"begin": 17841,
											"end": 17844,
											"name": "TIMESTAMP"
										},
										{
											"begin": 17841,
											"end": 17854,
											"name": "GT"
										},
										{
											"begin": 17841,
											"end": 17854,
											"name": "ISZERO"
										},
										{
											"begin": 17833,
											"end": 17896,
											"name": "PUSH [tag]",
											"value": "238"
										},
										{
											"begin": 17833,
											"end": 17896,
											"name": "JUMPI"
										},
										{
											"begin": 17833,
											"end": 17896,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17833,
											"end": 17896,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 17833,
											"end": 17896,
											"name": "DUP2"
										},
										{
											"begin": 17833,
											"end": 17896,
											"name": "MSTORE"
										},
										{
											"begin": 17833,
											"end": 17896,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17833,
											"end": 17896,
											"name": "ADD"
										},
										{
											"begin": 17833,
											"end": 17896,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 17833,
											"end": 17896,
											"name": "SWAP1"
										},
										{
											"begin": 17833,
											"end": 17896,
											"name": "PUSH [tag]",
											"value": "240"
										},
										{
											"begin": 17833,
											"end": 17896,
											"name": "JUMP"
										},
										{
											"begin": 17833,
											"end": 17896,
											"name": "tag",
											"value": "238"
										},
										{
											"begin": 17833,
											"end": 17896,
											"name": "JUMPDEST"
										},
										{
											"begin": 17913,
											"end": 17944,
											"name": "PUSH [tag]",
											"value": "241"
										},
										{
											"begin": 17923,
											"end": 17932,
											"name": "DUP2"
										},
										{
											"begin": 17934,
											"end": 17943,
											"name": "DUP12"
										},
										{
											"begin": 17913,
											"end": 17922,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 17913,
											"end": 17944,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17913,
											"end": 17944,
											"name": "tag",
											"value": "241"
										},
										{
											"begin": 17913,
											"end": 17944,
											"name": "JUMPDEST"
										},
										{
											"begin": 17906,
											"end": 17944,
											"name": "POP"
										},
										{
											"begin": 17906,
											"end": 17944,
											"name": "POP"
										},
										{
											"begin": 17906,
											"end": 17944,
											"name": "POP"
										},
										{
											"begin": 17906,
											"end": 17944,
											"name": "POP"
										},
										{
											"begin": 17174,
											"end": 17951,
											"name": "tag",
											"value": "217"
										},
										{
											"begin": 17174,
											"end": 17951,
											"name": "JUMPDEST"
										},
										{
											"begin": 17174,
											"end": 17951,
											"name": "POP"
										},
										{
											"begin": 17174,
											"end": 17951,
											"name": "POP"
										},
										{
											"begin": 17174,
											"end": 17951,
											"name": "POP"
										},
										{
											"begin": 17174,
											"end": 17951,
											"name": "POP"
										},
										{
											"begin": 17174,
											"end": 17951,
											"name": "POP"
										},
										{
											"begin": 17174,
											"end": 17951,
											"name": "POP"
										},
										{
											"begin": 17174,
											"end": 17951,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13730,
											"end": 14761,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 13730,
											"end": 14761,
											"name": "JUMPDEST"
										},
										{
											"begin": 13859,
											"end": 13872,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 13886,
											"end": 13895,
											"name": "DUP7"
										},
										{
											"begin": 13886,
											"end": 13907,
											"name": "EQ"
										},
										{
											"begin": 13882,
											"end": 14049,
											"name": "ISZERO"
										},
										{
											"begin": 13882,
											"end": 14049,
											"name": "PUSH [tag]",
											"value": "243"
										},
										{
											"begin": 13882,
											"end": 14049,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 13882,
											"end": 14049,
											"name": "PUSH [tag]",
											"value": "244"
										},
										{
											"begin": 13882,
											"end": 14049,
											"name": "JUMP"
										},
										{
											"begin": 13882,
											"end": 14049,
											"name": "tag",
											"value": "243"
										},
										{
											"begin": 13882,
											"end": 14049,
											"name": "JUMPDEST"
										},
										{
											"begin": 13982,
											"end": 14038,
											"name": "PUSH [tag]",
											"value": "245"
										},
										{
											"begin": 13989,
											"end": 13998,
											"name": "DUP7"
										},
										{
											"begin": 13982,
											"end": 14038,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13982,
											"end": 14038,
											"name": "MLOAD"
										},
										{
											"begin": 13982,
											"end": 14038,
											"name": "DUP1"
										},
										{
											"begin": 13982,
											"end": 14038,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 13982,
											"end": 14038,
											"name": "ADD"
										},
										{
											"begin": 13982,
											"end": 14038,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13982,
											"end": 14038,
											"name": "MSTORE"
										},
										{
											"begin": 13982,
											"end": 14038,
											"name": "DUP1"
										},
										{
											"begin": 13982,
											"end": 14038,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 13982,
											"end": 14038,
											"name": "DUP2"
										},
										{
											"begin": 13982,
											"end": 14038,
											"name": "MSTORE"
										},
										{
											"begin": 13982,
											"end": 14038,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13982,
											"end": 14038,
											"name": "ADD"
										},
										{
											"begin": 13982,
											"end": 14038,
											"name": "PUSH data",
											"value": "58DA0B91010307EE6A63257C5283618928105E355857D8F79CF7E017AD7082F4"
										},
										{
											"begin": 13982,
											"end": 14038,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 13982,
											"end": 14038,
											"name": "SWAP2"
										},
										{
											"begin": 13982,
											"end": 14038,
											"name": "CODECOPY"
										},
										{
											"begin": 13982,
											"end": 13988,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 13982,
											"end": 14038,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13982,
											"end": 14038,
											"name": "tag",
											"value": "245"
										},
										{
											"begin": 13982,
											"end": 14038,
											"name": "JUMPDEST"
										},
										{
											"begin": 13973,
											"end": 14038,
											"name": "SWAP1"
										},
										{
											"begin": 13973,
											"end": 14038,
											"name": "POP"
										},
										{
											"begin": 13882,
											"end": 14049,
											"name": "tag",
											"value": "244"
										},
										{
											"begin": 13882,
											"end": 14049,
											"name": "JUMPDEST"
										},
										{
											"begin": 14059,
											"end": 14082,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "MLOAD"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "PUSH [tag]",
											"value": "246"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "SWAP1"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "JUMP"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "tag",
											"value": "246"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "JUMPDEST"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "DUP1"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "MLOAD"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "SWAP2"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "DUP3"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "SWAP1"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "SUB"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "DUP3"
										},
										{
											"begin": 8293,
											"end": 8373,
											"name": "KECCAK256"
										},
										{
											"begin": 14139,
											"end": 14143,
											"name": "DUP3"
										},
										{
											"begin": 14139,
											"end": 14143,
											"name": "DUP3"
										},
										{
											"begin": 14139,
											"end": 14143,
											"name": "ADD"
										},
										{
											"begin": 14139,
											"end": 14143,
											"name": "SWAP1"
										},
										{
											"begin": 14139,
											"end": 14143,
											"name": "SWAP2"
										},
										{
											"begin": 14139,
											"end": 14143,
											"name": "MSTORE"
										},
										{
											"begin": 14139,
											"end": 14143,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 14139,
											"end": 14143,
											"name": "DUP3"
										},
										{
											"begin": 14139,
											"end": 14143,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "556E697377617"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "CC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 14139,
											"end": 14143,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14139,
											"end": 14143,
											"name": "SWAP1"
										},
										{
											"begin": 14139,
											"end": 14143,
											"name": "SWAP3"
										},
										{
											"begin": 14139,
											"end": 14143,
											"name": "ADD"
										},
										{
											"begin": 14139,
											"end": 14143,
											"name": "SWAP2"
										},
										{
											"begin": 14139,
											"end": 14143,
											"name": "SWAP1"
										},
										{
											"begin": 14139,
											"end": 14143,
											"name": "SWAP2"
										},
										{
											"begin": 14139,
											"end": 14143,
											"name": "MSTORE"
										},
										{
											"begin": 14123,
											"end": 14145,
											"name": "PUSH",
											"value": "99C45E8EE5DDE061CED9C812089094FBD28A020E7E37F2851198887E5CA64985"
										},
										{
											"begin": 14147,
											"end": 14159,
											"name": "PUSH [tag]",
											"value": "247"
										},
										{
											"begin": 14147,
											"end": 14157,
											"name": "PUSH [tag]",
											"value": "220"
										},
										{
											"begin": 14147,
											"end": 14159,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14147,
											"end": 14159,
											"name": "tag",
											"value": "247"
										},
										{
											"begin": 14147,
											"end": 14159,
											"name": "JUMPDEST"
										},
										{
											"begin": 14169,
											"end": 14173,
											"name": "ADDRESS"
										},
										{
											"begin": 14095,
											"end": 14175,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14095,
											"end": 14175,
											"name": "MLOAD"
										},
										{
											"begin": 14095,
											"end": 14175,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14095,
											"end": 14175,
											"name": "ADD"
										},
										{
											"begin": 14095,
											"end": 14175,
											"name": "PUSH [tag]",
											"value": "248"
										},
										{
											"begin": 14095,
											"end": 14175,
											"name": "SWAP5"
										},
										{
											"begin": 14095,
											"end": 14175,
											"name": "SWAP4"
										},
										{
											"begin": 14095,
											"end": 14175,
											"name": "SWAP3"
										},
										{
											"begin": 14095,
											"end": 14175,
											"name": "SWAP2"
										},
										{
											"begin": 14095,
											"end": 14175,
											"name": "SWAP1"
										},
										{
											"begin": 14095,
											"end": 14175,
											"name": "PUSH [tag]",
											"value": "222"
										},
										{
											"begin": 14095,
											"end": 14175,
											"name": "JUMP"
										},
										{
											"begin": 14095,
											"end": 14175,
											"name": "tag",
											"value": "248"
										},
										{
											"begin": 14095,
											"end": 14175,
											"name": "JUMPDEST"
										},
										{
											"begin": 14095,
											"end": 14175,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14095,
											"end": 14175,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 14095,
											"end": 14175,
											"name": "SWAP1"
										},
										{
											"begin": 14095,
											"end": 14175,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14095,
											"end": 14175,
											"name": "MSTORE"
										},
										{
											"begin": 14085,
											"end": 14176,
											"name": "DUP1"
										},
										{
											"begin": 14085,
											"end": 14176,
											"name": "MLOAD"
										},
										{
											"begin": 14085,
											"end": 14176,
											"name": "SWAP1"
										},
										{
											"begin": 14085,
											"end": 14176,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14085,
											"end": 14176,
											"name": "ADD"
										},
										{
											"begin": 14085,
											"end": 14176,
											"name": "KECCAK256"
										},
										{
											"begin": 14059,
											"end": 14176,
											"name": "SWAP1"
										},
										{
											"begin": 14059,
											"end": 14176,
											"name": "POP"
										},
										{
											"begin": 14186,
											"end": 14204,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8710,
											"end": 8805,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8710,
											"end": 8805,
											"name": "MLOAD"
										},
										{
											"begin": 8710,
											"end": 8805,
											"name": "PUSH [tag]",
											"value": "249"
										},
										{
											"begin": 8710,
											"end": 8805,
											"name": "SWAP1"
										},
										{
											"begin": 8710,
											"end": 8805,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 8710,
											"end": 8805,
											"name": "JUMP"
										},
										{
											"begin": 8710,
											"end": 8805,
											"name": "tag",
											"value": "249"
										},
										{
											"begin": 8710,
											"end": 8805,
											"name": "JUMPDEST"
										},
										{
											"begin": 8710,
											"end": 8805,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8710,
											"end": 8805,
											"name": "DUP1"
										},
										{
											"begin": 8710,
											"end": 8805,
											"name": "MLOAD"
										},
										{
											"begin": 8710,
											"end": 8805,
											"name": "SWAP2"
										},
										{
											"begin": 8710,
											"end": 8805,
											"name": "DUP3"
										},
										{
											"begin": 8710,
											"end": 8805,
											"name": "SWAP1"
										},
										{
											"begin": 8710,
											"end": 8805,
											"name": "SUB"
										},
										{
											"begin": 8710,
											"end": 8805,
											"name": "DUP3"
										},
										{
											"begin": 8710,
											"end": 8805,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14272,
											"end": 14285,
											"name": "DUP14"
										},
										{
											"begin": 14272,
											"end": 14285,
											"name": "AND"
										},
										{
											"begin": 14272,
											"end": 14285,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14272,
											"end": 14285,
											"name": "SWAP1"
										},
										{
											"begin": 14272,
											"end": 14285,
											"name": "DUP2"
										},
										{
											"begin": 14272,
											"end": 14285,
											"name": "MSTORE"
										},
										{
											"begin": 14272,
											"end": 14278,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 14272,
											"end": 14285,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14272,
											"end": 14285,
											"name": "SWAP1"
										},
										{
											"begin": 14272,
											"end": 14285,
											"name": "DUP2"
										},
										{
											"begin": 14272,
											"end": 14285,
											"name": "MSTORE"
										},
										{
											"begin": 14272,
											"end": 14285,
											"name": "SWAP3"
										},
										{
											"begin": 14272,
											"end": 14285,
											"name": "SWAP1"
										},
										{
											"begin": 14272,
											"end": 14285,
											"name": "KECCAK256"
										},
										{
											"begin": 14272,
											"end": 14287,
											"name": "DUP1"
										},
										{
											"begin": 14272,
											"end": 14287,
											"name": "SLOAD"
										},
										{
											"begin": 14272,
											"end": 14287,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14272,
											"end": 14287,
											"name": "DUP2"
										},
										{
											"begin": 14272,
											"end": 14287,
											"name": "ADD"
										},
										{
											"begin": 14272,
											"end": 14287,
											"name": "SWAP1"
										},
										{
											"begin": 14272,
											"end": 14287,
											"name": "SWAP2"
										},
										{
											"begin": 14272,
											"end": 14287,
											"name": "SSTORE"
										},
										{
											"begin": 14217,
											"end": 14298,
											"name": "PUSH [tag]",
											"value": "250"
										},
										{
											"begin": 14217,
											"end": 14298,
											"name": "SWAP4"
										},
										{
											"begin": 8710,
											"end": 8805,
											"name": "SWAP2"
										},
										{
											"begin": 8710,
											"end": 8805,
											"name": "SWAP3"
										},
										{
											"begin": 14245,
											"end": 14250,
											"name": "DUP15"
										},
										{
											"begin": 14245,
											"end": 14250,
											"name": "SWAP3"
										},
										{
											"begin": 14252,
											"end": 14259,
											"name": "DUP15"
										},
										{
											"begin": 14252,
											"end": 14259,
											"name": "SWAP3"
										},
										{
											"begin": 14261,
											"end": 14270,
											"name": "DUP15"
										},
										{
											"begin": 14261,
											"end": 14270,
											"name": "SWAP3"
										},
										{
											"begin": 14272,
											"end": 14287,
											"name": "SWAP1"
										},
										{
											"begin": 14272,
											"end": 14287,
											"name": "SWAP2"
										},
										{
											"begin": 14289,
											"end": 14297,
											"name": "DUP15"
										},
										{
											"begin": 14289,
											"end": 14297,
											"name": "SWAP2"
										},
										{
											"begin": 14217,
											"end": 14298,
											"name": "ADD"
										},
										{
											"begin": 14217,
											"end": 14298,
											"name": "PUSH [tag]",
											"value": "251"
										},
										{
											"begin": 14217,
											"end": 14298,
											"name": "JUMP"
										},
										{
											"begin": 14217,
											"end": 14298,
											"name": "tag",
											"value": "250"
										},
										{
											"begin": 14217,
											"end": 14298,
											"name": "JUMPDEST"
										},
										{
											"begin": 14217,
											"end": 14298,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14217,
											"end": 14298,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 14217,
											"end": 14298,
											"name": "SWAP1"
										},
										{
											"begin": 14217,
											"end": 14298,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14217,
											"end": 14298,
											"name": "MSTORE"
										},
										{
											"begin": 14207,
											"end": 14299,
											"name": "DUP1"
										},
										{
											"begin": 14207,
											"end": 14299,
											"name": "MLOAD"
										},
										{
											"begin": 14207,
											"end": 14299,
											"name": "SWAP1"
										},
										{
											"begin": 14207,
											"end": 14299,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14207,
											"end": 14299,
											"name": "ADD"
										},
										{
											"begin": 14207,
											"end": 14299,
											"name": "KECCAK256"
										},
										{
											"begin": 14186,
											"end": 14299,
											"name": "SWAP1"
										},
										{
											"begin": 14186,
											"end": 14299,
											"name": "POP"
										},
										{
											"begin": 14309,
											"end": 14323,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14365,
											"end": 14380,
											"name": "DUP3"
										},
										{
											"begin": 14382,
											"end": 14392,
											"name": "DUP3"
										},
										{
											"begin": 14336,
											"end": 14393,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14336,
											"end": 14393,
											"name": "MLOAD"
										},
										{
											"begin": 14336,
											"end": 14393,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14336,
											"end": 14393,
											"name": "ADD"
										},
										{
											"begin": 14336,
											"end": 14393,
											"name": "PUSH [tag]",
											"value": "252"
										},
										{
											"begin": 14336,
											"end": 14393,
											"name": "SWAP3"
										},
										{
											"begin": 14336,
											"end": 14393,
											"name": "SWAP2"
										},
										{
											"begin": 14336,
											"end": 14393,
											"name": "SWAP1"
										},
										{
											"begin": 14336,
											"end": 14393,
											"name": "PUSH [tag]",
											"value": "228"
										},
										{
											"begin": 14336,
											"end": 14393,
											"name": "JUMP"
										},
										{
											"begin": 14336,
											"end": 14393,
											"name": "tag",
											"value": "252"
										},
										{
											"begin": 14336,
											"end": 14393,
											"name": "JUMPDEST"
										},
										{
											"begin": 14336,
											"end": 14393,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14336,
											"end": 14393,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 14336,
											"end": 14393,
											"name": "SWAP1"
										},
										{
											"begin": 14336,
											"end": 14393,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14336,
											"end": 14393,
											"name": "MSTORE"
										},
										{
											"begin": 14326,
											"end": 14394,
											"name": "DUP1"
										},
										{
											"begin": 14326,
											"end": 14394,
											"name": "MLOAD"
										},
										{
											"begin": 14326,
											"end": 14394,
											"name": "SWAP1"
										},
										{
											"begin": 14326,
											"end": 14394,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14326,
											"end": 14394,
											"name": "ADD"
										},
										{
											"begin": 14326,
											"end": 14394,
											"name": "KECCAK256"
										},
										{
											"begin": 14309,
											"end": 14394,
											"name": "SWAP1"
										},
										{
											"begin": 14309,
											"end": 14394,
											"name": "POP"
										},
										{
											"begin": 14404,
											"end": 14421,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14434,
											"end": 14440,
											"name": "DUP3"
										},
										{
											"begin": 14442,
											"end": 14443,
											"name": "DUP10"
										},
										{
											"begin": 14445,
											"end": 14446,
											"name": "DUP10"
										},
										{
											"begin": 14448,
											"end": 14449,
											"name": "DUP10"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "MLOAD"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "DUP2"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "MSTORE"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "ADD"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "MSTORE"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "MLOAD"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "SWAP5"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "SWAP4"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "SWAP3"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "SWAP2"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "SWAP1"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "PUSH [tag]",
											"value": "230"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "JUMP"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "tag",
											"value": "253"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "JUMPDEST"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "MLOAD"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "DUP2"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "SUB"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "SWAP1"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "DUP1"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "DUP5"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "SUB"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "SWAP1"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "DUP6"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "GAS"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "STATICCALL"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "254"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "254"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "ADD"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "MLOAD"
										},
										{
											"begin": 14424,
											"end": 14450,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14468,
											"end": 14491,
											"name": "DUP2"
										},
										{
											"begin": 14468,
											"end": 14491,
											"name": "AND"
										},
										{
											"begin": 14460,
											"end": 14526,
											"name": "PUSH [tag]",
											"value": "255"
										},
										{
											"begin": 14460,
											"end": 14526,
											"name": "JUMPI"
										},
										{
											"begin": 14460,
											"end": 14526,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14460,
											"end": 14526,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 14460,
											"end": 14526,
											"name": "DUP2"
										},
										{
											"begin": 14460,
											"end": 14526,
											"name": "MSTORE"
										},
										{
											"begin": 14460,
											"end": 14526,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14460,
											"end": 14526,
											"name": "ADD"
										},
										{
											"begin": 14460,
											"end": 14526,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 14460,
											"end": 14526,
											"name": "SWAP1"
										},
										{
											"begin": 14460,
											"end": 14526,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 14460,
											"end": 14526,
											"name": "JUMP"
										},
										{
											"begin": 14460,
											"end": 14526,
											"name": "tag",
											"value": "255"
										},
										{
											"begin": 14460,
											"end": 14526,
											"name": "JUMPDEST"
										},
										{
											"begin": 14557,
											"end": 14562,
											"name": "DUP12"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14544,
											"end": 14562,
											"name": "AND"
										},
										{
											"begin": 14544,
											"end": 14553,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14544,
											"end": 14562,
											"name": "AND"
										},
										{
											"begin": 14544,
											"end": 14562,
											"name": "EQ"
										},
										{
											"begin": 14536,
											"end": 14592,
											"name": "PUSH [tag]",
											"value": "258"
										},
										{
											"begin": 14536,
											"end": 14592,
											"name": "JUMPI"
										},
										{
											"begin": 14536,
											"end": 14592,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14536,
											"end": 14592,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 14536,
											"end": 14592,
											"name": "DUP2"
										},
										{
											"begin": 14536,
											"end": 14592,
											"name": "MSTORE"
										},
										{
											"begin": 14536,
											"end": 14592,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14536,
											"end": 14592,
											"name": "ADD"
										},
										{
											"begin": 14536,
											"end": 14592,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 14536,
											"end": 14592,
											"name": "SWAP1"
										},
										{
											"begin": 14536,
											"end": 14592,
											"name": "PUSH [tag]",
											"value": "260"
										},
										{
											"begin": 14536,
											"end": 14592,
											"name": "JUMP"
										},
										{
											"begin": 14536,
											"end": 14592,
											"name": "tag",
											"value": "258"
										},
										{
											"begin": 14536,
											"end": 14592,
											"name": "JUMPDEST"
										},
										{
											"begin": 14617,
											"end": 14625,
											"name": "DUP9"
										},
										{
											"begin": 14610,
											"end": 14613,
											"name": "TIMESTAMP"
										},
										{
											"begin": 14610,
											"end": 14625,
											"name": "GT"
										},
										{
											"begin": 14610,
											"end": 14625,
											"name": "ISZERO"
										},
										{
											"begin": 14602,
											"end": 14660,
											"name": "PUSH [tag]",
											"value": "261"
										},
										{
											"begin": 14602,
											"end": 14660,
											"name": "JUMPI"
										},
										{
											"begin": 14602,
											"end": 14660,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14602,
											"end": 14660,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 14602,
											"end": 14660,
											"name": "DUP2"
										},
										{
											"begin": 14602,
											"end": 14660,
											"name": "MSTORE"
										},
										{
											"begin": 14602,
											"end": 14660,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14602,
											"end": 14660,
											"name": "ADD"
										},
										{
											"begin": 14602,
											"end": 14660,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 14602,
											"end": 14660,
											"name": "SWAP1"
										},
										{
											"begin": 14602,
											"end": 14660,
											"name": "PUSH [tag]",
											"value": "263"
										},
										{
											"begin": 14602,
											"end": 14660,
											"name": "JUMP"
										},
										{
											"begin": 14602,
											"end": 14660,
											"name": "tag",
											"value": "261"
										},
										{
											"begin": 14602,
											"end": 14660,
											"name": "JUMPDEST"
										},
										{
											"begin": 14700,
											"end": 14706,
											"name": "DUP5"
										},
										{
											"begin": 14671,
											"end": 14681,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 14671,
											"end": 14688,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14682,
											"end": 14687,
											"name": "DUP15"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14671,
											"end": 14688,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14671,
											"end": 14688,
											"name": "AND"
										},
										{
											"begin": 14671,
											"end": 14688,
											"name": "DUP2"
										},
										{
											"begin": 14671,
											"end": 14688,
											"name": "MSTORE"
										},
										{
											"begin": 14671,
											"end": 14688,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14671,
											"end": 14688,
											"name": "ADD"
										},
										{
											"begin": 14671,
											"end": 14688,
											"name": "SWAP1"
										},
										{
											"begin": 14671,
											"end": 14688,
											"name": "DUP2"
										},
										{
											"begin": 14671,
											"end": 14688,
											"name": "MSTORE"
										},
										{
											"begin": 14671,
											"end": 14688,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14671,
											"end": 14688,
											"name": "ADD"
										},
										{
											"begin": 14671,
											"end": 14688,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14671,
											"end": 14688,
											"name": "KECCAK256"
										},
										{
											"begin": 14671,
											"end": 14697,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14689,
											"end": 14696,
											"name": "DUP14"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14671,
											"end": 14697,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14671,
											"end": 14697,
											"name": "AND"
										},
										{
											"begin": 14671,
											"end": 14697,
											"name": "DUP2"
										},
										{
											"begin": 14671,
											"end": 14697,
											"name": "MSTORE"
										},
										{
											"begin": 14671,
											"end": 14697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14671,
											"end": 14697,
											"name": "ADD"
										},
										{
											"begin": 14671,
											"end": 14697,
											"name": "SWAP1"
										},
										{
											"begin": 14671,
											"end": 14697,
											"name": "DUP2"
										},
										{
											"begin": 14671,
											"end": 14697,
											"name": "MSTORE"
										},
										{
											"begin": 14671,
											"end": 14697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14671,
											"end": 14697,
											"name": "ADD"
										},
										{
											"begin": 14671,
											"end": 14697,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14671,
											"end": 14697,
											"name": "KECCAK256"
										},
										{
											"begin": 14671,
											"end": 14697,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14671,
											"end": 14706,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 14671,
											"end": 14706,
											"name": "EXP"
										},
										{
											"begin": 14671,
											"end": 14706,
											"name": "DUP2"
										},
										{
											"begin": 14671,
											"end": 14706,
											"name": "SLOAD"
										},
										{
											"begin": 14671,
											"end": 14706,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14671,
											"end": 14706,
											"name": "MUL"
										},
										{
											"begin": 14671,
											"end": 14706,
											"name": "NOT"
										},
										{
											"begin": 14671,
											"end": 14706,
											"name": "AND"
										},
										{
											"begin": 14671,
											"end": 14706,
											"name": "SWAP1"
										},
										{
											"begin": 14671,
											"end": 14706,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14671,
											"end": 14706,
											"name": "AND"
										},
										{
											"begin": 14671,
											"end": 14706,
											"name": "MUL"
										},
										{
											"begin": 14671,
											"end": 14706,
											"name": "OR"
										},
										{
											"begin": 14671,
											"end": 14706,
											"name": "SWAP1"
										},
										{
											"begin": 14671,
											"end": 14706,
											"name": "SSTORE"
										},
										{
											"begin": 14671,
											"end": 14706,
											"name": "POP"
										},
										{
											"begin": 14738,
											"end": 14745,
											"name": "DUP11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14722,
											"end": 14754,
											"name": "AND"
										},
										{
											"begin": 14731,
											"end": 14736,
											"name": "DUP13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14722,
											"end": 14754,
											"name": "AND"
										},
										{
											"begin": 14722,
											"end": 14754,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 14747,
											"end": 14753,
											"name": "DUP8"
										},
										{
											"begin": 14722,
											"end": 14754,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14722,
											"end": 14754,
											"name": "MLOAD"
										},
										{
											"begin": 14722,
											"end": 14754,
											"name": "PUSH [tag]",
											"value": "264"
										},
										{
											"begin": 14722,
											"end": 14754,
											"name": "SWAP2"
										},
										{
											"begin": 14722,
											"end": 14754,
											"name": "SWAP1"
										},
										{
											"begin": 14722,
											"end": 14754,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 14722,
											"end": 14754,
											"name": "JUMP"
										},
										{
											"begin": 14722,
											"end": 14754,
											"name": "tag",
											"value": "264"
										},
										{
											"begin": 14722,
											"end": 14754,
											"name": "JUMPDEST"
										},
										{
											"begin": 14722,
											"end": 14754,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14722,
											"end": 14754,
											"name": "MLOAD"
										},
										{
											"begin": 14722,
											"end": 14754,
											"name": "DUP1"
										},
										{
											"begin": 14722,
											"end": 14754,
											"name": "SWAP2"
										},
										{
											"begin": 14722,
											"end": 14754,
											"name": "SUB"
										},
										{
											"begin": 14722,
											"end": 14754,
											"name": "SWAP1"
										},
										{
											"begin": 14722,
											"end": 14754,
											"name": "LOG3"
										},
										{
											"begin": 13730,
											"end": 14761,
											"name": "POP"
										},
										{
											"begin": 13730,
											"end": 14761,
											"name": "POP"
										},
										{
											"begin": 13730,
											"end": 14761,
											"name": "POP"
										},
										{
											"begin": 13730,
											"end": 14761,
											"name": "POP"
										},
										{
											"begin": 13730,
											"end": 14761,
											"name": "POP"
										},
										{
											"begin": 13730,
											"end": 14761,
											"name": "POP"
										},
										{
											"begin": 13730,
											"end": 14761,
											"name": "POP"
										},
										{
											"begin": 13730,
											"end": 14761,
											"name": "POP"
										},
										{
											"begin": 13730,
											"end": 14761,
											"name": "POP"
										},
										{
											"begin": 13730,
											"end": 14761,
											"name": "POP"
										},
										{
											"begin": 13730,
											"end": 14761,
											"name": "POP"
										},
										{
											"begin": 13730,
											"end": 14761,
											"name": "POP"
										},
										{
											"begin": 13730,
											"end": 14761,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12244,
											"end": 12378,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 12244,
											"end": 12378,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12343,
											"end": 12362,
											"name": "SWAP2"
										},
										{
											"begin": 12343,
											"end": 12362,
											"name": "DUP3"
										},
										{
											"begin": 12343,
											"end": 12362,
											"name": "AND"
										},
										{
											"begin": 12320,
											"end": 12324,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12343,
											"end": 12362,
											"name": "SWAP1"
										},
										{
											"begin": 12343,
											"end": 12362,
											"name": "DUP2"
										},
										{
											"begin": 12343,
											"end": 12362,
											"name": "MSTORE"
										},
										{
											"begin": 12343,
											"end": 12353,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 12343,
											"end": 12362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12343,
											"end": 12362,
											"name": "SWAP1"
										},
										{
											"begin": 12343,
											"end": 12362,
											"name": "DUP2"
										},
										{
											"begin": 12343,
											"end": 12362,
											"name": "MSTORE"
										},
										{
											"begin": 12343,
											"end": 12362,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12343,
											"end": 12362,
											"name": "DUP1"
										},
										{
											"begin": 12343,
											"end": 12362,
											"name": "DUP4"
										},
										{
											"begin": 12343,
											"end": 12362,
											"name": "KECCAK256"
										},
										{
											"begin": 12343,
											"end": 12371,
											"name": "SWAP4"
										},
										{
											"begin": 12343,
											"end": 12371,
											"name": "SWAP1"
										},
										{
											"begin": 12343,
											"end": 12371,
											"name": "SWAP5"
										},
										{
											"begin": 12343,
											"end": 12371,
											"name": "AND"
										},
										{
											"begin": 12343,
											"end": 12371,
											"name": "DUP3"
										},
										{
											"begin": 12343,
											"end": 12371,
											"name": "MSTORE"
										},
										{
											"begin": 12343,
											"end": 12371,
											"name": "SWAP2"
										},
										{
											"begin": 12343,
											"end": 12371,
											"name": "SWAP1"
										},
										{
											"begin": 12343,
											"end": 12371,
											"name": "SWAP2"
										},
										{
											"begin": 12343,
											"end": 12371,
											"name": "MSTORE"
										},
										{
											"begin": 12343,
											"end": 12371,
											"name": "KECCAK256"
										},
										{
											"begin": 12343,
											"end": 12371,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12343,
											"end": 12371,
											"name": "AND"
										},
										{
											"begin": 12343,
											"end": 12371,
											"name": "SWAP1"
										},
										{
											"begin": 12244,
											"end": 12378,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8464,
											"end": 8581,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 8464,
											"end": 8581,
											"name": "JUMPDEST"
										},
										{
											"begin": 8510,
											"end": 8581,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8510,
											"end": 8581,
											"name": "MLOAD"
										},
										{
											"begin": 8510,
											"end": 8581,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 8510,
											"end": 8581,
											"name": "SWAP1"
										},
										{
											"begin": 8510,
											"end": 8581,
											"name": "PUSH [tag]",
											"value": "224"
										},
										{
											"begin": 8510,
											"end": 8581,
											"name": "JUMP"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "JUMPDEST"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "SWAP1"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "DUP2"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "MSTORE"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "SWAP3"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "DUP4"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "MSTORE"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "DUP1"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "DUP5"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "KECCAK256"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "SWAP1"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "SWAP2"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "MSTORE"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "SWAP1"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "DUP3"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "MSTORE"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "SWAP1"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "KECCAK256"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "SLOAD"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "DUP2"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "AND"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "SWAP1"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "DIV"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "AND"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "DUP3"
										},
										{
											"begin": 7996,
											"end": 8066,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10514,
											"end": 10741,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 10514,
											"end": 10741,
											"name": "JUMPDEST"
										},
										{
											"begin": 10591,
											"end": 10597,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10591,
											"end": 10597,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10591,
											"end": 10597,
											"name": "AND"
										},
										{
											"begin": 10577,
											"end": 10587,
											"name": "CALLER"
										},
										{
											"begin": 10577,
											"end": 10597,
											"name": "EQ"
										},
										{
											"begin": 10569,
											"end": 10663,
											"name": "PUSH [tag]",
											"value": "268"
										},
										{
											"begin": 10569,
											"end": 10663,
											"name": "JUMPI"
										},
										{
											"begin": 10569,
											"end": 10663,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10569,
											"end": 10663,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 10569,
											"end": 10663,
											"name": "DUP2"
										},
										{
											"begin": 10569,
											"end": 10663,
											"name": "MSTORE"
										},
										{
											"begin": 10569,
											"end": 10663,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10569,
											"end": 10663,
											"name": "ADD"
										},
										{
											"begin": 10569,
											"end": 10663,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 10569,
											"end": 10663,
											"name": "SWAP1"
										},
										{
											"begin": 10569,
											"end": 10663,
											"name": "PUSH [tag]",
											"value": "270"
										},
										{
											"begin": 10569,
											"end": 10663,
											"name": "JUMP"
										},
										{
											"begin": 10569,
											"end": 10663,
											"name": "tag",
											"value": "268"
										},
										{
											"begin": 10569,
											"end": 10663,
											"name": "JUMPDEST"
										},
										{
											"begin": 10692,
											"end": 10698,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10692,
											"end": 10698,
											"name": "SLOAD"
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "MLOAD"
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "PUSH",
											"value": "3B0007EB941CF645526CBB3A4FDAECDA9D28CE4843167D9263B536A1F1EDC0F6"
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "SWAP2"
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "PUSH [tag]",
											"value": "271"
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10692,
											"end": 10698,
											"name": "SWAP1"
										},
										{
											"begin": 10692,
											"end": 10698,
											"name": "SWAP2"
										},
										{
											"begin": 10692,
											"end": 10698,
											"name": "AND"
										},
										{
											"begin": 10692,
											"end": 10698,
											"name": "SWAP1"
										},
										{
											"begin": 10700,
											"end": 10707,
											"name": "DUP5"
										},
										{
											"begin": 10700,
											"end": 10707,
											"name": "SWAP1"
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "PUSH [tag]",
											"value": "272"
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "JUMP"
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "tag",
											"value": "271"
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "JUMPDEST"
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "MLOAD"
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "DUP1"
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "SWAP2"
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "SUB"
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "SWAP1"
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "LOG1"
										},
										{
											"begin": 10718,
											"end": 10724,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10718,
											"end": 10734,
											"name": "DUP1"
										},
										{
											"begin": 10718,
											"end": 10734,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 10718,
											"end": 10734,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10718,
											"end": 10734,
											"name": "SWAP3"
										},
										{
											"begin": 10718,
											"end": 10734,
											"name": "SWAP1"
										},
										{
											"begin": 10718,
											"end": 10734,
											"name": "SWAP3"
										},
										{
											"begin": 10718,
											"end": 10734,
											"name": "AND"
										},
										{
											"begin": 10718,
											"end": 10734,
											"name": "SWAP2"
										},
										{
											"begin": 10718,
											"end": 10734,
											"name": "SWAP1"
										},
										{
											"begin": 10718,
											"end": 10734,
											"name": "SWAP2"
										},
										{
											"begin": 10718,
											"end": 10734,
											"name": "OR"
										},
										{
											"begin": 10718,
											"end": 10734,
											"name": "SWAP1"
										},
										{
											"begin": 10718,
											"end": 10734,
											"name": "SSTORE"
										},
										{
											"begin": 10514,
											"end": 10741,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 22671,
											"end": 22829,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 22671,
											"end": 22829,
											"name": "JUMPDEST"
										},
										{
											"begin": 22746,
											"end": 22752,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22783,
											"end": 22795,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 22772,
											"end": 22781,
											"name": "DUP5"
										},
										{
											"begin": 22772,
											"end": 22781,
											"name": "LT"
										},
										{
											"begin": 22764,
											"end": 22796,
											"name": "PUSH [tag]",
											"value": "274"
										},
										{
											"begin": 22764,
											"end": 22796,
											"name": "JUMPI"
										},
										{
											"begin": 22764,
											"end": 22796,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22764,
											"end": 22796,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 22764,
											"end": 22796,
											"name": "DUP2"
										},
										{
											"begin": 22764,
											"end": 22796,
											"name": "MSTORE"
										},
										{
											"begin": 22764,
											"end": 22796,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 22764,
											"end": 22796,
											"name": "ADD"
										},
										{
											"begin": 22764,
											"end": 22796,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 22764,
											"end": 22796,
											"name": "SWAP2"
										},
										{
											"begin": 22764,
											"end": 22796,
											"name": "SWAP1"
										},
										{
											"begin": 22764,
											"end": 22796,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 22764,
											"end": 22796,
											"name": "JUMP"
										},
										{
											"begin": 22764,
											"end": 22796,
											"name": "tag",
											"value": "274"
										},
										{
											"begin": 22764,
											"end": 22796,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 22820,
											"end": 22821,
											"name": "SWAP2"
										},
										{
											"begin": 22820,
											"end": 22821,
											"name": "SWAP3"
										},
										{
											"begin": 22671,
											"end": 22829,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 22671,
											"end": 22829,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 23025,
											"end": 23187,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 23025,
											"end": 23187,
											"name": "JUMPDEST"
										},
										{
											"begin": 23111,
											"end": 23117,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23142,
											"end": 23143,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 23137,
											"end": 23143,
											"name": "AND"
										},
										{
											"begin": 23137,
											"end": 23138,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 23137,
											"end": 23143,
											"name": "AND"
										},
										{
											"begin": 23137,
											"end": 23143,
											"name": "GT"
										},
										{
											"begin": 23137,
											"end": 23143,
											"name": "ISZERO"
										},
										{
											"begin": 23145,
											"end": 23157,
											"name": "DUP3"
										},
										{
											"begin": 23129,
											"end": 23158,
											"name": "SWAP1"
										},
										{
											"begin": 23129,
											"end": 23158,
											"name": "PUSH [tag]",
											"value": "278"
										},
										{
											"begin": 23129,
											"end": 23158,
											"name": "JUMPI"
										},
										{
											"begin": 23129,
											"end": 23158,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23129,
											"end": 23158,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 23129,
											"end": 23158,
											"name": "DUP2"
										},
										{
											"begin": 23129,
											"end": 23158,
											"name": "MSTORE"
										},
										{
											"begin": 23129,
											"end": 23158,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 23129,
											"end": 23158,
											"name": "ADD"
										},
										{
											"begin": 23129,
											"end": 23158,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 23129,
											"end": 23158,
											"name": "SWAP2"
										},
										{
											"begin": 23129,
											"end": 23158,
											"name": "SWAP1"
										},
										{
											"begin": 23129,
											"end": 23158,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 23129,
											"end": 23158,
											"name": "JUMP"
										},
										{
											"begin": 23129,
											"end": 23158,
											"name": "tag",
											"value": "278"
										},
										{
											"begin": 23129,
											"end": 23158,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 23175,
											"end": 23180,
											"name": "SWAP1"
										},
										{
											"begin": 23175,
											"end": 23180,
											"name": "SUB"
										},
										{
											"begin": 23175,
											"end": 23180,
											"name": "SWAP1"
										},
										{
											"begin": 23025,
											"end": 23187,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 20350,
											"end": 20951,
											"name": "tag",
											"value": "161"
										},
										{
											"begin": 20350,
											"end": 20951,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 20443,
											"end": 20460,
											"name": "DUP4"
										},
										{
											"begin": 20443,
											"end": 20460,
											"name": "AND"
										},
										{
											"begin": 20435,
											"end": 20524,
											"name": "PUSH [tag]",
											"value": "281"
										},
										{
											"begin": 20435,
											"end": 20524,
											"name": "JUMPI"
										},
										{
											"begin": 20435,
											"end": 20524,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20435,
											"end": 20524,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 20435,
											"end": 20524,
											"name": "DUP2"
										},
										{
											"begin": 20435,
											"end": 20524,
											"name": "MSTORE"
										},
										{
											"begin": 20435,
											"end": 20524,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 20435,
											"end": 20524,
											"name": "ADD"
										},
										{
											"begin": 20435,
											"end": 20524,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 20435,
											"end": 20524,
											"name": "SWAP1"
										},
										{
											"begin": 20435,
											"end": 20524,
											"name": "PUSH [tag]",
											"value": "283"
										},
										{
											"begin": 20435,
											"end": 20524,
											"name": "JUMP"
										},
										{
											"begin": 20435,
											"end": 20524,
											"name": "tag",
											"value": "281"
										},
										{
											"begin": 20435,
											"end": 20524,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 20542,
											"end": 20559,
											"name": "DUP3"
										},
										{
											"begin": 20542,
											"end": 20559,
											"name": "AND"
										},
										{
											"begin": 20534,
											"end": 20621,
											"name": "PUSH [tag]",
											"value": "284"
										},
										{
											"begin": 20534,
											"end": 20621,
											"name": "JUMPI"
										},
										{
											"begin": 20534,
											"end": 20621,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20534,
											"end": 20621,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 20534,
											"end": 20621,
											"name": "DUP2"
										},
										{
											"begin": 20534,
											"end": 20621,
											"name": "MSTORE"
										},
										{
											"begin": 20534,
											"end": 20621,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 20534,
											"end": 20621,
											"name": "ADD"
										},
										{
											"begin": 20534,
											"end": 20621,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 20534,
											"end": 20621,
											"name": "SWAP1"
										},
										{
											"begin": 20534,
											"end": 20621,
											"name": "PUSH [tag]",
											"value": "286"
										},
										{
											"begin": 20534,
											"end": 20621,
											"name": "JUMP"
										},
										{
											"begin": 20534,
											"end": 20621,
											"name": "tag",
											"value": "284"
										},
										{
											"begin": 20534,
											"end": 20621,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 20654,
											"end": 20667,
											"name": "DUP4"
										},
										{
											"begin": 20654,
											"end": 20667,
											"name": "AND"
										},
										{
											"begin": 20654,
											"end": 20667,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20654,
											"end": 20667,
											"name": "SWAP1"
										},
										{
											"begin": 20654,
											"end": 20667,
											"name": "DUP2"
										},
										{
											"begin": 20654,
											"end": 20667,
											"name": "MSTORE"
										},
										{
											"begin": 20654,
											"end": 20662,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 20654,
											"end": 20667,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20654,
											"end": 20667,
											"name": "SWAP1"
										},
										{
											"begin": 20654,
											"end": 20667,
											"name": "DUP2"
										},
										{
											"begin": 20654,
											"end": 20667,
											"name": "MSTORE"
										},
										{
											"begin": 20654,
											"end": 20667,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20654,
											"end": 20667,
											"name": "SWAP2"
										},
										{
											"begin": 20654,
											"end": 20667,
											"name": "DUP3"
										},
										{
											"begin": 20654,
											"end": 20667,
											"name": "SWAP1"
										},
										{
											"begin": 20654,
											"end": 20667,
											"name": "KECCAK256"
										},
										{
											"begin": 20654,
											"end": 20667,
											"name": "SLOAD"
										},
										{
											"begin": 20648,
											"end": 20733,
											"name": "DUP3"
										},
										{
											"begin": 20648,
											"end": 20733,
											"name": "MLOAD"
										},
										{
											"begin": 20648,
											"end": 20733,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 20648,
											"end": 20733,
											"name": "DUP2"
										},
										{
											"begin": 20648,
											"end": 20733,
											"name": "ADD"
										},
										{
											"begin": 20648,
											"end": 20733,
											"name": "SWAP1"
										},
										{
											"begin": 20648,
											"end": 20733,
											"name": "SWAP4"
										},
										{
											"begin": 20648,
											"end": 20733,
											"name": "MSTORE"
										},
										{
											"begin": 20648,
											"end": 20733,
											"name": "PUSH",
											"value": "35"
										},
										{
											"begin": 20648,
											"end": 20733,
											"name": "DUP1"
										},
										{
											"begin": 20648,
											"end": 20733,
											"name": "DUP5"
										},
										{
											"begin": 20648,
											"end": 20733,
											"name": "MSTORE"
										},
										{
											"begin": 20648,
											"end": 20733,
											"name": "PUSH [tag]",
											"value": "287"
										},
										{
											"begin": 20648,
											"end": 20733,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 20654,
											"end": 20667,
											"name": "SWAP1"
										},
										{
											"begin": 20654,
											"end": 20667,
											"name": "SWAP3"
										},
										{
											"begin": 20654,
											"end": 20667,
											"name": "AND"
										},
										{
											"begin": 20654,
											"end": 20667,
											"name": "SWAP3"
										},
										{
											"begin": 20669,
											"end": 20675,
											"name": "DUP6"
										},
										{
											"begin": 20669,
											"end": 20675,
											"name": "SWAP3"
										},
										{
											"begin": 20648,
											"end": 20733,
											"name": "SWAP2"
										},
										{
											"begin": 20648,
											"end": 20733,
											"name": "SWAP1"
										},
										{
											"begin": 20648,
											"end": 20733,
											"name": "PUSH data",
											"value": "3230BA2CB739B33589720B8A5892642694535E935234939514431FF16907D24A"
										},
										{
											"begin": 20648,
											"end": 20733,
											"name": "SWAP1"
										},
										{
											"begin": 20648,
											"end": 20733,
											"name": "DUP4"
										},
										{
											"begin": 20648,
											"end": 20733,
											"name": "ADD"
										},
										{
											"begin": 20648,
											"end": 20733,
											"name": "CODECOPY"
										},
										{
											"begin": 20648,
											"end": 20653,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 20648,
											"end": 20733,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20648,
											"end": 20733,
											"name": "tag",
											"value": "287"
										},
										{
											"begin": 20648,
											"end": 20733,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 20632,
											"end": 20645,
											"name": "DUP5"
										},
										{
											"begin": 20632,
											"end": 20645,
											"name": "DUP2"
										},
										{
											"begin": 20632,
											"end": 20645,
											"name": "AND"
										},
										{
											"begin": 20632,
											"end": 20645,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20632,
											"end": 20645,
											"name": "SWAP1"
										},
										{
											"begin": 20632,
											"end": 20645,
											"name": "DUP2"
										},
										{
											"begin": 20632,
											"end": 20645,
											"name": "MSTORE"
										},
										{
											"begin": 20632,
											"end": 20640,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 20632,
											"end": 20645,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20632,
											"end": 20645,
											"name": "SWAP1"
										},
										{
											"begin": 20632,
											"end": 20645,
											"name": "DUP2"
										},
										{
											"begin": 20632,
											"end": 20645,
											"name": "MSTORE"
										},
										{
											"begin": 20632,
											"end": 20645,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20632,
											"end": 20645,
											"name": "DUP1"
										},
										{
											"begin": 20632,
											"end": 20645,
											"name": "DUP4"
										},
										{
											"begin": 20632,
											"end": 20645,
											"name": "KECCAK256"
										},
										{
											"begin": 20632,
											"end": 20733,
											"name": "DUP1"
										},
										{
											"begin": 20632,
											"end": 20733,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 20632,
											"end": 20733,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 20632,
											"end": 20733,
											"name": "SWAP7"
										},
										{
											"begin": 20632,
											"end": 20733,
											"name": "DUP8"
										},
										{
											"begin": 20632,
											"end": 20733,
											"name": "AND"
										},
										{
											"begin": 20632,
											"end": 20733,
											"name": "OR"
										},
										{
											"begin": 20632,
											"end": 20733,
											"name": "SWAP1"
										},
										{
											"begin": 20632,
											"end": 20733,
											"name": "SSTORE"
										},
										{
											"begin": 20765,
											"end": 20778,
											"name": "SWAP3"
										},
										{
											"begin": 20765,
											"end": 20778,
											"name": "DUP7"
										},
										{
											"begin": 20765,
											"end": 20778,
											"name": "AND"
										},
										{
											"begin": 20765,
											"end": 20778,
											"name": "DUP3"
										},
										{
											"begin": 20765,
											"end": 20778,
											"name": "MSTORE"
										},
										{
											"begin": 20765,
											"end": 20778,
											"name": "SWAP1"
										},
										{
											"begin": 20765,
											"end": 20778,
											"name": "DUP3"
										},
										{
											"begin": 20765,
											"end": 20778,
											"name": "SWAP1"
										},
										{
											"begin": 20765,
											"end": 20778,
											"name": "KECCAK256"
										},
										{
											"begin": 20765,
											"end": 20778,
											"name": "SLOAD"
										},
										{
											"begin": 20759,
											"end": 20838,
											"name": "DUP3"
										},
										{
											"begin": 20759,
											"end": 20838,
											"name": "MLOAD"
										},
										{
											"begin": 20759,
											"end": 20838,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 20759,
											"end": 20838,
											"name": "DUP2"
										},
										{
											"begin": 20759,
											"end": 20838,
											"name": "ADD"
										},
										{
											"begin": 20759,
											"end": 20838,
											"name": "SWAP1"
										},
										{
											"begin": 20759,
											"end": 20838,
											"name": "SWAP4"
										},
										{
											"begin": 20759,
											"end": 20838,
											"name": "MSTORE"
										},
										{
											"begin": 20759,
											"end": 20838,
											"name": "PUSH",
											"value": "2F"
										},
										{
											"begin": 20759,
											"end": 20838,
											"name": "DUP1"
										},
										{
											"begin": 20759,
											"end": 20838,
											"name": "DUP5"
										},
										{
											"begin": 20759,
											"end": 20838,
											"name": "MSTORE"
										},
										{
											"begin": 20759,
											"end": 20838,
											"name": "PUSH [tag]",
											"value": "288"
										},
										{
											"begin": 20759,
											"end": 20838,
											"name": "SWAP5"
										},
										{
											"begin": 20765,
											"end": 20778,
											"name": "SWAP2"
										},
										{
											"begin": 20765,
											"end": 20778,
											"name": "SWAP1"
										},
										{
											"begin": 20765,
											"end": 20778,
											"name": "SWAP2"
										},
										{
											"begin": 20765,
											"end": 20778,
											"name": "AND"
										},
										{
											"begin": 20765,
											"end": 20778,
											"name": "SWAP3"
										},
										{
											"begin": 20780,
											"end": 20786,
											"name": "DUP6"
										},
										{
											"begin": 20780,
											"end": 20786,
											"name": "SWAP3"
										},
										{
											"begin": 20759,
											"end": 20838,
											"name": "SWAP1"
										},
										{
											"begin": 20759,
											"end": 20838,
											"name": "SWAP2"
										},
										{
											"begin": 20759,
											"end": 20838,
											"name": "SWAP1"
										},
										{
											"begin": 20759,
											"end": 20838,
											"name": "PUSH data",
											"value": "F838EE8B15C3D07740BB9B304B8146EC63BB435A7703825B5E6424EE2072674A"
										},
										{
											"begin": 20759,
											"end": 20838,
											"name": "SWAP1"
										},
										{
											"begin": 20759,
											"end": 20838,
											"name": "DUP4"
										},
										{
											"begin": 20759,
											"end": 20838,
											"name": "ADD"
										},
										{
											"begin": 20759,
											"end": 20838,
											"name": "CODECOPY"
										},
										{
											"begin": 20759,
											"end": 20764,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 20759,
											"end": 20838,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20759,
											"end": 20838,
											"name": "tag",
											"value": "288"
										},
										{
											"begin": 20759,
											"end": 20838,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 20743,
											"end": 20756,
											"name": "DUP4"
										},
										{
											"begin": 20743,
											"end": 20756,
											"name": "DUP2"
										},
										{
											"begin": 20743,
											"end": 20756,
											"name": "AND"
										},
										{
											"begin": 20743,
											"end": 20756,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20743,
											"end": 20756,
											"name": "DUP2"
										},
										{
											"begin": 20743,
											"end": 20756,
											"name": "DUP2"
										},
										{
											"begin": 20743,
											"end": 20756,
											"name": "MSTORE"
										},
										{
											"begin": 20743,
											"end": 20751,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 20743,
											"end": 20756,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20743,
											"end": 20756,
											"name": "MSTORE"
										},
										{
											"begin": 20743,
											"end": 20756,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20743,
											"end": 20756,
											"name": "SWAP1"
										},
										{
											"begin": 20743,
											"end": 20756,
											"name": "DUP2"
										},
										{
											"begin": 20743,
											"end": 20756,
											"name": "SWAP1"
										},
										{
											"begin": 20743,
											"end": 20756,
											"name": "KECCAK256"
										},
										{
											"begin": 20743,
											"end": 20838,
											"name": "DUP1"
										},
										{
											"begin": 20743,
											"end": 20838,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 20743,
											"end": 20838,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 20743,
											"end": 20838,
											"name": "SWAP6"
										},
										{
											"begin": 20743,
											"end": 20838,
											"name": "SWAP1"
										},
										{
											"begin": 20743,
											"end": 20838,
											"name": "SWAP6"
										},
										{
											"begin": 20743,
											"end": 20838,
											"name": "AND"
										},
										{
											"begin": 20743,
											"end": 20838,
											"name": "SWAP5"
										},
										{
											"begin": 20743,
											"end": 20838,
											"name": "SWAP1"
										},
										{
											"begin": 20743,
											"end": 20838,
											"name": "SWAP5"
										},
										{
											"begin": 20743,
											"end": 20838,
											"name": "OR"
										},
										{
											"begin": 20743,
											"end": 20838,
											"name": "SWAP1"
										},
										{
											"begin": 20743,
											"end": 20838,
											"name": "SWAP4"
										},
										{
											"begin": 20743,
											"end": 20838,
											"name": "SSTORE"
										},
										{
											"begin": 20853,
											"end": 20879,
											"name": "SWAP2"
										},
										{
											"begin": 20853,
											"end": 20879,
											"name": "MLOAD"
										},
										{
											"begin": 20853,
											"end": 20879,
											"name": "SWAP1"
										},
										{
											"begin": 20853,
											"end": 20879,
											"name": "DUP6"
										},
										{
											"begin": 20853,
											"end": 20879,
											"name": "AND"
										},
										{
											"begin": 20853,
											"end": 20879,
											"name": "SWAP1"
										},
										{
											"begin": 20853,
											"end": 20879,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 20853,
											"end": 20879,
											"name": "SWAP1"
										},
										{
											"begin": 20853,
											"end": 20879,
											"name": "PUSH [tag]",
											"value": "289"
										},
										{
											"begin": 20853,
											"end": 20879,
											"name": "SWAP1"
										},
										{
											"begin": 20872,
											"end": 20878,
											"name": "DUP6"
										},
										{
											"begin": 20872,
											"end": 20878,
											"name": "SWAP1"
										},
										{
											"begin": 20853,
											"end": 20879,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 20853,
											"end": 20879,
											"name": "JUMP"
										},
										{
											"begin": 20853,
											"end": 20879,
											"name": "tag",
											"value": "289"
										},
										{
											"begin": 20853,
											"end": 20879,
											"name": "JUMPDEST"
										},
										{
											"begin": 20853,
											"end": 20879,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20853,
											"end": 20879,
											"name": "MLOAD"
										},
										{
											"begin": 20853,
											"end": 20879,
											"name": "DUP1"
										},
										{
											"begin": 20853,
											"end": 20879,
											"name": "SWAP2"
										},
										{
											"begin": 20853,
											"end": 20879,
											"name": "SUB"
										},
										{
											"begin": 20853,
											"end": 20879,
											"name": "SWAP1"
										},
										{
											"begin": 20853,
											"end": 20879,
											"name": "LOG3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 20905,
											"end": 20919,
											"name": "DUP1"
										},
										{
											"begin": 20905,
											"end": 20919,
											"name": "DUP5"
										},
										{
											"begin": 20905,
											"end": 20919,
											"name": "AND"
										},
										{
											"begin": 20905,
											"end": 20919,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20905,
											"end": 20919,
											"name": "SWAP1"
										},
										{
											"begin": 20905,
											"end": 20919,
											"name": "DUP2"
										},
										{
											"begin": 20905,
											"end": 20919,
											"name": "MSTORE"
										},
										{
											"begin": 20905,
											"end": 20914,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 20905,
											"end": 20919,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20905,
											"end": 20919,
											"name": "MSTORE"
										},
										{
											"begin": 20905,
											"end": 20919,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20905,
											"end": 20919,
											"name": "DUP1"
										},
										{
											"begin": 20905,
											"end": 20919,
											"name": "DUP3"
										},
										{
											"begin": 20905,
											"end": 20919,
											"name": "KECCAK256"
										},
										{
											"begin": 20905,
											"end": 20919,
											"name": "SLOAD"
										},
										{
											"begin": 20921,
											"end": 20935,
											"name": "DUP6"
										},
										{
											"begin": 20921,
											"end": 20935,
											"name": "DUP5"
										},
										{
											"begin": 20921,
											"end": 20935,
											"name": "AND"
										},
										{
											"begin": 20921,
											"end": 20935,
											"name": "DUP4"
										},
										{
											"begin": 20921,
											"end": 20935,
											"name": "MSTORE"
										},
										{
											"begin": 20921,
											"end": 20935,
											"name": "SWAP2"
										},
										{
											"begin": 20921,
											"end": 20935,
											"name": "KECCAK256"
										},
										{
											"begin": 20921,
											"end": 20935,
											"name": "SLOAD"
										},
										{
											"begin": 20890,
											"end": 20944,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 20890,
											"end": 20944,
											"name": "SWAP3"
										},
										{
											"begin": 20905,
											"end": 20919,
											"name": "SWAP2"
										},
										{
											"begin": 20905,
											"end": 20919,
											"name": "DUP3"
										},
										{
											"begin": 20905,
											"end": 20919,
											"name": "AND"
										},
										{
											"begin": 20905,
											"end": 20919,
											"name": "SWAP2"
										},
										{
											"begin": 20921,
											"end": 20935,
											"name": "AND"
										},
										{
											"begin": 20937,
											"end": 20943,
											"name": "DUP4"
										},
										{
											"begin": 20890,
											"end": 20904,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 20890,
											"end": 20944,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1127,
											"end": 1303,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 1127,
											"end": 1303,
											"name": "JUMPDEST"
										},
										{
											"begin": 1185,
											"end": 1192,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1216,
											"end": 1221,
											"name": "DUP3"
										},
										{
											"begin": 1216,
											"end": 1221,
											"name": "DUP3"
										},
										{
											"begin": 1216,
											"end": 1221,
											"name": "ADD"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "DUP4"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "DUP2"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "LT"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "ISZERO"
										},
										{
											"begin": 1231,
											"end": 1277,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 1231,
											"end": 1277,
											"name": "JUMPI"
										},
										{
											"begin": 1231,
											"end": 1277,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1231,
											"end": 1277,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1231,
											"end": 1277,
											"name": "DUP2"
										},
										{
											"begin": 1231,
											"end": 1277,
											"name": "MSTORE"
										},
										{
											"begin": 1231,
											"end": 1277,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1231,
											"end": 1277,
											"name": "ADD"
										},
										{
											"begin": 1231,
											"end": 1277,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 1231,
											"end": 1277,
											"name": "SWAP1"
										},
										{
											"begin": 1231,
											"end": 1277,
											"name": "PUSH [tag]",
											"value": "294"
										},
										{
											"begin": 1231,
											"end": 1277,
											"name": "JUMP"
										},
										{
											"begin": 2824,
											"end": 3283,
											"name": "tag",
											"value": "179"
										},
										{
											"begin": 2824,
											"end": 3283,
											"name": "JUMPDEST"
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3123,
											"end": 3129,
											"name": "DUP3"
										},
										{
											"begin": 3119,
											"end": 3164,
											"name": "PUSH [tag]",
											"value": "296"
										},
										{
											"begin": 3119,
											"end": 3164,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3152,
											"end": 3153,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3145,
											"end": 3153,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 3145,
											"end": 3153,
											"name": "JUMP"
										},
										{
											"begin": 3119,
											"end": 3164,
											"name": "tag",
											"value": "296"
										},
										{
											"begin": 3119,
											"end": 3164,
											"name": "JUMPDEST"
										},
										{
											"begin": 3186,
											"end": 3191,
											"name": "DUP3"
										},
										{
											"begin": 3186,
											"end": 3191,
											"name": "DUP3"
										},
										{
											"begin": 3186,
											"end": 3191,
											"name": "MUL"
										},
										{
											"begin": 3190,
											"end": 3191,
											"name": "DUP3"
										},
										{
											"begin": 3186,
											"end": 3187,
											"name": "DUP5"
										},
										{
											"begin": 3186,
											"end": 3191,
											"name": "DUP3"
										},
										{
											"begin": 3186,
											"end": 3187,
											"name": "DUP2"
										},
										{
											"begin": 3209,
											"end": 3214,
											"name": "PUSH [tag]",
											"value": "297"
										},
										{
											"begin": 3209,
											"end": 3214,
											"name": "JUMPI"
										},
										{
											"begin": 3209,
											"end": 3214,
											"name": "INVALID"
										},
										{
											"begin": 3209,
											"end": 3214,
											"name": "tag",
											"value": "297"
										},
										{
											"begin": 3209,
											"end": 3214,
											"name": "JUMPDEST"
										},
										{
											"begin": 3209,
											"end": 3214,
											"name": "DIV"
										},
										{
											"begin": 3209,
											"end": 3219,
											"name": "EQ"
										},
										{
											"begin": 3201,
											"end": 3257,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 3201,
											"end": 3257,
											"name": "JUMPI"
										},
										{
											"begin": 3201,
											"end": 3257,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3201,
											"end": 3257,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3201,
											"end": 3257,
											"name": "DUP2"
										},
										{
											"begin": 3201,
											"end": 3257,
											"name": "MSTORE"
										},
										{
											"begin": 3201,
											"end": 3257,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3201,
											"end": 3257,
											"name": "ADD"
										},
										{
											"begin": 3201,
											"end": 3257,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 3201,
											"end": 3257,
											"name": "SWAP1"
										},
										{
											"begin": 3201,
											"end": 3257,
											"name": "PUSH [tag]",
											"value": "300"
										},
										{
											"begin": 3201,
											"end": 3257,
											"name": "JUMP"
										},
										{
											"begin": 4435,
											"end": 4565,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 4435,
											"end": 4565,
											"name": "JUMPDEST"
										},
										{
											"begin": 4493,
											"end": 4500,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4519,
											"end": 4558,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 4523,
											"end": 4524,
											"name": "DUP4"
										},
										{
											"begin": 4526,
											"end": 4527,
											"name": "DUP4"
										},
										{
											"begin": 4519,
											"end": 4558,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4519,
											"end": 4558,
											"name": "MLOAD"
										},
										{
											"begin": 4519,
											"end": 4558,
											"name": "DUP1"
										},
										{
											"begin": 4519,
											"end": 4558,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4519,
											"end": 4558,
											"name": "ADD"
										},
										{
											"begin": 4519,
											"end": 4558,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4519,
											"end": 4558,
											"name": "MSTORE"
										},
										{
											"begin": 4519,
											"end": 4558,
											"name": "DUP1"
										},
										{
											"begin": 4519,
											"end": 4558,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 4519,
											"end": 4558,
											"name": "DUP2"
										},
										{
											"begin": 4519,
											"end": 4558,
											"name": "MSTORE"
										},
										{
											"begin": 4519,
											"end": 4558,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4519,
											"end": 4558,
											"name": "ADD"
										},
										{
											"begin": 4519,
											"end": 4558,
											"name": "PUSH",
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 4519,
											"end": 4558,
											"name": "DUP2"
										},
										{
											"begin": 4519,
											"end": 4558,
											"name": "MSTORE"
										},
										{
											"begin": 4519,
											"end": 4558,
											"name": "POP"
										},
										{
											"begin": 4519,
											"end": 4522,
											"name": "PUSH [tag]",
											"value": "303"
										},
										{
											"begin": 4519,
											"end": 4558,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22835,
											"end": 23019,
											"name": "tag",
											"value": "187"
										},
										{
											"begin": 22835,
											"end": 23019,
											"name": "JUMPDEST"
										},
										{
											"begin": 22921,
											"end": 22927,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22950,
											"end": 22955,
											"name": "DUP4"
										},
										{
											"begin": 22950,
											"end": 22955,
											"name": "DUP4"
										},
										{
											"begin": 22950,
											"end": 22955,
											"name": "ADD"
										},
										{
											"begin": 22981,
											"end": 22993,
											"name": "DUP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 22973,
											"end": 22979,
											"name": "DUP1"
										},
										{
											"begin": 22973,
											"end": 22979,
											"name": "DUP8"
										},
										{
											"begin": 22973,
											"end": 22979,
											"name": "AND"
										},
										{
											"begin": 22973,
											"end": 22979,
											"name": "SWAP1"
										},
										{
											"begin": 22973,
											"end": 22979,
											"name": "DUP4"
										},
										{
											"begin": 22973,
											"end": 22979,
											"name": "AND"
										},
										{
											"begin": 22973,
											"end": 22979,
											"name": "LT"
										},
										{
											"begin": 22973,
											"end": 22979,
											"name": "ISZERO"
										},
										{
											"begin": 22965,
											"end": 22994,
											"name": "PUSH [tag]",
											"value": "305"
										},
										{
											"begin": 22965,
											"end": 22994,
											"name": "JUMPI"
										},
										{
											"begin": 22965,
											"end": 22994,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22965,
											"end": 22994,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 22965,
											"end": 22994,
											"name": "DUP2"
										},
										{
											"begin": 22965,
											"end": 22994,
											"name": "MSTORE"
										},
										{
											"begin": 22965,
											"end": 22994,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 22965,
											"end": 22994,
											"name": "ADD"
										},
										{
											"begin": 22965,
											"end": 22994,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 22965,
											"end": 22994,
											"name": "SWAP2"
										},
										{
											"begin": 22965,
											"end": 22994,
											"name": "SWAP1"
										},
										{
											"begin": 22965,
											"end": 22994,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 22965,
											"end": 22994,
											"name": "JUMP"
										},
										{
											"begin": 22965,
											"end": 22994,
											"name": "tag",
											"value": "305"
										},
										{
											"begin": 22965,
											"end": 22994,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 23011,
											"end": 23012,
											"name": "SWAP5"
										},
										{
											"begin": 22835,
											"end": 23019,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 22835,
											"end": 23019,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 20957,
											"end": 21878,
											"name": "tag",
											"value": "190"
										},
										{
											"begin": 20957,
											"end": 21878,
											"name": "JUMPDEST"
										},
										{
											"begin": 21061,
											"end": 21067,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 21051,
											"end": 21067,
											"name": "AND"
										},
										{
											"begin": 21051,
											"end": 21057,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 21051,
											"end": 21067,
											"name": "AND"
										},
										{
											"begin": 21051,
											"end": 21067,
											"name": "EQ"
										},
										{
											"begin": 21051,
											"end": 21067,
											"name": "ISZERO"
										},
										{
											"begin": 21051,
											"end": 21081,
											"name": "DUP1"
										},
										{
											"begin": 21051,
											"end": 21081,
											"name": "ISZERO"
										},
										{
											"begin": 21051,
											"end": 21081,
											"name": "PUSH [tag]",
											"value": "308"
										},
										{
											"begin": 21051,
											"end": 21081,
											"name": "JUMPI"
										},
										{
											"begin": 21051,
											"end": 21081,
											"name": "POP"
										},
										{
											"begin": 21080,
											"end": 21081,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21071,
											"end": 21077,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 21071,
											"end": 21081,
											"name": "AND"
										},
										{
											"begin": 21071,
											"end": 21081,
											"name": "GT"
										},
										{
											"begin": 21051,
											"end": 21081,
											"name": "tag",
											"value": "308"
										},
										{
											"begin": 21051,
											"end": 21081,
											"name": "JUMPDEST"
										},
										{
											"begin": 21047,
											"end": 21872,
											"name": "ISZERO"
										},
										{
											"begin": 21047,
											"end": 21872,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 21047,
											"end": 21872,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 21101,
											"end": 21121,
											"name": "DUP4"
										},
										{
											"begin": 21101,
											"end": 21121,
											"name": "AND"
										},
										{
											"begin": 21101,
											"end": 21121,
											"name": "ISZERO"
										},
										{
											"begin": 21097,
											"end": 21473,
											"name": "PUSH [tag]",
											"value": "310"
										},
										{
											"begin": 21097,
											"end": 21473,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 21160,
											"end": 21182,
											"name": "DUP4"
										},
										{
											"begin": 21160,
											"end": 21182,
											"name": "AND"
										},
										{
											"begin": 21141,
											"end": 21157,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21160,
											"end": 21182,
											"name": "SWAP1"
										},
										{
											"begin": 21160,
											"end": 21182,
											"name": "DUP2"
										},
										{
											"begin": 21160,
											"end": 21182,
											"name": "MSTORE"
										},
										{
											"begin": 21160,
											"end": 21174,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 21160,
											"end": 21182,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21160,
											"end": 21182,
											"name": "MSTORE"
										},
										{
											"begin": 21160,
											"end": 21182,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21160,
											"end": 21182,
											"name": "DUP2"
										},
										{
											"begin": 21160,
											"end": 21182,
											"name": "KECCAK256"
										},
										{
											"begin": 21160,
											"end": 21182,
											"name": "SLOAD"
										},
										{
											"begin": 21160,
											"end": 21182,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 21160,
											"end": 21182,
											"name": "AND"
										},
										{
											"begin": 21160,
											"end": 21182,
											"name": "SWAP1"
										},
										{
											"begin": 21219,
											"end": 21232,
											"name": "DUP2"
										},
										{
											"begin": 21219,
											"end": 21279,
											"name": "PUSH [tag]",
											"value": "311"
										},
										{
											"begin": 21219,
											"end": 21279,
											"name": "JUMPI"
										},
										{
											"begin": 21278,
											"end": 21279,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21219,
											"end": 21279,
											"name": "PUSH [tag]",
											"value": "312"
										},
										{
											"begin": 21219,
											"end": 21279,
											"name": "JUMP"
										},
										{
											"begin": 21219,
											"end": 21279,
											"name": "tag",
											"value": "311"
										},
										{
											"begin": 21219,
											"end": 21279,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 21235,
											"end": 21254,
											"name": "DUP6"
										},
										{
											"begin": 21235,
											"end": 21254,
											"name": "AND"
										},
										{
											"begin": 21235,
											"end": 21254,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21235,
											"end": 21254,
											"name": "SWAP1"
										},
										{
											"begin": 21235,
											"end": 21254,
											"name": "DUP2"
										},
										{
											"begin": 21235,
											"end": 21254,
											"name": "MSTORE"
										},
										{
											"begin": 21235,
											"end": 21246,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 21235,
											"end": 21254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21235,
											"end": 21254,
											"name": "SWAP1"
										},
										{
											"begin": 21235,
											"end": 21254,
											"name": "DUP2"
										},
										{
											"begin": 21235,
											"end": 21254,
											"name": "MSTORE"
										},
										{
											"begin": 21235,
											"end": 21254,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21235,
											"end": 21254,
											"name": "DUP1"
										},
										{
											"begin": 21235,
											"end": 21254,
											"name": "DUP4"
										},
										{
											"begin": 21235,
											"end": 21254,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 21255,
											"end": 21268,
											"name": "DUP7"
										},
										{
											"begin": 21255,
											"end": 21268,
											"name": "ADD"
										},
										{
											"begin": 21235,
											"end": 21269,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 21235,
											"end": 21269,
											"name": "AND"
										},
										{
											"begin": 21235,
											"end": 21269,
											"name": "DUP5"
										},
										{
											"begin": 21235,
											"end": 21269,
											"name": "MSTORE"
										},
										{
											"begin": 21235,
											"end": 21269,
											"name": "SWAP1"
										},
										{
											"begin": 21235,
											"end": 21269,
											"name": "SWAP2"
										},
										{
											"begin": 21235,
											"end": 21269,
											"name": "MSTORE"
										},
										{
											"begin": 21235,
											"end": 21269,
											"name": "SWAP1"
										},
										{
											"begin": 21235,
											"end": 21269,
											"name": "KECCAK256"
										},
										{
											"begin": 21235,
											"end": 21275,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 21235,
											"end": 21275,
											"name": "SWAP1"
										},
										{
											"begin": 21235,
											"end": 21275,
											"name": "DIV"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 21235,
											"end": 21275,
											"name": "AND"
										},
										{
											"begin": 21219,
											"end": 21279,
											"name": "tag",
											"value": "312"
										},
										{
											"begin": 21219,
											"end": 21279,
											"name": "JUMPDEST"
										},
										{
											"begin": 21200,
											"end": 21279,
											"name": "SWAP1"
										},
										{
											"begin": 21200,
											"end": 21279,
											"name": "POP"
										},
										{
											"begin": 21297,
											"end": 21313,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21316,
											"end": 21383,
											"name": "PUSH [tag]",
											"value": "313"
										},
										{
											"begin": 21322,
											"end": 21331,
											"name": "DUP3"
										},
										{
											"begin": 21333,
											"end": 21339,
											"name": "DUP6"
										},
										{
											"begin": 21316,
											"end": 21383,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21316,
											"end": 21383,
											"name": "MLOAD"
										},
										{
											"begin": 21316,
											"end": 21383,
											"name": "DUP1"
										},
										{
											"begin": 21316,
											"end": 21383,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 21316,
											"end": 21383,
											"name": "ADD"
										},
										{
											"begin": 21316,
											"end": 21383,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21316,
											"end": 21383,
											"name": "MSTORE"
										},
										{
											"begin": 21316,
											"end": 21383,
											"name": "DUP1"
										},
										{
											"begin": 21316,
											"end": 21383,
											"name": "PUSH",
											"value": "27"
										},
										{
											"begin": 21316,
											"end": 21383,
											"name": "DUP2"
										},
										{
											"begin": 21316,
											"end": 21383,
											"name": "MSTORE"
										},
										{
											"begin": 21316,
											"end": 21383,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21316,
											"end": 21383,
											"name": "ADD"
										},
										{
											"begin": 21316,
											"end": 21383,
											"name": "PUSH data",
											"value": "8F9E8E1E6816D4A772D233C08B8292A576126F7DBD1D9B7CD30EF07F7C3D78D2"
										},
										{
											"begin": 21316,
											"end": 21383,
											"name": "PUSH",
											"value": "27"
										},
										{
											"begin": 21316,
											"end": 21383,
											"name": "SWAP2"
										},
										{
											"begin": 21316,
											"end": 21383,
											"name": "CODECOPY"
										},
										{
											"begin": 21316,
											"end": 21321,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 21316,
											"end": 21383,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21316,
											"end": 21383,
											"name": "tag",
											"value": "313"
										},
										{
											"begin": 21316,
											"end": 21383,
											"name": "JUMPDEST"
										},
										{
											"begin": 21297,
											"end": 21383,
											"name": "SWAP1"
										},
										{
											"begin": 21297,
											"end": 21383,
											"name": "POP"
										},
										{
											"begin": 21401,
											"end": 21458,
											"name": "PUSH [tag]",
											"value": "314"
										},
										{
											"begin": 21418,
											"end": 21424,
											"name": "DUP7"
										},
										{
											"begin": 21426,
											"end": 21435,
											"name": "DUP5"
										},
										{
											"begin": 21437,
											"end": 21446,
											"name": "DUP5"
										},
										{
											"begin": 21448,
											"end": 21457,
											"name": "DUP5"
										},
										{
											"begin": 21401,
											"end": 21417,
											"name": "PUSH [tag]",
											"value": "315"
										},
										{
											"begin": 21401,
											"end": 21458,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21401,
											"end": 21458,
											"name": "tag",
											"value": "314"
										},
										{
											"begin": 21401,
											"end": 21458,
											"name": "JUMPDEST"
										},
										{
											"begin": 21097,
											"end": 21473,
											"name": "POP"
										},
										{
											"begin": 21097,
											"end": 21473,
											"name": "POP"
										},
										{
											"begin": 21097,
											"end": 21473,
											"name": "POP"
										},
										{
											"begin": 21097,
											"end": 21473,
											"name": "tag",
											"value": "310"
										},
										{
											"begin": 21097,
											"end": 21473,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 21491,
											"end": 21511,
											"name": "DUP3"
										},
										{
											"begin": 21491,
											"end": 21511,
											"name": "AND"
										},
										{
											"begin": 21491,
											"end": 21511,
											"name": "ISZERO"
										},
										{
											"begin": 21487,
											"end": 21862,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 21487,
											"end": 21862,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 21550,
											"end": 21572,
											"name": "DUP3"
										},
										{
											"begin": 21550,
											"end": 21572,
											"name": "AND"
										},
										{
											"begin": 21531,
											"end": 21547,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21550,
											"end": 21572,
											"name": "SWAP1"
										},
										{
											"begin": 21550,
											"end": 21572,
											"name": "DUP2"
										},
										{
											"begin": 21550,
											"end": 21572,
											"name": "MSTORE"
										},
										{
											"begin": 21550,
											"end": 21564,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 21550,
											"end": 21572,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21550,
											"end": 21572,
											"name": "MSTORE"
										},
										{
											"begin": 21550,
											"end": 21572,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21550,
											"end": 21572,
											"name": "DUP2"
										},
										{
											"begin": 21550,
											"end": 21572,
											"name": "KECCAK256"
										},
										{
											"begin": 21550,
											"end": 21572,
											"name": "SLOAD"
										},
										{
											"begin": 21550,
											"end": 21572,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 21550,
											"end": 21572,
											"name": "AND"
										},
										{
											"begin": 21550,
											"end": 21572,
											"name": "SWAP1"
										},
										{
											"begin": 21609,
											"end": 21622,
											"name": "DUP2"
										},
										{
											"begin": 21609,
											"end": 21669,
											"name": "PUSH [tag]",
											"value": "317"
										},
										{
											"begin": 21609,
											"end": 21669,
											"name": "JUMPI"
										},
										{
											"begin": 21668,
											"end": 21669,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21609,
											"end": 21669,
											"name": "PUSH [tag]",
											"value": "318"
										},
										{
											"begin": 21609,
											"end": 21669,
											"name": "JUMP"
										},
										{
											"begin": 21609,
											"end": 21669,
											"name": "tag",
											"value": "317"
										},
										{
											"begin": 21609,
											"end": 21669,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 21625,
											"end": 21644,
											"name": "DUP5"
										},
										{
											"begin": 21625,
											"end": 21644,
											"name": "AND"
										},
										{
											"begin": 21625,
											"end": 21644,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21625,
											"end": 21644,
											"name": "SWAP1"
										},
										{
											"begin": 21625,
											"end": 21644,
											"name": "DUP2"
										},
										{
											"begin": 21625,
											"end": 21644,
											"name": "MSTORE"
										},
										{
											"begin": 21625,
											"end": 21636,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 21625,
											"end": 21644,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21625,
											"end": 21644,
											"name": "SWAP1"
										},
										{
											"begin": 21625,
											"end": 21644,
											"name": "DUP2"
										},
										{
											"begin": 21625,
											"end": 21644,
											"name": "MSTORE"
										},
										{
											"begin": 21625,
											"end": 21644,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21625,
											"end": 21644,
											"name": "DUP1"
										},
										{
											"begin": 21625,
											"end": 21644,
											"name": "DUP4"
										},
										{
											"begin": 21625,
											"end": 21644,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 21645,
											"end": 21658,
											"name": "DUP7"
										},
										{
											"begin": 21645,
											"end": 21658,
											"name": "ADD"
										},
										{
											"begin": 21625,
											"end": 21659,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 21625,
											"end": 21659,
											"name": "AND"
										},
										{
											"begin": 21625,
											"end": 21659,
											"name": "DUP5"
										},
										{
											"begin": 21625,
											"end": 21659,
											"name": "MSTORE"
										},
										{
											"begin": 21625,
											"end": 21659,
											"name": "SWAP1"
										},
										{
											"begin": 21625,
											"end": 21659,
											"name": "SWAP2"
										},
										{
											"begin": 21625,
											"end": 21659,
											"name": "MSTORE"
										},
										{
											"begin": 21625,
											"end": 21659,
											"name": "SWAP1"
										},
										{
											"begin": 21625,
											"end": 21659,
											"name": "KECCAK256"
										},
										{
											"begin": 21625,
											"end": 21665,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 21625,
											"end": 21665,
											"name": "SWAP1"
										},
										{
											"begin": 21625,
											"end": 21665,
											"name": "DIV"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 21625,
											"end": 21665,
											"name": "AND"
										},
										{
											"begin": 21609,
											"end": 21669,
											"name": "tag",
											"value": "318"
										},
										{
											"begin": 21609,
											"end": 21669,
											"name": "JUMPDEST"
										},
										{
											"begin": 21590,
											"end": 21669,
											"name": "SWAP1"
										},
										{
											"begin": 21590,
											"end": 21669,
											"name": "POP"
										},
										{
											"begin": 21687,
											"end": 21703,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21706,
											"end": 21772,
											"name": "PUSH [tag]",
											"value": "319"
										},
										{
											"begin": 21712,
											"end": 21721,
											"name": "DUP3"
										},
										{
											"begin": 21723,
											"end": 21729,
											"name": "DUP6"
										},
										{
											"begin": 21706,
											"end": 21772,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21706,
											"end": 21772,
											"name": "MLOAD"
										},
										{
											"begin": 21706,
											"end": 21772,
											"name": "DUP1"
										},
										{
											"begin": 21706,
											"end": 21772,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 21706,
											"end": 21772,
											"name": "ADD"
										},
										{
											"begin": 21706,
											"end": 21772,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21706,
											"end": 21772,
											"name": "MSTORE"
										},
										{
											"begin": 21706,
											"end": 21772,
											"name": "DUP1"
										},
										{
											"begin": 21706,
											"end": 21772,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 21706,
											"end": 21772,
											"name": "DUP2"
										},
										{
											"begin": 21706,
											"end": 21772,
											"name": "MSTORE"
										},
										{
											"begin": 21706,
											"end": 21772,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21706,
											"end": 21772,
											"name": "ADD"
										},
										{
											"begin": 21706,
											"end": 21772,
											"name": "PUSH data",
											"value": "5C6C891434A3C5951DB59F5FE43D566B04BF54E07BC444B7F9F72601E608DC42"
										},
										{
											"begin": 21706,
											"end": 21772,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 21706,
											"end": 21772,
											"name": "SWAP2"
										},
										{
											"begin": 21706,
											"end": 21772,
											"name": "CODECOPY"
										},
										{
											"begin": 21706,
											"end": 21711,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 21706,
											"end": 21772,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21706,
											"end": 21772,
											"name": "tag",
											"value": "319"
										},
										{
											"begin": 21706,
											"end": 21772,
											"name": "JUMPDEST"
										},
										{
											"begin": 21687,
											"end": 21772,
											"name": "SWAP1"
										},
										{
											"begin": 21687,
											"end": 21772,
											"name": "POP"
										},
										{
											"begin": 21790,
											"end": 21847,
											"name": "PUSH [tag]",
											"value": "217"
										},
										{
											"begin": 21807,
											"end": 21813,
											"name": "DUP6"
										},
										{
											"begin": 21815,
											"end": 21824,
											"name": "DUP5"
										},
										{
											"begin": 21826,
											"end": 21835,
											"name": "DUP5"
										},
										{
											"begin": 21837,
											"end": 21846,
											"name": "DUP5"
										},
										{
											"begin": 21790,
											"end": 21806,
											"name": "PUSH [tag]",
											"value": "315"
										},
										{
											"begin": 21790,
											"end": 21847,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19977,
											"end": 20344,
											"name": "tag",
											"value": "193"
										},
										{
											"begin": 19977,
											"end": 20344,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 20079,
											"end": 20099,
											"name": "DUP1"
										},
										{
											"begin": 20079,
											"end": 20099,
											"name": "DUP4"
										},
										{
											"begin": 20079,
											"end": 20099,
											"name": "AND"
										},
										{
											"begin": 20053,
											"end": 20076,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20079,
											"end": 20099,
											"name": "DUP2"
										},
										{
											"begin": 20079,
											"end": 20099,
											"name": "DUP2"
										},
										{
											"begin": 20079,
											"end": 20099,
											"name": "MSTORE"
										},
										{
											"begin": 20079,
											"end": 20088,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 20079,
											"end": 20099,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20079,
											"end": 20099,
											"name": "DUP2"
										},
										{
											"begin": 20079,
											"end": 20099,
											"name": "DUP2"
										},
										{
											"begin": 20079,
											"end": 20099,
											"name": "MSTORE"
										},
										{
											"begin": 20079,
											"end": 20099,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20079,
											"end": 20099,
											"name": "DUP1"
										},
										{
											"begin": 20079,
											"end": 20099,
											"name": "DUP5"
										},
										{
											"begin": 20079,
											"end": 20099,
											"name": "KECCAK256"
										},
										{
											"begin": 20079,
											"end": 20099,
											"name": "DUP1"
										},
										{
											"begin": 20079,
											"end": 20099,
											"name": "SLOAD"
										},
										{
											"begin": 20135,
											"end": 20143,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 20135,
											"end": 20154,
											"name": "DUP5"
										},
										{
											"begin": 20135,
											"end": 20154,
											"name": "MSTORE"
										},
										{
											"begin": 20135,
											"end": 20154,
											"name": "DUP3"
										},
										{
											"begin": 20135,
											"end": 20154,
											"name": "DUP7"
										},
										{
											"begin": 20135,
											"end": 20154,
											"name": "KECCAK256"
										},
										{
											"begin": 20135,
											"end": 20154,
											"name": "SLOAD"
										},
										{
											"begin": 20164,
											"end": 20184,
											"name": "SWAP5"
										},
										{
											"begin": 20164,
											"end": 20184,
											"name": "SWAP1"
										},
										{
											"begin": 20164,
											"end": 20184,
											"name": "SWAP4"
										},
										{
											"begin": 20164,
											"end": 20184,
											"name": "MSTORE"
										},
										{
											"begin": 20164,
											"end": 20196,
											"name": "DUP8"
										},
										{
											"begin": 20164,
											"end": 20196,
											"name": "DUP8"
										},
										{
											"begin": 20164,
											"end": 20196,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 20164,
											"end": 20196,
											"name": "DUP5"
										},
										{
											"begin": 20164,
											"end": 20196,
											"name": "AND"
										},
										{
											"begin": 20164,
											"end": 20196,
											"name": "DUP2"
										},
										{
											"begin": 20164,
											"end": 20196,
											"name": "OR"
										},
										{
											"begin": 20164,
											"end": 20196,
											"name": "SWAP1"
										},
										{
											"begin": 20164,
											"end": 20196,
											"name": "SWAP2"
										},
										{
											"begin": 20164,
											"end": 20196,
											"name": "SSTORE"
										},
										{
											"begin": 20212,
											"end": 20266,
											"name": "SWAP1"
										},
										{
											"begin": 20212,
											"end": 20266,
											"name": "MLOAD"
										},
										{
											"begin": 20079,
											"end": 20099,
											"name": "SWAP2"
										},
										{
											"begin": 20079,
											"end": 20099,
											"name": "SWAP1"
										},
										{
											"begin": 20079,
											"end": 20099,
											"name": "SWAP6"
										},
										{
											"begin": 20079,
											"end": 20099,
											"name": "AND"
										},
										{
											"begin": 20079,
											"end": 20099,
											"name": "SWAP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 20135,
											"end": 20154,
											"name": "SWAP1"
										},
										{
											"begin": 20135,
											"end": 20154,
											"name": "SWAP3"
										},
										{
											"begin": 20135,
											"end": 20154,
											"name": "AND"
										},
										{
											"begin": 20135,
											"end": 20154,
											"name": "SWAP4"
										},
										{
											"begin": 20164,
											"end": 20196,
											"name": "SWAP2"
										},
										{
											"begin": 20164,
											"end": 20196,
											"name": "SWAP3"
										},
										{
											"begin": 20079,
											"end": 20099,
											"name": "DUP6"
										},
										{
											"begin": 20079,
											"end": 20099,
											"name": "SWAP3"
										},
										{
											"begin": 20079,
											"end": 20099,
											"name": "SWAP2"
										},
										{
											"begin": 20212,
											"end": 20266,
											"name": "PUSH",
											"value": "3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F"
										},
										{
											"begin": 20212,
											"end": 20266,
											"name": "SWAP2"
										},
										{
											"begin": 20053,
											"end": 20076,
											"name": "SWAP1"
										},
										{
											"begin": 20212,
											"end": 20266,
											"name": "LOG4"
										},
										{
											"begin": 20277,
											"end": 20337,
											"name": "PUSH [tag]",
											"value": "322"
										},
										{
											"begin": 20292,
											"end": 20307,
											"name": "DUP3"
										},
										{
											"begin": 20309,
											"end": 20318,
											"name": "DUP5"
										},
										{
											"begin": 20320,
											"end": 20336,
											"name": "DUP4"
										},
										{
											"begin": 20277,
											"end": 20291,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 20277,
											"end": 20337,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20277,
											"end": 20337,
											"name": "tag",
											"value": "322"
										},
										{
											"begin": 20277,
											"end": 20337,
											"name": "JUMPDEST"
										},
										{
											"begin": 19977,
											"end": 20344,
											"name": "POP"
										},
										{
											"begin": 19977,
											"end": 20344,
											"name": "POP"
										},
										{
											"begin": 19977,
											"end": 20344,
											"name": "POP"
										},
										{
											"begin": 19977,
											"end": 20344,
											"name": "POP"
										},
										{
											"begin": 19977,
											"end": 20344,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 23193,
											"end": 23342,
											"name": "tag",
											"value": "220"
										},
										{
											"begin": 23193,
											"end": 23342,
											"name": "JUMPDEST"
										},
										{
											"begin": 23301,
											"end": 23310,
											"name": "CHAINID"
										},
										{
											"begin": 23193,
											"end": 23342,
											"name": "SWAP1"
										},
										{
											"begin": 23193,
											"end": 23342,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5040,
											"end": 5378,
											"name": "tag",
											"value": "303"
										},
										{
											"begin": 5040,
											"end": 5378,
											"name": "JUMPDEST"
										},
										{
											"begin": 5126,
											"end": 5133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5226,
											"end": 5238,
											"name": "DUP2"
										},
										{
											"begin": 5219,
											"end": 5224,
											"name": "DUP4"
										},
										{
											"begin": 5211,
											"end": 5239,
											"name": "PUSH [tag]",
											"value": "325"
										},
										{
											"begin": 5211,
											"end": 5239,
											"name": "JUMPI"
										},
										{
											"begin": 5211,
											"end": 5239,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5211,
											"end": 5239,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 5211,
											"end": 5239,
											"name": "DUP2"
										},
										{
											"begin": 5211,
											"end": 5239,
											"name": "MSTORE"
										},
										{
											"begin": 5211,
											"end": 5239,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5211,
											"end": 5239,
											"name": "ADD"
										},
										{
											"begin": 5211,
											"end": 5239,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 5211,
											"end": 5239,
											"name": "SWAP2"
										},
										{
											"begin": 5211,
											"end": 5239,
											"name": "SWAP1"
										},
										{
											"begin": 5211,
											"end": 5239,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 5211,
											"end": 5239,
											"name": "JUMP"
										},
										{
											"begin": 5211,
											"end": 5239,
											"name": "tag",
											"value": "325"
										},
										{
											"begin": 5211,
											"end": 5239,
											"name": "JUMPDEST"
										},
										{
											"begin": 5211,
											"end": 5239,
											"name": "POP"
										},
										{
											"begin": 5249,
											"end": 5258,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5265,
											"end": 5266,
											"name": "DUP4"
										},
										{
											"begin": 5261,
											"end": 5262,
											"name": "DUP6"
										},
										{
											"begin": 5261,
											"end": 5266,
											"name": "DUP2"
										},
										{
											"begin": 5261,
											"end": 5266,
											"name": "PUSH [tag]",
											"value": "327"
										},
										{
											"begin": 5261,
											"end": 5266,
											"name": "JUMPI"
										},
										{
											"begin": 5261,
											"end": 5266,
											"name": "INVALID"
										},
										{
											"begin": 5261,
											"end": 5266,
											"name": "tag",
											"value": "327"
										},
										{
											"begin": 5261,
											"end": 5266,
											"name": "JUMPDEST"
										},
										{
											"begin": 5261,
											"end": 5266,
											"name": "DIV"
										},
										{
											"begin": 5261,
											"end": 5266,
											"name": "SWAP6"
										},
										{
											"begin": 5040,
											"end": 5378,
											"name": "SWAP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5040,
											"end": 5378,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 21884,
											"end": 22501,
											"name": "tag",
											"value": "315"
										},
										{
											"begin": 21884,
											"end": 22501,
											"name": "JUMPDEST"
										},
										{
											"begin": 22001,
											"end": 22019,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22022,
											"end": 22097,
											"name": "PUSH [tag]",
											"value": "329"
										},
										{
											"begin": 22029,
											"end": 22041,
											"name": "NUMBER"
										},
										{
											"begin": 22022,
											"end": 22097,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22022,
											"end": 22097,
											"name": "MLOAD"
										},
										{
											"begin": 22022,
											"end": 22097,
											"name": "DUP1"
										},
										{
											"begin": 22022,
											"end": 22097,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 22022,
											"end": 22097,
											"name": "ADD"
										},
										{
											"begin": 22022,
											"end": 22097,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22022,
											"end": 22097,
											"name": "MSTORE"
										},
										{
											"begin": 22022,
											"end": 22097,
											"name": "DUP1"
										},
										{
											"begin": 22022,
											"end": 22097,
											"name": "PUSH",
											"value": "33"
										},
										{
											"begin": 22022,
											"end": 22097,
											"name": "DUP2"
										},
										{
											"begin": 22022,
											"end": 22097,
											"name": "MSTORE"
										},
										{
											"begin": 22022,
											"end": 22097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22022,
											"end": 22097,
											"name": "ADD"
										},
										{
											"begin": 22022,
											"end": 22097,
											"name": "PUSH data",
											"value": "66157EF8D926A3327823FECD4CE53EDFCB6533C37C90DC98ACFB91E4F2854725"
										},
										{
											"begin": 22022,
											"end": 22097,
											"name": "PUSH",
											"value": "33"
										},
										{
											"begin": 22022,
											"end": 22097,
											"name": "SWAP2"
										},
										{
											"begin": 22022,
											"end": 22097,
											"name": "CODECOPY"
										},
										{
											"begin": 22022,
											"end": 22028,
											"name": "PUSH [tag]",
											"value": "330"
										},
										{
											"begin": 22022,
											"end": 22097,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22022,
											"end": 22097,
											"name": "tag",
											"value": "329"
										},
										{
											"begin": 22022,
											"end": 22097,
											"name": "JUMPDEST"
										},
										{
											"begin": 22001,
											"end": 22097,
											"name": "SWAP1"
										},
										{
											"begin": 22001,
											"end": 22097,
											"name": "POP"
										},
										{
											"begin": 22125,
											"end": 22126,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22110,
											"end": 22122,
											"name": "DUP5"
										},
										{
											"begin": 22110,
											"end": 22126,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 22110,
											"end": 22126,
											"name": "AND"
										},
										{
											"begin": 22110,
											"end": 22126,
											"name": "GT"
										},
										{
											"begin": 22110,
											"end": 22195,
											"name": "DUP1"
										},
										{
											"begin": 22110,
											"end": 22195,
											"name": "ISZERO"
										},
										{
											"begin": 22110,
											"end": 22195,
											"name": "PUSH [tag]",
											"value": "331"
										},
										{
											"begin": 22110,
											"end": 22195,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 22130,
											"end": 22152,
											"name": "DUP6"
										},
										{
											"begin": 22130,
											"end": 22152,
											"name": "AND"
										},
										{
											"begin": 22130,
											"end": 22152,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22130,
											"end": 22152,
											"name": "SWAP1"
										},
										{
											"begin": 22130,
											"end": 22152,
											"name": "DUP2"
										},
										{
											"begin": 22130,
											"end": 22152,
											"name": "MSTORE"
										},
										{
											"begin": 22130,
											"end": 22141,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 22130,
											"end": 22152,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22130,
											"end": 22152,
											"name": "SWAP1"
										},
										{
											"begin": 22130,
											"end": 22152,
											"name": "DUP2"
										},
										{
											"begin": 22130,
											"end": 22152,
											"name": "MSTORE"
										},
										{
											"begin": 22130,
											"end": 22152,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22130,
											"end": 22152,
											"name": "DUP1"
										},
										{
											"begin": 22130,
											"end": 22152,
											"name": "DUP4"
										},
										{
											"begin": 22130,
											"end": 22152,
											"name": "KECCAK256"
										},
										{
											"begin": 22130,
											"end": 22195,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 22153,
											"end": 22169,
											"name": "DUP10"
										},
										{
											"begin": 22153,
											"end": 22169,
											"name": "ADD"
										},
										{
											"begin": 22130,
											"end": 22170,
											"name": "DUP2"
										},
										{
											"begin": 22130,
											"end": 22170,
											"name": "AND"
										},
										{
											"begin": 22130,
											"end": 22170,
											"name": "DUP6"
										},
										{
											"begin": 22130,
											"end": 22170,
											"name": "MSTORE"
										},
										{
											"begin": 22130,
											"end": 22170,
											"name": "SWAP3"
										},
										{
											"begin": 22130,
											"end": 22170,
											"name": "MSTORE"
										},
										{
											"begin": 22130,
											"end": 22170,
											"name": "SWAP1"
										},
										{
											"begin": 22130,
											"end": 22170,
											"name": "SWAP2"
										},
										{
											"begin": 22130,
											"end": 22170,
											"name": "KECCAK256"
										},
										{
											"begin": 22130,
											"end": 22180,
											"name": "SLOAD"
										},
										{
											"begin": 22130,
											"end": 22195,
											"name": "DUP3"
										},
										{
											"begin": 22130,
											"end": 22195,
											"name": "DUP3"
										},
										{
											"begin": 22130,
											"end": 22195,
											"name": "AND"
										},
										{
											"begin": 22130,
											"end": 22180,
											"name": "SWAP2"
										},
										{
											"begin": 22130,
											"end": 22180,
											"name": "AND"
										},
										{
											"begin": 22130,
											"end": 22195,
											"name": "EQ"
										},
										{
											"begin": 22110,
											"end": 22195,
											"name": "tag",
											"value": "331"
										},
										{
											"begin": 22110,
											"end": 22195,
											"name": "JUMPDEST"
										},
										{
											"begin": 22106,
											"end": 22430,
											"name": "ISZERO"
										},
										{
											"begin": 22106,
											"end": 22430,
											"name": "PUSH [tag]",
											"value": "332"
										},
										{
											"begin": 22106,
											"end": 22430,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 22209,
											"end": 22231,
											"name": "DUP6"
										},
										{
											"begin": 22209,
											"end": 22231,
											"name": "AND"
										},
										{
											"begin": 22209,
											"end": 22231,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22209,
											"end": 22231,
											"name": "SWAP1"
										},
										{
											"begin": 22209,
											"end": 22231,
											"name": "DUP2"
										},
										{
											"begin": 22209,
											"end": 22231,
											"name": "MSTORE"
										},
										{
											"begin": 22209,
											"end": 22220,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 22209,
											"end": 22231,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22209,
											"end": 22231,
											"name": "SWAP1"
										},
										{
											"begin": 22209,
											"end": 22231,
											"name": "DUP2"
										},
										{
											"begin": 22209,
											"end": 22231,
											"name": "MSTORE"
										},
										{
											"begin": 22209,
											"end": 22231,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22209,
											"end": 22231,
											"name": "DUP1"
										},
										{
											"begin": 22209,
											"end": 22231,
											"name": "DUP4"
										},
										{
											"begin": 22209,
											"end": 22231,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 22232,
											"end": 22248,
											"name": "DUP9"
										},
										{
											"begin": 22232,
											"end": 22248,
											"name": "ADD"
										},
										{
											"begin": 22209,
											"end": 22249,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 22209,
											"end": 22249,
											"name": "AND"
										},
										{
											"begin": 22209,
											"end": 22249,
											"name": "DUP5"
										},
										{
											"begin": 22209,
											"end": 22249,
											"name": "MSTORE"
										},
										{
											"begin": 22209,
											"end": 22249,
											"name": "SWAP1"
										},
										{
											"begin": 22209,
											"end": 22249,
											"name": "SWAP2"
										},
										{
											"begin": 22209,
											"end": 22249,
											"name": "MSTORE"
										},
										{
											"begin": 22209,
											"end": 22249,
											"name": "SWAP1"
										},
										{
											"begin": 22209,
											"end": 22249,
											"name": "KECCAK256"
										},
										{
											"begin": 22209,
											"end": 22266,
											"name": "DUP1"
										},
										{
											"begin": 22209,
											"end": 22266,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF00000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 22209,
											"end": 22266,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 22209,
											"end": 22266,
											"name": "DUP6"
										},
										{
											"begin": 22209,
											"end": 22266,
											"name": "AND"
										},
										{
											"begin": 22209,
											"end": 22266,
											"name": "MUL"
										},
										{
											"begin": 22209,
											"end": 22266,
											"name": "OR"
										},
										{
											"begin": 22209,
											"end": 22266,
											"name": "SWAP1"
										},
										{
											"begin": 22209,
											"end": 22266,
											"name": "SSTORE"
										},
										{
											"begin": 22106,
											"end": 22430,
											"name": "PUSH [tag]",
											"value": "333"
										},
										{
											"begin": 22106,
											"end": 22430,
											"name": "JUMP"
										},
										{
											"begin": 22106,
											"end": 22430,
											"name": "tag",
											"value": "332"
										},
										{
											"begin": 22106,
											"end": 22430,
											"name": "JUMPDEST"
										},
										{
											"begin": 22332,
											"end": 22365,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22332,
											"end": 22365,
											"name": "DUP1"
										},
										{
											"begin": 22332,
											"end": 22365,
											"name": "MLOAD"
										},
										{
											"begin": 22332,
											"end": 22365,
											"name": "DUP1"
										},
										{
											"begin": 22332,
											"end": 22365,
											"name": "DUP3"
										},
										{
											"begin": 22332,
											"end": 22365,
											"name": "ADD"
										},
										{
											"begin": 22332,
											"end": 22365,
											"name": "DUP3"
										},
										{
											"begin": 22332,
											"end": 22365,
											"name": "MSTORE"
										},
										{
											"begin": 22332,
											"end": 22365,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 22332,
											"end": 22365,
											"name": "DUP1"
										},
										{
											"begin": 22332,
											"end": 22365,
											"name": "DUP5"
										},
										{
											"begin": 22332,
											"end": 22365,
											"name": "AND"
										},
										{
											"begin": 22332,
											"end": 22365,
											"name": "DUP3"
										},
										{
											"begin": 22332,
											"end": 22365,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 22332,
											"end": 22365,
											"name": "DUP1"
										},
										{
											"begin": 22332,
											"end": 22365,
											"name": "DUP7"
										},
										{
											"begin": 22332,
											"end": 22365,
											"name": "AND"
										},
										{
											"begin": 22332,
											"end": 22365,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22332,
											"end": 22365,
											"name": "DUP1"
										},
										{
											"begin": 22332,
											"end": 22365,
											"name": "DUP6"
										},
										{
											"begin": 22332,
											"end": 22365,
											"name": "ADD"
										},
										{
											"begin": 22332,
											"end": 22365,
											"name": "SWAP2"
										},
										{
											"begin": 22332,
											"end": 22365,
											"name": "DUP3"
										},
										{
											"begin": 22332,
											"end": 22365,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 22293,
											"end": 22315,
											"name": "DUP12"
										},
										{
											"begin": 22293,
											"end": 22315,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22293,
											"end": 22315,
											"name": "DUP2"
										},
										{
											"begin": 22293,
											"end": 22315,
											"name": "DUP2"
										},
										{
											"begin": 22293,
											"end": 22315,
											"name": "MSTORE"
										},
										{
											"begin": 22293,
											"end": 22304,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 22293,
											"end": 22315,
											"name": "DUP4"
										},
										{
											"begin": 22293,
											"end": 22315,
											"name": "MSTORE"
										},
										{
											"begin": 22293,
											"end": 22315,
											"name": "DUP8"
										},
										{
											"begin": 22293,
											"end": 22315,
											"name": "DUP2"
										},
										{
											"begin": 22293,
											"end": 22315,
											"name": "KECCAK256"
										},
										{
											"begin": 22293,
											"end": 22329,
											"name": "DUP13"
										},
										{
											"begin": 22293,
											"end": 22329,
											"name": "DUP8"
										},
										{
											"begin": 22293,
											"end": 22329,
											"name": "AND"
										},
										{
											"begin": 22293,
											"end": 22329,
											"name": "DUP3"
										},
										{
											"begin": 22293,
											"end": 22329,
											"name": "MSTORE"
										},
										{
											"begin": 22293,
											"end": 22329,
											"name": "DUP4"
										},
										{
											"begin": 22293,
											"end": 22329,
											"name": "MSTORE"
										},
										{
											"begin": 22293,
											"end": 22329,
											"name": "DUP8"
										},
										{
											"begin": 22293,
											"end": 22329,
											"name": "DUP2"
										},
										{
											"begin": 22293,
											"end": 22329,
											"name": "KECCAK256"
										},
										{
											"begin": 22293,
											"end": 22365,
											"name": "SWAP7"
										},
										{
											"begin": 22293,
											"end": 22365,
											"name": "MLOAD"
										},
										{
											"begin": 22293,
											"end": 22365,
											"name": "DUP8"
										},
										{
											"begin": 22293,
											"end": 22365,
											"name": "SLOAD"
										},
										{
											"begin": 22293,
											"end": 22365,
											"name": "SWAP5"
										},
										{
											"begin": 22293,
											"end": 22365,
											"name": "MLOAD"
										},
										{
											"begin": 22293,
											"end": 22365,
											"name": "SWAP1"
										},
										{
											"begin": 22293,
											"end": 22365,
											"name": "SWAP6"
										},
										{
											"begin": 22293,
											"end": 22365,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 22293,
											"end": 22365,
											"name": "MUL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF00000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 22293,
											"end": 22365,
											"name": "SWAP6"
										},
										{
											"begin": 22293,
											"end": 22365,
											"name": "DUP8"
										},
										{
											"begin": 22293,
											"end": 22365,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 22293,
											"end": 22365,
											"name": "SWAP6"
										},
										{
											"begin": 22293,
											"end": 22365,
											"name": "DUP7"
										},
										{
											"begin": 22293,
											"end": 22365,
											"name": "AND"
										},
										{
											"begin": 22293,
											"end": 22365,
											"name": "OR"
										},
										{
											"begin": 22293,
											"end": 22365,
											"name": "SWAP6"
										},
										{
											"begin": 22293,
											"end": 22365,
											"name": "SWAP1"
										},
										{
											"begin": 22293,
											"end": 22365,
											"name": "SWAP6"
										},
										{
											"begin": 22293,
											"end": 22365,
											"name": "AND"
										},
										{
											"begin": 22293,
											"end": 22365,
											"name": "SWAP5"
										},
										{
											"begin": 22293,
											"end": 22365,
											"name": "SWAP1"
										},
										{
											"begin": 22293,
											"end": 22365,
											"name": "SWAP5"
										},
										{
											"begin": 22293,
											"end": 22365,
											"name": "OR"
										},
										{
											"begin": 22293,
											"end": 22365,
											"name": "SWAP1"
										},
										{
											"begin": 22293,
											"end": 22365,
											"name": "SWAP6"
										},
										{
											"begin": 22293,
											"end": 22365,
											"name": "SSTORE"
										},
										{
											"begin": 22377,
											"end": 22402,
											"name": "SWAP4"
										},
										{
											"begin": 22377,
											"end": 22402,
											"name": "DUP3"
										},
										{
											"begin": 22377,
											"end": 22402,
											"name": "MSTORE"
										},
										{
											"begin": 22377,
											"end": 22391,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 22377,
											"end": 22402,
											"name": "SWAP1"
										},
										{
											"begin": 22377,
											"end": 22402,
											"name": "SWAP4"
										},
										{
											"begin": 22377,
											"end": 22402,
											"name": "MSTORE"
										},
										{
											"begin": 22377,
											"end": 22402,
											"name": "SWAP3"
										},
										{
											"begin": 22377,
											"end": 22402,
											"name": "SWAP1"
										},
										{
											"begin": 22377,
											"end": 22402,
											"name": "SWAP3"
										},
										{
											"begin": 22377,
											"end": 22402,
											"name": "KECCAK256"
										},
										{
											"begin": 22377,
											"end": 22421,
											"name": "DUP1"
										},
										{
											"begin": 22377,
											"end": 22421,
											"name": "SLOAD"
										},
										{
											"begin": 22293,
											"end": 22365,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 22405,
											"end": 22421,
											"name": "DUP9"
										},
										{
											"begin": 22405,
											"end": 22421,
											"name": "ADD"
										},
										{
											"begin": 22377,
											"end": 22421,
											"name": "SWAP1"
										},
										{
											"begin": 22377,
											"end": 22421,
											"name": "SWAP4"
										},
										{
											"begin": 22377,
											"end": 22421,
											"name": "AND"
										},
										{
											"begin": 22377,
											"end": 22421,
											"name": "SWAP3"
										},
										{
											"begin": 22377,
											"end": 22421,
											"name": "SWAP1"
										},
										{
											"begin": 22377,
											"end": 22421,
											"name": "SWAP2"
										},
										{
											"begin": 22377,
											"end": 22421,
											"name": "AND"
										},
										{
											"begin": 22377,
											"end": 22421,
											"name": "SWAP2"
										},
										{
											"begin": 22377,
											"end": 22421,
											"name": "SWAP1"
										},
										{
											"begin": 22377,
											"end": 22421,
											"name": "SWAP2"
										},
										{
											"begin": 22377,
											"end": 22421,
											"name": "OR"
										},
										{
											"begin": 22377,
											"end": 22421,
											"name": "SWAP1"
										},
										{
											"begin": 22377,
											"end": 22421,
											"name": "SSTORE"
										},
										{
											"begin": 22106,
											"end": 22430,
											"name": "tag",
											"value": "333"
										},
										{
											"begin": 22106,
											"end": 22430,
											"name": "JUMPDEST"
										},
										{
											"begin": 22464,
											"end": 22473,
											"name": "DUP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 22443,
											"end": 22494,
											"name": "AND"
										},
										{
											"begin": 22443,
											"end": 22494,
											"name": "PUSH",
											"value": "DEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724"
										},
										{
											"begin": 22475,
											"end": 22483,
											"name": "DUP5"
										},
										{
											"begin": 22485,
											"end": 22493,
											"name": "DUP5"
										},
										{
											"begin": 22443,
											"end": 22494,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22443,
											"end": 22494,
											"name": "MLOAD"
										},
										{
											"begin": 22443,
											"end": 22494,
											"name": "PUSH [tag]",
											"value": "334"
										},
										{
											"begin": 22443,
											"end": 22494,
											"name": "SWAP3"
										},
										{
											"begin": 22443,
											"end": 22494,
											"name": "SWAP2"
										},
										{
											"begin": 22443,
											"end": 22494,
											"name": "SWAP1"
										},
										{
											"begin": 22443,
											"end": 22494,
											"name": "PUSH [tag]",
											"value": "335"
										},
										{
											"begin": 22443,
											"end": 22494,
											"name": "JUMP"
										},
										{
											"begin": 22443,
											"end": 22494,
											"name": "tag",
											"value": "334"
										},
										{
											"begin": 22443,
											"end": 22494,
											"name": "JUMPDEST"
										},
										{
											"begin": 22443,
											"end": 22494,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22443,
											"end": 22494,
											"name": "MLOAD"
										},
										{
											"begin": 22443,
											"end": 22494,
											"name": "DUP1"
										},
										{
											"begin": 22443,
											"end": 22494,
											"name": "SWAP2"
										},
										{
											"begin": 22443,
											"end": 22494,
											"name": "SUB"
										},
										{
											"begin": 22443,
											"end": 22494,
											"name": "SWAP1"
										},
										{
											"begin": 22443,
											"end": 22494,
											"name": "LOG2"
										},
										{
											"begin": 21884,
											"end": 22501,
											"name": "POP"
										},
										{
											"begin": 21884,
											"end": 22501,
											"name": "POP"
										},
										{
											"begin": 21884,
											"end": 22501,
											"name": "POP"
										},
										{
											"begin": 21884,
											"end": 22501,
											"name": "POP"
										},
										{
											"begin": 21884,
											"end": 22501,
											"name": "POP"
										},
										{
											"begin": 21884,
											"end": 22501,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 22507,
											"end": 22665,
											"name": "tag",
											"value": "330"
										},
										{
											"begin": 22507,
											"end": 22665,
											"name": "JUMPDEST"
										},
										{
											"begin": 22582,
											"end": 22588,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22619,
											"end": 22631,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 22608,
											"end": 22617,
											"name": "DUP5"
										},
										{
											"begin": 22608,
											"end": 22617,
											"name": "LT"
										},
										{
											"begin": 22600,
											"end": 22632,
											"name": "PUSH [tag]",
											"value": "274"
										},
										{
											"begin": 22600,
											"end": 22632,
											"name": "JUMPI"
										},
										{
											"begin": 22600,
											"end": 22632,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22600,
											"end": 22632,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 22600,
											"end": 22632,
											"name": "DUP2"
										},
										{
											"begin": 22600,
											"end": 22632,
											"name": "MSTORE"
										},
										{
											"begin": 22600,
											"end": 22632,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 22600,
											"end": 22632,
											"name": "ADD"
										},
										{
											"begin": 22600,
											"end": 22632,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 22600,
											"end": 22632,
											"name": "SWAP2"
										},
										{
											"begin": 22600,
											"end": 22632,
											"name": "SWAP1"
										},
										{
											"begin": 22600,
											"end": 22632,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 22600,
											"end": 22632,
											"name": "JUMP"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "tag",
											"value": "206"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMPDEST"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "DUP1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "MLOAD"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "DUP1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "DUP3"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "ADD"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "SWAP1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "SWAP2"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "DUP1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "DUP3"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "MSTORE"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "DUP3"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "ADD"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "MSTORE"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "SWAP1"
										},
										{
											"begin": 6581,
											"end": 23344,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5,
											"end": 135,
											"name": "tag",
											"value": "340"
										},
										{
											"begin": 5,
											"end": 135,
											"name": "JUMPDEST"
										},
										{
											"begin": 72,
											"end": 92,
											"name": "DUP1"
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 72,
											"end": 92,
											"name": "DUP2"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"value": "342"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP"
										},
										{
											"begin": 142,
											"end": 272,
											"name": "tag",
											"value": "343"
										},
										{
											"begin": 142,
											"end": 272,
											"name": "JUMPDEST"
										},
										{
											"begin": 209,
											"end": 229,
											"name": "DUP1"
										},
										{
											"begin": 209,
											"end": 229,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 234,
											"end": 267,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 209,
											"end": 229,
											"name": "DUP2"
										},
										{
											"begin": 234,
											"end": 267,
											"name": "PUSH [tag]",
											"value": "345"
										},
										{
											"begin": 234,
											"end": 267,
											"name": "JUMP"
										},
										{
											"begin": 416,
											"end": 544,
											"name": "tag",
											"value": "349"
										},
										{
											"begin": 416,
											"end": 544,
											"name": "JUMPDEST"
										},
										{
											"begin": 482,
											"end": 502,
											"name": "DUP1"
										},
										{
											"begin": 482,
											"end": 502,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 507,
											"end": 539,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 482,
											"end": 502,
											"name": "DUP2"
										},
										{
											"begin": 507,
											"end": 539,
											"name": "PUSH [tag]",
											"value": "351"
										},
										{
											"begin": 507,
											"end": 539,
											"name": "JUMP"
										},
										{
											"begin": 551,
											"end": 677,
											"name": "tag",
											"value": "352"
										},
										{
											"begin": 551,
											"end": 677,
											"name": "JUMPDEST"
										},
										{
											"begin": 616,
											"end": 636,
											"name": "DUP1"
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 641,
											"end": 672,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 616,
											"end": 636,
											"name": "DUP2"
										},
										{
											"begin": 641,
											"end": 672,
											"name": "PUSH [tag]",
											"value": "354"
										},
										{
											"begin": 641,
											"end": 672,
											"name": "JUMP"
										},
										{
											"begin": 684,
											"end": 925,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 684,
											"end": 925,
											"name": "JUMPDEST"
										},
										{
											"begin": 684,
											"end": 925,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 788,
											"end": 790,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 776,
											"end": 785,
											"name": "DUP3"
										},
										{
											"begin": 767,
											"end": 774,
											"name": "DUP5"
										},
										{
											"begin": 763,
											"end": 786,
											"name": "SUB"
										},
										{
											"begin": 759,
											"end": 791,
											"name": "SLT"
										},
										{
											"begin": 756,
											"end": 758,
											"name": "ISZERO"
										},
										{
											"begin": 756,
											"end": 758,
											"name": "PUSH [tag]",
											"value": "355"
										},
										{
											"begin": 756,
											"end": 758,
											"name": "JUMPI"
										},
										{
											"begin": 804,
											"end": 805,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 801,
											"end": 802,
											"name": "DUP1"
										},
										{
											"begin": 794,
											"end": 806,
											"name": "REVERT"
										},
										{
											"begin": 756,
											"end": 758,
											"name": "tag",
											"value": "355"
										},
										{
											"begin": 756,
											"end": 758,
											"name": "JUMPDEST"
										},
										{
											"begin": 839,
											"end": 840,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 856,
											"end": 909,
											"name": "PUSH [tag]",
											"value": "356"
										},
										{
											"begin": 901,
											"end": 908,
											"name": "DUP5"
										},
										{
											"begin": 881,
											"end": 890,
											"name": "DUP5"
										},
										{
											"begin": 856,
											"end": 909,
											"name": "PUSH [tag]",
											"value": "340"
										},
										{
											"begin": 856,
											"end": 909,
											"name": "JUMP"
										},
										{
											"begin": 856,
											"end": 909,
											"name": "tag",
											"value": "356"
										},
										{
											"begin": 856,
											"end": 909,
											"name": "JUMPDEST"
										},
										{
											"begin": 846,
											"end": 909,
											"name": "SWAP5"
										},
										{
											"begin": 750,
											"end": 925,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 750,
											"end": 925,
											"name": "JUMP"
										},
										{
											"begin": 932,
											"end": 1298,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 932,
											"end": 1298,
											"name": "JUMPDEST"
										},
										{
											"begin": 932,
											"end": 1298,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 932,
											"end": 1298,
											"name": "DUP1"
										},
										{
											"begin": 1053,
											"end": 1055,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1041,
											"end": 1050,
											"name": "DUP4"
										},
										{
											"begin": 1032,
											"end": 1039,
											"name": "DUP6"
										},
										{
											"begin": 1028,
											"end": 1051,
											"name": "SUB"
										},
										{
											"begin": 1024,
											"end": 1056,
											"name": "SLT"
										},
										{
											"begin": 1021,
											"end": 1023,
											"name": "ISZERO"
										},
										{
											"begin": 1021,
											"end": 1023,
											"name": "PUSH [tag]",
											"value": "357"
										},
										{
											"begin": 1021,
											"end": 1023,
											"name": "JUMPI"
										},
										{
											"begin": 1069,
											"end": 1070,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1067,
											"name": "DUP1"
										},
										{
											"begin": 1059,
											"end": 1071,
											"name": "REVERT"
										},
										{
											"begin": 1021,
											"end": 1023,
											"name": "tag",
											"value": "357"
										},
										{
											"begin": 1021,
											"end": 1023,
											"name": "JUMPDEST"
										},
										{
											"begin": 1104,
											"end": 1105,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1174,
											"name": "PUSH [tag]",
											"value": "358"
										},
										{
											"begin": 1166,
											"end": 1173,
											"name": "DUP6"
										},
										{
											"begin": 1146,
											"end": 1155,
											"name": "DUP6"
										},
										{
											"begin": 1121,
											"end": 1174,
											"name": "PUSH [tag]",
											"value": "340"
										},
										{
											"begin": 1121,
											"end": 1174,
											"name": "JUMP"
										},
										{
											"begin": 1121,
											"end": 1174,
											"name": "tag",
											"value": "358"
										},
										{
											"begin": 1121,
											"end": 1174,
											"name": "JUMPDEST"
										},
										{
											"begin": 1111,
											"end": 1174,
											"name": "SWAP3"
										},
										{
											"begin": 1111,
											"end": 1174,
											"name": "POP"
										},
										{
											"begin": 1083,
											"end": 1180,
											"name": "POP"
										},
										{
											"begin": 1211,
											"end": 1213,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1229,
											"end": 1282,
											"name": "PUSH [tag]",
											"value": "359"
										},
										{
											"begin": 1274,
											"end": 1281,
											"name": "DUP6"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "DUP3"
										},
										{
											"begin": 1254,
											"end": 1263,
											"name": "DUP7"
										},
										{
											"begin": 1250,
											"end": 1272,
											"name": "ADD"
										},
										{
											"begin": 1229,
											"end": 1282,
											"name": "PUSH [tag]",
											"value": "340"
										},
										{
											"begin": 1229,
											"end": 1282,
											"name": "JUMP"
										},
										{
											"begin": 1229,
											"end": 1282,
											"name": "tag",
											"value": "359"
										},
										{
											"begin": 1229,
											"end": 1282,
											"name": "JUMPDEST"
										},
										{
											"begin": 1219,
											"end": 1282,
											"name": "SWAP2"
										},
										{
											"begin": 1219,
											"end": 1282,
											"name": "POP"
										},
										{
											"begin": 1190,
											"end": 1288,
											"name": "POP"
										},
										{
											"begin": 1015,
											"end": 1298,
											"name": "SWAP3"
										},
										{
											"begin": 1015,
											"end": 1298,
											"name": "POP"
										},
										{
											"begin": 1015,
											"end": 1298,
											"name": "SWAP3"
										},
										{
											"begin": 1015,
											"end": 1298,
											"name": "SWAP1"
										},
										{
											"begin": 1015,
											"end": 1298,
											"name": "POP"
										},
										{
											"begin": 1015,
											"end": 1298,
											"name": "JUMP"
										},
										{
											"begin": 1305,
											"end": 1796,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 1305,
											"end": 1796,
											"name": "JUMPDEST"
										},
										{
											"begin": 1305,
											"end": 1796,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1796,
											"name": "DUP1"
										},
										{
											"begin": 1305,
											"end": 1796,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 1445,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1431,
											"end": 1440,
											"name": "DUP5"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "DUP7"
										},
										{
											"begin": 1418,
											"end": 1441,
											"name": "SUB"
										},
										{
											"begin": 1414,
											"end": 1446,
											"name": "SLT"
										},
										{
											"begin": 1411,
											"end": 1413,
											"name": "ISZERO"
										},
										{
											"begin": 1411,
											"end": 1413,
											"name": "PUSH [tag]",
											"value": "360"
										},
										{
											"begin": 1411,
											"end": 1413,
											"name": "JUMPI"
										},
										{
											"begin": 1459,
											"end": 1460,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "DUP1"
										},
										{
											"begin": 1449,
											"end": 1461,
											"name": "REVERT"
										},
										{
											"begin": 1411,
											"end": 1413,
											"name": "tag",
											"value": "360"
										},
										{
											"begin": 1411,
											"end": 1413,
											"name": "JUMPDEST"
										},
										{
											"begin": 1494,
											"end": 1495,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1511,
											"end": 1564,
											"name": "PUSH [tag]",
											"value": "361"
										},
										{
											"begin": 1556,
											"end": 1563,
											"name": "DUP7"
										},
										{
											"begin": 1536,
											"end": 1545,
											"name": "DUP7"
										},
										{
											"begin": 1511,
											"end": 1564,
											"name": "PUSH [tag]",
											"value": "340"
										},
										{
											"begin": 1511,
											"end": 1564,
											"name": "JUMP"
										},
										{
											"begin": 1511,
											"end": 1564,
											"name": "tag",
											"value": "361"
										},
										{
											"begin": 1511,
											"end": 1564,
											"name": "JUMPDEST"
										},
										{
											"begin": 1501,
											"end": 1564,
											"name": "SWAP4"
										},
										{
											"begin": 1501,
											"end": 1564,
											"name": "POP"
										},
										{
											"begin": 1473,
											"end": 1570,
											"name": "POP"
										},
										{
											"begin": 1601,
											"end": 1603,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1619,
											"end": 1672,
											"name": "PUSH [tag]",
											"value": "362"
										},
										{
											"begin": 1664,
											"end": 1671,
											"name": "DUP7"
										},
										{
											"begin": 1655,
											"end": 1661,
											"name": "DUP3"
										},
										{
											"begin": 1644,
											"end": 1653,
											"name": "DUP8"
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "ADD"
										},
										{
											"begin": 1619,
											"end": 1672,
											"name": "PUSH [tag]",
											"value": "340"
										},
										{
											"begin": 1619,
											"end": 1672,
											"name": "JUMP"
										},
										{
											"begin": 1619,
											"end": 1672,
											"name": "tag",
											"value": "362"
										},
										{
											"begin": 1619,
											"end": 1672,
											"name": "JUMPDEST"
										},
										{
											"begin": 1609,
											"end": 1672,
											"name": "SWAP3"
										},
										{
											"begin": 1609,
											"end": 1672,
											"name": "POP"
										},
										{
											"begin": 1580,
											"end": 1678,
											"name": "POP"
										},
										{
											"begin": 1709,
											"end": 1711,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1727,
											"end": 1780,
											"name": "PUSH [tag]",
											"value": "363"
										},
										{
											"begin": 1772,
											"end": 1779,
											"name": "DUP7"
										},
										{
											"begin": 1763,
											"end": 1769,
											"name": "DUP3"
										},
										{
											"begin": 1752,
											"end": 1761,
											"name": "DUP8"
										},
										{
											"begin": 1748,
											"end": 1770,
											"name": "ADD"
										},
										{
											"begin": 1727,
											"end": 1780,
											"name": "PUSH [tag]",
											"value": "343"
										},
										{
											"begin": 1727,
											"end": 1780,
											"name": "JUMP"
										},
										{
											"begin": 1727,
											"end": 1780,
											"name": "tag",
											"value": "363"
										},
										{
											"begin": 1727,
											"end": 1780,
											"name": "JUMPDEST"
										},
										{
											"begin": 1717,
											"end": 1780,
											"name": "SWAP2"
										},
										{
											"begin": 1717,
											"end": 1780,
											"name": "POP"
										},
										{
											"begin": 1688,
											"end": 1786,
											"name": "POP"
										},
										{
											"begin": 1405,
											"end": 1796,
											"name": "SWAP3"
										},
										{
											"begin": 1405,
											"end": 1796,
											"name": "POP"
										},
										{
											"begin": 1405,
											"end": 1796,
											"name": "SWAP3"
										},
										{
											"begin": 1405,
											"end": 1796,
											"name": "POP"
										},
										{
											"begin": 1405,
											"end": 1796,
											"name": "SWAP3"
										},
										{
											"begin": 1405,
											"end": 1796,
											"name": "JUMP"
										},
										{
											"begin": 1803,
											"end": 2794,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 1803,
											"end": 2794,
											"name": "JUMPDEST"
										},
										{
											"begin": 1803,
											"end": 2794,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1803,
											"end": 2794,
											"name": "DUP1"
										},
										{
											"begin": 1803,
											"end": 2794,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1803,
											"end": 2794,
											"name": "DUP1"
										},
										{
											"begin": 1803,
											"end": 2794,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1803,
											"end": 2794,
											"name": "DUP1"
										},
										{
											"begin": 1803,
											"end": 2794,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2007,
											"end": 2010,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1995,
											"end": 2004,
											"name": "DUP9"
										},
										{
											"begin": 1986,
											"end": 1993,
											"name": "DUP11"
										},
										{
											"begin": 1982,
											"end": 2005,
											"name": "SUB"
										},
										{
											"begin": 1978,
											"end": 2011,
											"name": "SLT"
										},
										{
											"begin": 1975,
											"end": 1977,
											"name": "ISZERO"
										},
										{
											"begin": 1975,
											"end": 1977,
											"name": "PUSH [tag]",
											"value": "364"
										},
										{
											"begin": 1975,
											"end": 1977,
											"name": "JUMPI"
										},
										{
											"begin": 2024,
											"end": 2025,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2022,
											"name": "DUP1"
										},
										{
											"begin": 2014,
											"end": 2026,
											"name": "REVERT"
										},
										{
											"begin": 1975,
											"end": 1977,
											"name": "tag",
											"value": "364"
										},
										{
											"begin": 1975,
											"end": 1977,
											"name": "JUMPDEST"
										},
										{
											"begin": 2059,
											"end": 2060,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2129,
											"name": "PUSH [tag]",
											"value": "365"
										},
										{
											"begin": 2121,
											"end": 2128,
											"name": "DUP11"
										},
										{
											"begin": 2101,
											"end": 2110,
											"name": "DUP11"
										},
										{
											"begin": 2076,
											"end": 2129,
											"name": "PUSH [tag]",
											"value": "340"
										},
										{
											"begin": 2076,
											"end": 2129,
											"name": "JUMP"
										},
										{
											"begin": 2076,
											"end": 2129,
											"name": "tag",
											"value": "365"
										},
										{
											"begin": 2076,
											"end": 2129,
											"name": "JUMPDEST"
										},
										{
											"begin": 2066,
											"end": 2129,
											"name": "SWAP8"
										},
										{
											"begin": 2066,
											"end": 2129,
											"name": "POP"
										},
										{
											"begin": 2038,
											"end": 2135,
											"name": "POP"
										},
										{
											"begin": 2166,
											"end": 2168,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2184,
											"end": 2237,
											"name": "PUSH [tag]",
											"value": "366"
										},
										{
											"begin": 2229,
											"end": 2236,
											"name": "DUP11"
										},
										{
											"begin": 2220,
											"end": 2226,
											"name": "DUP3"
										},
										{
											"begin": 2209,
											"end": 2218,
											"name": "DUP12"
										},
										{
											"begin": 2205,
											"end": 2227,
											"name": "ADD"
										},
										{
											"begin": 2184,
											"end": 2237,
											"name": "PUSH [tag]",
											"value": "340"
										},
										{
											"begin": 2184,
											"end": 2237,
											"name": "JUMP"
										},
										{
											"begin": 2184,
											"end": 2237,
											"name": "tag",
											"value": "366"
										},
										{
											"begin": 2184,
											"end": 2237,
											"name": "JUMPDEST"
										},
										{
											"begin": 2174,
											"end": 2237,
											"name": "SWAP7"
										},
										{
											"begin": 2174,
											"end": 2237,
											"name": "POP"
										},
										{
											"begin": 2145,
											"end": 2243,
											"name": "POP"
										},
										{
											"begin": 2274,
											"end": 2276,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2292,
											"end": 2345,
											"name": "PUSH [tag]",
											"value": "367"
										},
										{
											"begin": 2337,
											"end": 2344,
											"name": "DUP11"
										},
										{
											"begin": 2328,
											"end": 2334,
											"name": "DUP3"
										},
										{
											"begin": 2317,
											"end": 2326,
											"name": "DUP12"
										},
										{
											"begin": 2313,
											"end": 2335,
											"name": "ADD"
										},
										{
											"begin": 2292,
											"end": 2345,
											"name": "PUSH [tag]",
											"value": "343"
										},
										{
											"begin": 2292,
											"end": 2345,
											"name": "JUMP"
										},
										{
											"begin": 2292,
											"end": 2345,
											"name": "tag",
											"value": "367"
										},
										{
											"begin": 2292,
											"end": 2345,
											"name": "JUMPDEST"
										},
										{
											"begin": 2282,
											"end": 2345,
											"name": "SWAP6"
										},
										{
											"begin": 2282,
											"end": 2345,
											"name": "POP"
										},
										{
											"begin": 2253,
											"end": 2351,
											"name": "POP"
										},
										{
											"begin": 2382,
											"end": 2384,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 2400,
											"end": 2453,
											"name": "PUSH [tag]",
											"value": "368"
										},
										{
											"begin": 2445,
											"end": 2452,
											"name": "DUP11"
										},
										{
											"begin": 2436,
											"end": 2442,
											"name": "DUP3"
										},
										{
											"begin": 2425,
											"end": 2434,
											"name": "DUP12"
										},
										{
											"begin": 2421,
											"end": 2443,
											"name": "ADD"
										},
										{
											"begin": 2400,
											"end": 2453,
											"name": "PUSH [tag]",
											"value": "343"
										},
										{
											"begin": 2400,
											"end": 2453,
											"name": "JUMP"
										},
										{
											"begin": 2400,
											"end": 2453,
											"name": "tag",
											"value": "368"
										},
										{
											"begin": 2400,
											"end": 2453,
											"name": "JUMPDEST"
										},
										{
											"begin": 2390,
											"end": 2453,
											"name": "SWAP5"
										},
										{
											"begin": 2390,
											"end": 2453,
											"name": "POP"
										},
										{
											"begin": 2361,
											"end": 2459,
											"name": "POP"
										},
										{
											"begin": 2490,
											"end": 2493,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 2509,
											"end": 2560,
											"name": "PUSH [tag]",
											"value": "369"
										},
										{
											"begin": 2552,
											"end": 2559,
											"name": "DUP11"
										},
										{
											"begin": 2543,
											"end": 2549,
											"name": "DUP3"
										},
										{
											"begin": 2532,
											"end": 2541,
											"name": "DUP12"
										},
										{
											"begin": 2528,
											"end": 2550,
											"name": "ADD"
										},
										{
											"begin": 2509,
											"end": 2560,
											"name": "PUSH [tag]",
											"value": "352"
										},
										{
											"begin": 2509,
											"end": 2560,
											"name": "JUMP"
										},
										{
											"begin": 2509,
											"end": 2560,
											"name": "tag",
											"value": "369"
										},
										{
											"begin": 2509,
											"end": 2560,
											"name": "JUMPDEST"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "SWAP4"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "POP"
										},
										{
											"begin": 2469,
											"end": 2566,
											"name": "POP"
										},
										{
											"begin": 2597,
											"end": 2600,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 2616,
											"end": 2669,
											"name": "PUSH [tag]",
											"value": "370"
										},
										{
											"begin": 2661,
											"end": 2668,
											"name": "DUP11"
										},
										{
											"begin": 2652,
											"end": 2658,
											"name": "DUP3"
										},
										{
											"begin": 2641,
											"end": 2650,
											"name": "DUP12"
										},
										{
											"begin": 2637,
											"end": 2659,
											"name": "ADD"
										},
										{
											"begin": 2616,
											"end": 2669,
											"name": "PUSH [tag]",
											"value": "343"
										},
										{
											"begin": 2616,
											"end": 2669,
											"name": "JUMP"
										},
										{
											"begin": 2616,
											"end": 2669,
											"name": "tag",
											"value": "370"
										},
										{
											"begin": 2616,
											"end": 2669,
											"name": "JUMPDEST"
										},
										{
											"begin": 2606,
											"end": 2669,
											"name": "SWAP3"
										},
										{
											"begin": 2606,
											"end": 2669,
											"name": "POP"
										},
										{
											"begin": 2576,
											"end": 2675,
											"name": "POP"
										},
										{
											"begin": 2706,
											"end": 2709,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 2725,
											"end": 2778,
											"name": "PUSH [tag]",
											"value": "371"
										},
										{
											"begin": 2770,
											"end": 2777,
											"name": "DUP11"
										},
										{
											"begin": 2761,
											"end": 2767,
											"name": "DUP3"
										},
										{
											"begin": 2750,
											"end": 2759,
											"name": "DUP12"
										},
										{
											"begin": 2746,
											"end": 2768,
											"name": "ADD"
										},
										{
											"begin": 2725,
											"end": 2778,
											"name": "PUSH [tag]",
											"value": "343"
										},
										{
											"begin": 2725,
											"end": 2778,
											"name": "JUMP"
										},
										{
											"begin": 2725,
											"end": 2778,
											"name": "tag",
											"value": "371"
										},
										{
											"begin": 2725,
											"end": 2778,
											"name": "JUMPDEST"
										},
										{
											"begin": 2715,
											"end": 2778,
											"name": "SWAP2"
										},
										{
											"begin": 2715,
											"end": 2778,
											"name": "POP"
										},
										{
											"begin": 2685,
											"end": 2784,
											"name": "POP"
										},
										{
											"begin": 1969,
											"end": 2794,
											"name": "SWAP3"
										},
										{
											"begin": 1969,
											"end": 2794,
											"name": "SWAP6"
										},
										{
											"begin": 1969,
											"end": 2794,
											"name": "SWAP9"
										},
										{
											"begin": 1969,
											"end": 2794,
											"name": "SWAP2"
										},
										{
											"begin": 1969,
											"end": 2794,
											"name": "SWAP5"
										},
										{
											"begin": 1969,
											"end": 2794,
											"name": "SWAP8"
										},
										{
											"begin": 1969,
											"end": 2794,
											"name": "POP"
										},
										{
											"begin": 1969,
											"end": 2794,
											"name": "SWAP3"
										},
										{
											"begin": 1969,
											"end": 2794,
											"name": "SWAP6"
										},
										{
											"begin": 1969,
											"end": 2794,
											"name": "POP"
										},
										{
											"begin": 1969,
											"end": 2794,
											"name": "JUMP"
										},
										{
											"begin": 2801,
											"end": 3167,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 2801,
											"end": 3167,
											"name": "JUMPDEST"
										},
										{
											"begin": 2801,
											"end": 3167,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2801,
											"end": 3167,
											"name": "DUP1"
										},
										{
											"begin": 2922,
											"end": 2924,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2910,
											"end": 2919,
											"name": "DUP4"
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "DUP6"
										},
										{
											"begin": 2897,
											"end": 2920,
											"name": "SUB"
										},
										{
											"begin": 2893,
											"end": 2925,
											"name": "SLT"
										},
										{
											"begin": 2890,
											"end": 2892,
											"name": "ISZERO"
										},
										{
											"begin": 2890,
											"end": 2892,
											"name": "PUSH [tag]",
											"value": "372"
										},
										{
											"begin": 2890,
											"end": 2892,
											"name": "JUMPI"
										},
										{
											"begin": 2938,
											"end": 2939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2935,
											"end": 2936,
											"name": "DUP1"
										},
										{
											"begin": 2928,
											"end": 2940,
											"name": "REVERT"
										},
										{
											"begin": 2890,
											"end": 2892,
											"name": "tag",
											"value": "372"
										},
										{
											"begin": 2890,
											"end": 2892,
											"name": "JUMPDEST"
										},
										{
											"begin": 2973,
											"end": 2974,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2990,
											"end": 3043,
											"name": "PUSH [tag]",
											"value": "373"
										},
										{
											"begin": 3035,
											"end": 3042,
											"name": "DUP6"
										},
										{
											"begin": 3015,
											"end": 3024,
											"name": "DUP6"
										},
										{
											"begin": 2990,
											"end": 3043,
											"name": "PUSH [tag]",
											"value": "340"
										},
										{
											"begin": 2990,
											"end": 3043,
											"name": "JUMP"
										},
										{
											"begin": 2990,
											"end": 3043,
											"name": "tag",
											"value": "373"
										},
										{
											"begin": 2990,
											"end": 3043,
											"name": "JUMPDEST"
										},
										{
											"begin": 2980,
											"end": 3043,
											"name": "SWAP3"
										},
										{
											"begin": 2980,
											"end": 3043,
											"name": "POP"
										},
										{
											"begin": 2952,
											"end": 3049,
											"name": "POP"
										},
										{
											"begin": 3080,
											"end": 3082,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3151,
											"name": "PUSH [tag]",
											"value": "359"
										},
										{
											"begin": 3143,
											"end": 3150,
											"name": "DUP6"
										},
										{
											"begin": 3134,
											"end": 3140,
											"name": "DUP3"
										},
										{
											"begin": 3123,
											"end": 3132,
											"name": "DUP7"
										},
										{
											"begin": 3119,
											"end": 3141,
											"name": "ADD"
										},
										{
											"begin": 3098,
											"end": 3151,
											"name": "PUSH [tag]",
											"value": "343"
										},
										{
											"begin": 3098,
											"end": 3151,
											"name": "JUMP"
										},
										{
											"begin": 3174,
											"end": 4039,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 3174,
											"end": 4039,
											"name": "JUMPDEST"
										},
										{
											"begin": 3174,
											"end": 4039,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3174,
											"end": 4039,
											"name": "DUP1"
										},
										{
											"begin": 3174,
											"end": 4039,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3174,
											"end": 4039,
											"name": "DUP1"
										},
										{
											"begin": 3174,
											"end": 4039,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3174,
											"end": 4039,
											"name": "DUP1"
										},
										{
											"begin": 3361,
											"end": 3364,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 3349,
											"end": 3358,
											"name": "DUP8"
										},
										{
											"begin": 3340,
											"end": 3347,
											"name": "DUP10"
										},
										{
											"begin": 3336,
											"end": 3359,
											"name": "SUB"
										},
										{
											"begin": 3332,
											"end": 3365,
											"name": "SLT"
										},
										{
											"begin": 3329,
											"end": 3331,
											"name": "ISZERO"
										},
										{
											"begin": 3329,
											"end": 3331,
											"name": "PUSH [tag]",
											"value": "375"
										},
										{
											"begin": 3329,
											"end": 3331,
											"name": "JUMPI"
										},
										{
											"begin": 3378,
											"end": 3379,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3375,
											"end": 3376,
											"name": "DUP1"
										},
										{
											"begin": 3368,
											"end": 3380,
											"name": "REVERT"
										},
										{
											"begin": 3329,
											"end": 3331,
											"name": "tag",
											"value": "375"
										},
										{
											"begin": 3329,
											"end": 3331,
											"name": "JUMPDEST"
										},
										{
											"begin": 3413,
											"end": 3414,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3430,
											"end": 3483,
											"name": "PUSH [tag]",
											"value": "376"
										},
										{
											"begin": 3475,
											"end": 3482,
											"name": "DUP10"
										},
										{
											"begin": 3455,
											"end": 3464,
											"name": "DUP10"
										},
										{
											"begin": 3430,
											"end": 3483,
											"name": "PUSH [tag]",
											"value": "340"
										},
										{
											"begin": 3430,
											"end": 3483,
											"name": "JUMP"
										},
										{
											"begin": 3430,
											"end": 3483,
											"name": "tag",
											"value": "376"
										},
										{
											"begin": 3430,
											"end": 3483,
											"name": "JUMPDEST"
										},
										{
											"begin": 3420,
											"end": 3483,
											"name": "SWAP7"
										},
										{
											"begin": 3420,
											"end": 3483,
											"name": "POP"
										},
										{
											"begin": 3392,
											"end": 3489,
											"name": "POP"
										},
										{
											"begin": 3520,
											"end": 3522,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3538,
											"end": 3591,
											"name": "PUSH [tag]",
											"value": "377"
										},
										{
											"begin": 3583,
											"end": 3590,
											"name": "DUP10"
										},
										{
											"begin": 3574,
											"end": 3580,
											"name": "DUP3"
										},
										{
											"begin": 3563,
											"end": 3572,
											"name": "DUP11"
										},
										{
											"begin": 3559,
											"end": 3581,
											"name": "ADD"
										},
										{
											"begin": 3538,
											"end": 3591,
											"name": "PUSH [tag]",
											"value": "343"
										},
										{
											"begin": 3538,
											"end": 3591,
											"name": "JUMP"
										},
										{
											"begin": 3538,
											"end": 3591,
											"name": "tag",
											"value": "377"
										},
										{
											"begin": 3538,
											"end": 3591,
											"name": "JUMPDEST"
										},
										{
											"begin": 3528,
											"end": 3591,
											"name": "SWAP6"
										},
										{
											"begin": 3528,
											"end": 3591,
											"name": "POP"
										},
										{
											"begin": 3499,
											"end": 3597,
											"name": "POP"
										},
										{
											"begin": 3628,
											"end": 3630,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3646,
											"end": 3699,
											"name": "PUSH [tag]",
											"value": "378"
										},
										{
											"begin": 3691,
											"end": 3698,
											"name": "DUP10"
										},
										{
											"begin": 3682,
											"end": 3688,
											"name": "DUP3"
										},
										{
											"begin": 3671,
											"end": 3680,
											"name": "DUP11"
										},
										{
											"begin": 3667,
											"end": 3689,
											"name": "ADD"
										},
										{
											"begin": 3646,
											"end": 3699,
											"name": "PUSH [tag]",
											"value": "343"
										},
										{
											"begin": 3646,
											"end": 3699,
											"name": "JUMP"
										},
										{
											"begin": 3646,
											"end": 3699,
											"name": "tag",
											"value": "378"
										},
										{
											"begin": 3646,
											"end": 3699,
											"name": "JUMPDEST"
										},
										{
											"begin": 3636,
											"end": 3699,
											"name": "SWAP5"
										},
										{
											"begin": 3636,
											"end": 3699,
											"name": "POP"
										},
										{
											"begin": 3607,
											"end": 3705,
											"name": "POP"
										},
										{
											"begin": 3736,
											"end": 3738,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3754,
											"end": 3805,
											"name": "PUSH [tag]",
											"value": "379"
										},
										{
											"begin": 3797,
											"end": 3804,
											"name": "DUP10"
										},
										{
											"begin": 3788,
											"end": 3794,
											"name": "DUP3"
										},
										{
											"begin": 3777,
											"end": 3786,
											"name": "DUP11"
										},
										{
											"begin": 3773,
											"end": 3795,
											"name": "ADD"
										},
										{
											"begin": 3754,
											"end": 3805,
											"name": "PUSH [tag]",
											"value": "352"
										},
										{
											"begin": 3754,
											"end": 3805,
											"name": "JUMP"
										},
										{
											"begin": 3754,
											"end": 3805,
											"name": "tag",
											"value": "379"
										},
										{
											"begin": 3754,
											"end": 3805,
											"name": "JUMPDEST"
										},
										{
											"begin": 3744,
											"end": 3805,
											"name": "SWAP4"
										},
										{
											"begin": 3744,
											"end": 3805,
											"name": "POP"
										},
										{
											"begin": 3715,
											"end": 3811,
											"name": "POP"
										},
										{
											"begin": 3842,
											"end": 3845,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 3861,
											"end": 3914,
											"name": "PUSH [tag]",
											"value": "380"
										},
										{
											"begin": 3906,
											"end": 3913,
											"name": "DUP10"
										},
										{
											"begin": 3897,
											"end": 3903,
											"name": "DUP3"
										},
										{
											"begin": 3886,
											"end": 3895,
											"name": "DUP11"
										},
										{
											"begin": 3882,
											"end": 3904,
											"name": "ADD"
										},
										{
											"begin": 3861,
											"end": 3914,
											"name": "PUSH [tag]",
											"value": "343"
										},
										{
											"begin": 3861,
											"end": 3914,
											"name": "JUMP"
										},
										{
											"begin": 3861,
											"end": 3914,
											"name": "tag",
											"value": "380"
										},
										{
											"begin": 3861,
											"end": 3914,
											"name": "JUMPDEST"
										},
										{
											"begin": 3851,
											"end": 3914,
											"name": "SWAP3"
										},
										{
											"begin": 3851,
											"end": 3914,
											"name": "POP"
										},
										{
											"begin": 3821,
											"end": 3920,
											"name": "POP"
										},
										{
											"begin": 3951,
											"end": 3954,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 3970,
											"end": 4023,
											"name": "PUSH [tag]",
											"value": "381"
										},
										{
											"begin": 4015,
											"end": 4022,
											"name": "DUP10"
										},
										{
											"begin": 4006,
											"end": 4012,
											"name": "DUP3"
										},
										{
											"begin": 3995,
											"end": 4004,
											"name": "DUP11"
										},
										{
											"begin": 3991,
											"end": 4013,
											"name": "ADD"
										},
										{
											"begin": 3970,
											"end": 4023,
											"name": "PUSH [tag]",
											"value": "343"
										},
										{
											"begin": 3970,
											"end": 4023,
											"name": "JUMP"
										},
										{
											"begin": 3970,
											"end": 4023,
											"name": "tag",
											"value": "381"
										},
										{
											"begin": 3970,
											"end": 4023,
											"name": "JUMPDEST"
										},
										{
											"begin": 3960,
											"end": 4023,
											"name": "SWAP2"
										},
										{
											"begin": 3960,
											"end": 4023,
											"name": "POP"
										},
										{
											"begin": 3930,
											"end": 4029,
											"name": "POP"
										},
										{
											"begin": 3323,
											"end": 4039,
											"name": "SWAP3"
										},
										{
											"begin": 3323,
											"end": 4039,
											"name": "SWAP6"
										},
										{
											"begin": 3323,
											"end": 4039,
											"name": "POP"
										},
										{
											"begin": 3323,
											"end": 4039,
											"name": "SWAP3"
										},
										{
											"begin": 3323,
											"end": 4039,
											"name": "SWAP6"
										},
										{
											"begin": 3323,
											"end": 4039,
											"name": "POP"
										},
										{
											"begin": 3323,
											"end": 4039,
											"name": "SWAP3"
										},
										{
											"begin": 3323,
											"end": 4039,
											"name": "SWAP6"
										},
										{
											"begin": 3323,
											"end": 4039,
											"name": "JUMP"
										},
										{
											"begin": 4046,
											"end": 4410,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 4046,
											"end": 4410,
											"name": "JUMPDEST"
										},
										{
											"begin": 4046,
											"end": 4410,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4046,
											"end": 4410,
											"name": "DUP1"
										},
										{
											"begin": 4166,
											"end": 4168,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4154,
											"end": 4163,
											"name": "DUP4"
										},
										{
											"begin": 4145,
											"end": 4152,
											"name": "DUP6"
										},
										{
											"begin": 4141,
											"end": 4164,
											"name": "SUB"
										},
										{
											"begin": 4137,
											"end": 4169,
											"name": "SLT"
										},
										{
											"begin": 4134,
											"end": 4136,
											"name": "ISZERO"
										},
										{
											"begin": 4134,
											"end": 4136,
											"name": "PUSH [tag]",
											"value": "382"
										},
										{
											"begin": 4134,
											"end": 4136,
											"name": "JUMPI"
										},
										{
											"begin": 4182,
											"end": 4183,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4179,
											"end": 4180,
											"name": "DUP1"
										},
										{
											"begin": 4172,
											"end": 4184,
											"name": "REVERT"
										},
										{
											"begin": 4134,
											"end": 4136,
											"name": "tag",
											"value": "382"
										},
										{
											"begin": 4134,
											"end": 4136,
											"name": "JUMPDEST"
										},
										{
											"begin": 4217,
											"end": 4218,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4234,
											"end": 4287,
											"name": "PUSH [tag]",
											"value": "383"
										},
										{
											"begin": 4279,
											"end": 4286,
											"name": "DUP6"
										},
										{
											"begin": 4259,
											"end": 4268,
											"name": "DUP6"
										},
										{
											"begin": 4234,
											"end": 4287,
											"name": "PUSH [tag]",
											"value": "340"
										},
										{
											"begin": 4234,
											"end": 4287,
											"name": "JUMP"
										},
										{
											"begin": 4234,
											"end": 4287,
											"name": "tag",
											"value": "383"
										},
										{
											"begin": 4234,
											"end": 4287,
											"name": "JUMPDEST"
										},
										{
											"begin": 4224,
											"end": 4287,
											"name": "SWAP3"
										},
										{
											"begin": 4224,
											"end": 4287,
											"name": "POP"
										},
										{
											"begin": 4196,
											"end": 4293,
											"name": "POP"
										},
										{
											"begin": 4324,
											"end": 4326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4342,
											"end": 4394,
											"name": "PUSH [tag]",
											"value": "359"
										},
										{
											"begin": 4386,
											"end": 4393,
											"name": "DUP6"
										},
										{
											"begin": 4377,
											"end": 4383,
											"name": "DUP3"
										},
										{
											"begin": 4366,
											"end": 4375,
											"name": "DUP7"
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "ADD"
										},
										{
											"begin": 4342,
											"end": 4394,
											"name": "PUSH [tag]",
											"value": "349"
										},
										{
											"begin": 4342,
											"end": 4394,
											"name": "JUMP"
										},
										{
											"begin": 4417,
											"end": 4530,
											"name": "tag",
											"value": "385"
										},
										{
											"begin": 4417,
											"end": 4530,
											"name": "JUMPDEST"
										},
										{
											"begin": 4500,
											"end": 4524,
											"name": "PUSH [tag]",
											"value": "386"
										},
										{
											"begin": 4518,
											"end": 4523,
											"name": "DUP2"
										},
										{
											"begin": 4500,
											"end": 4524,
											"name": "PUSH [tag]",
											"value": "387"
										},
										{
											"begin": 4500,
											"end": 4524,
											"name": "JUMP"
										},
										{
											"begin": 4500,
											"end": 4524,
											"name": "tag",
											"value": "386"
										},
										{
											"begin": 4500,
											"end": 4524,
											"name": "JUMPDEST"
										},
										{
											"begin": 4495,
											"end": 4498,
											"name": "DUP3"
										},
										{
											"begin": 4488,
											"end": 4525,
											"name": "MSTORE"
										},
										{
											"begin": 4482,
											"end": 4530,
											"name": "POP"
										},
										{
											"begin": 4482,
											"end": 4530,
											"name": "POP"
										},
										{
											"begin": 4482,
											"end": 4530,
											"name": "JUMP"
										},
										{
											"begin": 4537,
											"end": 4641,
											"name": "tag",
											"value": "388"
										},
										{
											"begin": 4537,
											"end": 4641,
											"name": "JUMPDEST"
										},
										{
											"begin": 4614,
											"end": 4635,
											"name": "PUSH [tag]",
											"value": "386"
										},
										{
											"begin": 4629,
											"end": 4634,
											"name": "DUP2"
										},
										{
											"begin": 4614,
											"end": 4635,
											"name": "PUSH [tag]",
											"value": "390"
										},
										{
											"begin": 4614,
											"end": 4635,
											"name": "JUMP"
										},
										{
											"begin": 4648,
											"end": 4761,
											"name": "tag",
											"value": "391"
										},
										{
											"begin": 4648,
											"end": 4761,
											"name": "JUMPDEST"
										},
										{
											"begin": 4731,
											"end": 4755,
											"name": "PUSH [tag]",
											"value": "386"
										},
										{
											"begin": 4749,
											"end": 4754,
											"name": "DUP2"
										},
										{
											"begin": 4731,
											"end": 4755,
											"name": "PUSH [tag]",
											"value": "393"
										},
										{
											"begin": 4731,
											"end": 4755,
											"name": "JUMP"
										},
										{
											"begin": 4768,
											"end": 4920,
											"name": "tag",
											"value": "394"
										},
										{
											"begin": 4768,
											"end": 4920,
											"name": "JUMPDEST"
										},
										{
											"begin": 4869,
											"end": 4914,
											"name": "PUSH [tag]",
											"value": "386"
										},
										{
											"begin": 4889,
											"end": 4913,
											"name": "PUSH [tag]",
											"value": "396"
										},
										{
											"begin": 4907,
											"end": 4912,
											"name": "DUP3"
										},
										{
											"begin": 4889,
											"end": 4913,
											"name": "PUSH [tag]",
											"value": "393"
										},
										{
											"begin": 4889,
											"end": 4913,
											"name": "JUMP"
										},
										{
											"begin": 4889,
											"end": 4913,
											"name": "tag",
											"value": "396"
										},
										{
											"begin": 4889,
											"end": 4913,
											"name": "JUMPDEST"
										},
										{
											"begin": 4869,
											"end": 4914,
											"name": "PUSH [tag]",
											"value": "393"
										},
										{
											"begin": 4869,
											"end": 4914,
											"name": "JUMP"
										},
										{
											"begin": 4927,
											"end": 5274,
											"name": "tag",
											"value": "398"
										},
										{
											"begin": 4927,
											"end": 5274,
											"name": "JUMPDEST"
										},
										{
											"begin": 4927,
											"end": 5274,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5039,
											"end": 5078,
											"name": "PUSH [tag]",
											"value": "399"
										},
										{
											"begin": 5072,
											"end": 5077,
											"name": "DUP3"
										},
										{
											"begin": 5039,
											"end": 5078,
											"name": "PUSH [tag]",
											"value": "409"
										},
										{
											"begin": 5039,
											"end": 5078,
											"name": "JUMP"
										},
										{
											"begin": 5039,
											"end": 5078,
											"name": "tag",
											"value": "399"
										},
										{
											"begin": 5039,
											"end": 5078,
											"name": "JUMPDEST"
										},
										{
											"begin": 5090,
											"end": 5161,
											"name": "PUSH [tag]",
											"value": "401"
										},
										{
											"begin": 5154,
											"end": 5160,
											"name": "DUP2"
										},
										{
											"begin": 5149,
											"end": 5152,
											"name": "DUP6"
										},
										{
											"begin": 5090,
											"end": 5161,
											"name": "PUSH [tag]",
											"value": "402"
										},
										{
											"begin": 5090,
											"end": 5161,
											"name": "JUMP"
										},
										{
											"begin": 5090,
											"end": 5161,
											"name": "tag",
											"value": "401"
										},
										{
											"begin": 5090,
											"end": 5161,
											"name": "JUMPDEST"
										},
										{
											"begin": 5083,
											"end": 5161,
											"name": "SWAP4"
										},
										{
											"begin": 5083,
											"end": 5161,
											"name": "POP"
										},
										{
											"begin": 5166,
											"end": 5218,
											"name": "PUSH [tag]",
											"value": "403"
										},
										{
											"begin": 5211,
											"end": 5217,
											"name": "DUP2"
										},
										{
											"begin": 5206,
											"end": 5209,
											"name": "DUP6"
										},
										{
											"begin": 5199,
											"end": 5203,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5192,
											"end": 5197,
											"name": "DUP7"
										},
										{
											"begin": 5188,
											"end": 5204,
											"name": "ADD"
										},
										{
											"begin": 5166,
											"end": 5218,
											"name": "PUSH [tag]",
											"value": "404"
										},
										{
											"begin": 5166,
											"end": 5218,
											"name": "JUMP"
										},
										{
											"begin": 5166,
											"end": 5218,
											"name": "tag",
											"value": "403"
										},
										{
											"begin": 5166,
											"end": 5218,
											"name": "JUMPDEST"
										},
										{
											"begin": 5239,
											"end": 5268,
											"name": "PUSH [tag]",
											"value": "405"
										},
										{
											"begin": 5261,
											"end": 5267,
											"name": "DUP2"
										},
										{
											"begin": 5239,
											"end": 5268,
											"name": "PUSH [tag]",
											"value": "406"
										},
										{
											"begin": 5239,
											"end": 5268,
											"name": "JUMP"
										},
										{
											"begin": 5239,
											"end": 5268,
											"name": "tag",
											"value": "405"
										},
										{
											"begin": 5239,
											"end": 5268,
											"name": "JUMPDEST"
										},
										{
											"begin": 5230,
											"end": 5269,
											"name": "SWAP1"
										},
										{
											"begin": 5230,
											"end": 5269,
											"name": "SWAP4"
										},
										{
											"begin": 5230,
											"end": 5269,
											"name": "ADD"
										},
										{
											"begin": 5230,
											"end": 5269,
											"name": "SWAP4"
										},
										{
											"begin": 5019,
											"end": 5274,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5019,
											"end": 5274,
											"name": "JUMP"
										},
										{
											"begin": 5628,
											"end": 6002,
											"name": "tag",
											"value": "413"
										},
										{
											"begin": 5628,
											"end": 6002,
											"name": "JUMPDEST"
										},
										{
											"begin": 5628,
											"end": 6002,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5788,
											"end": 5855,
											"name": "PUSH [tag]",
											"value": "414"
										},
										{
											"begin": 5852,
											"end": 5854,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 5847,
											"end": 5850,
											"name": "DUP4"
										},
										{
											"begin": 5788,
											"end": 5855,
											"name": "PUSH [tag]",
											"value": "402"
										},
										{
											"begin": 5788,
											"end": 5855,
											"name": "JUMP"
										},
										{
											"begin": 5788,
											"end": 5855,
											"name": "tag",
											"value": "414"
										},
										{
											"begin": 5788,
											"end": 5855,
											"name": "JUMPDEST"
										},
										{
											"begin": 5888,
											"end": 5922,
											"name": "PUSH",
											"value": "556E693A3A64656C656761746542795369673A207369676E6174757265206578"
										},
										{
											"begin": 5868,
											"end": 5923,
											"name": "DUP2"
										},
										{
											"begin": 5868,
											"end": 5923,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1C1A5C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "DA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 5952,
											"end": 5954,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5943,
											"end": 5955,
											"name": "DUP3"
										},
										{
											"begin": 5943,
											"end": 5955,
											"name": "ADD"
										},
										{
											"begin": 5936,
											"end": 5965,
											"name": "MSTORE"
										},
										{
											"begin": 5993,
											"end": 5995,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5984,
											"end": 5996,
											"name": "ADD"
										},
										{
											"begin": 5984,
											"end": 5996,
											"name": "SWAP3"
										},
										{
											"begin": 5774,
											"end": 6002,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5774,
											"end": 6002,
											"name": "JUMP"
										},
										{
											"begin": 6011,
											"end": 6409,
											"name": "tag",
											"value": "415"
										},
										{
											"begin": 6011,
											"end": 6409,
											"name": "JUMPDEST"
										},
										{
											"begin": 6011,
											"end": 6409,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6189,
											"end": 6273,
											"name": "PUSH [tag]",
											"value": "416"
										},
										{
											"begin": 6271,
											"end": 6272,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6266,
											"end": 6269,
											"name": "DUP4"
										},
										{
											"begin": 6189,
											"end": 6273,
											"name": "PUSH [tag]",
											"value": "417"
										},
										{
											"begin": 6189,
											"end": 6273,
											"name": "JUMP"
										},
										{
											"begin": 6189,
											"end": 6273,
											"name": "tag",
											"value": "416"
										},
										{
											"begin": 6189,
											"end": 6273,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 6286,
											"end": 6373,
											"name": "DUP2"
										},
										{
											"begin": 6286,
											"end": 6373,
											"name": "MSTORE"
										},
										{
											"begin": 6401,
											"end": 6402,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6392,
											"end": 6403,
											"name": "ADD"
										},
										{
											"begin": 6392,
											"end": 6403,
											"name": "SWAP3"
										},
										{
											"begin": 6175,
											"end": 6409,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6175,
											"end": 6409,
											"name": "JUMP"
										},
										{
											"begin": 6418,
											"end": 6745,
											"name": "tag",
											"value": "418"
										},
										{
											"begin": 6418,
											"end": 6745,
											"name": "JUMPDEST"
										},
										{
											"begin": 6418,
											"end": 6745,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6578,
											"end": 6645,
											"name": "PUSH [tag]",
											"value": "419"
										},
										{
											"begin": 6642,
											"end": 6644,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 6637,
											"end": 6640,
											"name": "DUP4"
										},
										{
											"begin": 6578,
											"end": 6645,
											"name": "PUSH [tag]",
											"value": "402"
										},
										{
											"begin": 6578,
											"end": 6645,
											"name": "JUMP"
										},
										{
											"begin": 6578,
											"end": 6645,
											"name": "tag",
											"value": "419"
										},
										{
											"begin": 6578,
											"end": 6645,
											"name": "JUMPDEST"
										},
										{
											"begin": 6678,
											"end": 6707,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 6658,
											"end": 6708,
											"name": "DUP2"
										},
										{
											"begin": 6658,
											"end": 6708,
											"name": "MSTORE"
										},
										{
											"begin": 6736,
											"end": 6738,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6727,
											"end": 6739,
											"name": "ADD"
										},
										{
											"begin": 6727,
											"end": 6739,
											"name": "SWAP3"
										},
										{
											"begin": 6564,
											"end": 6745,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6564,
											"end": 6745,
											"name": "JUMP"
										},
										{
											"begin": 6754,
											"end": 7128,
											"name": "tag",
											"value": "420"
										},
										{
											"begin": 6754,
											"end": 7128,
											"name": "JUMPDEST"
										},
										{
											"begin": 6754,
											"end": 7128,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6914,
											"end": 6981,
											"name": "PUSH [tag]",
											"value": "421"
										},
										{
											"begin": 6978,
											"end": 6980,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 6973,
											"end": 6976,
											"name": "DUP4"
										},
										{
											"begin": 6914,
											"end": 6981,
											"name": "PUSH [tag]",
											"value": "402"
										},
										{
											"begin": 6914,
											"end": 6981,
											"name": "JUMP"
										},
										{
											"begin": 6914,
											"end": 6981,
											"name": "tag",
											"value": "421"
										},
										{
											"begin": 6914,
											"end": 6981,
											"name": "JUMPDEST"
										},
										{
											"begin": 7014,
											"end": 7048,
											"name": "PUSH",
											"value": "556E693A3A64656C656761746542795369673A20696E76616C6964207369676E"
										},
										{
											"begin": 6994,
											"end": 7049,
											"name": "DUP2"
										},
										{
											"begin": 6994,
											"end": 7049,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "6174757265"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7078,
											"end": 7080,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7069,
											"end": 7081,
											"name": "DUP3"
										},
										{
											"begin": 7069,
											"end": 7081,
											"name": "ADD"
										},
										{
											"begin": 7062,
											"end": 7091,
											"name": "MSTORE"
										},
										{
											"begin": 7119,
											"end": 7121,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7110,
											"end": 7122,
											"name": "ADD"
										},
										{
											"begin": 7110,
											"end": 7122,
											"name": "SWAP3"
										},
										{
											"begin": 6900,
											"end": 7128,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6900,
											"end": 7128,
											"name": "JUMP"
										},
										{
											"begin": 7137,
											"end": 7512,
											"name": "tag",
											"value": "422"
										},
										{
											"begin": 7137,
											"end": 7512,
											"name": "JUMPDEST"
										},
										{
											"begin": 7137,
											"end": 7512,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7297,
											"end": 7364,
											"name": "PUSH [tag]",
											"value": "423"
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 7356,
											"end": 7359,
											"name": "DUP4"
										},
										{
											"begin": 7297,
											"end": 7364,
											"name": "PUSH [tag]",
											"value": "402"
										},
										{
											"begin": 7297,
											"end": 7364,
											"name": "JUMP"
										},
										{
											"begin": 7297,
											"end": 7364,
											"name": "tag",
											"value": "423"
										},
										{
											"begin": 7297,
											"end": 7364,
											"name": "JUMPDEST"
										},
										{
											"begin": 7397,
											"end": 7431,
											"name": "PUSH",
											"value": "556E693A3A6765745072696F72566F7465733A206E6F74207965742064657465"
										},
										{
											"begin": 7377,
											"end": 7432,
											"name": "DUP2"
										},
										{
											"begin": 7377,
											"end": 7432,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1C9B5A5B9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7461,
											"end": 7463,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7452,
											"end": 7464,
											"name": "DUP3"
										},
										{
											"begin": 7452,
											"end": 7464,
											"name": "ADD"
										},
										{
											"begin": 7445,
											"end": 7475,
											"name": "MSTORE"
										},
										{
											"begin": 7503,
											"end": 7505,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7494,
											"end": 7506,
											"name": "ADD"
										},
										{
											"begin": 7494,
											"end": 7506,
											"name": "SWAP3"
										},
										{
											"begin": 7283,
											"end": 7512,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 7283,
											"end": 7512,
											"name": "JUMP"
										},
										{
											"begin": 7521,
											"end": 7904,
											"name": "tag",
											"value": "424"
										},
										{
											"begin": 7521,
											"end": 7904,
											"name": "JUMPDEST"
										},
										{
											"begin": 7521,
											"end": 7904,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7681,
											"end": 7748,
											"name": "PUSH [tag]",
											"value": "425"
										},
										{
											"begin": 7745,
											"end": 7747,
											"name": "PUSH",
											"value": "2E"
										},
										{
											"begin": 7740,
											"end": 7743,
											"name": "DUP4"
										},
										{
											"begin": 7681,
											"end": 7748,
											"name": "PUSH [tag]",
											"value": "402"
										},
										{
											"begin": 7681,
											"end": 7748,
											"name": "JUMP"
										},
										{
											"begin": 7681,
											"end": 7748,
											"name": "tag",
											"value": "425"
										},
										{
											"begin": 7681,
											"end": 7748,
											"name": "JUMPDEST"
										},
										{
											"begin": 7781,
											"end": 7815,
											"name": "PUSH",
											"value": "556E693A3A6D696E743A2063616E6E6F74207472616E7366657220746F207468"
										},
										{
											"begin": 7761,
											"end": 7816,
											"name": "DUP2"
										},
										{
											"begin": 7761,
											"end": 7816,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "65207A65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7845,
											"end": 7847,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7836,
											"end": 7848,
											"name": "DUP3"
										},
										{
											"begin": 7836,
											"end": 7848,
											"name": "ADD"
										},
										{
											"begin": 7829,
											"end": 7867,
											"name": "MSTORE"
										},
										{
											"begin": 7895,
											"end": 7897,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7886,
											"end": 7898,
											"name": "ADD"
										},
										{
											"begin": 7886,
											"end": 7898,
											"name": "SWAP3"
										},
										{
											"begin": 7667,
											"end": 7904,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 7667,
											"end": 7904,
											"name": "JUMP"
										},
										{
											"begin": 7913,
											"end": 8405,
											"name": "tag",
											"value": "426"
										},
										{
											"begin": 7913,
											"end": 8405,
											"name": "JUMPDEST"
										},
										{
											"begin": 7913,
											"end": 8405,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8091,
											"end": 8176,
											"name": "PUSH [tag]",
											"value": "427"
										},
										{
											"begin": 8173,
											"end": 8175,
											"name": "PUSH",
											"value": "52"
										},
										{
											"begin": 8168,
											"end": 8171,
											"name": "DUP4"
										},
										{
											"begin": 8091,
											"end": 8176,
											"name": "PUSH [tag]",
											"value": "417"
										},
										{
											"begin": 8091,
											"end": 8176,
											"name": "JUMP"
										},
										{
											"begin": 8091,
											"end": 8176,
											"name": "tag",
											"value": "427"
										},
										{
											"begin": 8091,
											"end": 8176,
											"name": "JUMPDEST"
										},
										{
											"begin": 8209,
											"end": 8243,
											"name": "PUSH",
											"value": "5065726D69742861646472657373206F776E65722C6164647265737320737065"
										},
										{
											"begin": 8189,
											"end": 8244,
											"name": "DUP2"
										},
										{
											"begin": 8189,
											"end": 8244,
											"name": "MSTORE"
										},
										{
											"begin": 8278,
											"end": 8312,
											"name": "PUSH",
											"value": "6E6465722C75696E743235362076616C75652C75696E74323536206E6F6E6365"
										},
										{
											"begin": 8273,
											"end": 8275,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8264,
											"end": 8276,
											"name": "DUP3"
										},
										{
											"begin": 8264,
											"end": 8276,
											"name": "ADD"
										},
										{
											"begin": 8257,
											"end": 8313,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2C75696E7432353620646561646C696E6529"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 8342,
											"end": 8344,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8333,
											"end": 8345,
											"name": "DUP3"
										},
										{
											"begin": 8333,
											"end": 8345,
											"name": "ADD"
										},
										{
											"begin": 8326,
											"end": 8368,
											"name": "MSTORE"
										},
										{
											"begin": 8396,
											"end": 8398,
											"name": "PUSH",
											"value": "52"
										},
										{
											"begin": 8387,
											"end": 8399,
											"name": "ADD"
										},
										{
											"begin": 8387,
											"end": 8399,
											"name": "SWAP3"
										},
										{
											"begin": 8077,
											"end": 8405,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8077,
											"end": 8405,
											"name": "JUMP"
										},
										{
											"begin": 8414,
											"end": 8785,
											"name": "tag",
											"value": "428"
										},
										{
											"begin": 8414,
											"end": 8785,
											"name": "JUMPDEST"
										},
										{
											"begin": 8414,
											"end": 8785,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8574,
											"end": 8641,
											"name": "PUSH [tag]",
											"value": "429"
										},
										{
											"begin": 8638,
											"end": 8640,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 8633,
											"end": 8636,
											"name": "DUP4"
										},
										{
											"begin": 8574,
											"end": 8641,
											"name": "PUSH [tag]",
											"value": "402"
										},
										{
											"begin": 8574,
											"end": 8641,
											"name": "JUMP"
										},
										{
											"begin": 8574,
											"end": 8641,
											"name": "tag",
											"value": "429"
										},
										{
											"begin": 8574,
											"end": 8641,
											"name": "JUMPDEST"
										},
										{
											"begin": 8674,
											"end": 8708,
											"name": "PUSH",
											"value": "556E693A3A6D696E743A206D696E74696E67206E6F7420616C6C6F7765642079"
										},
										{
											"begin": 8654,
											"end": 8709,
											"name": "DUP2"
										},
										{
											"begin": 8654,
											"end": 8709,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "195D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 8738,
											"end": 8740,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8729,
											"end": 8741,
											"name": "DUP3"
										},
										{
											"begin": 8729,
											"end": 8741,
											"name": "ADD"
										},
										{
											"begin": 8722,
											"end": 8748,
											"name": "MSTORE"
										},
										{
											"begin": 8776,
											"end": 8778,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8767,
											"end": 8779,
											"name": "ADD"
										},
										{
											"begin": 8767,
											"end": 8779,
											"name": "SWAP3"
										},
										{
											"begin": 8560,
											"end": 8785,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8560,
											"end": 8785,
											"name": "JUMP"
										},
										{
											"begin": 8794,
											"end": 9271,
											"name": "tag",
											"value": "430"
										},
										{
											"begin": 8794,
											"end": 9271,
											"name": "JUMPDEST"
										},
										{
											"begin": 8794,
											"end": 9271,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8972,
											"end": 9057,
											"name": "PUSH [tag]",
											"value": "431"
										},
										{
											"begin": 9054,
											"end": 9056,
											"name": "PUSH",
											"value": "43"
										},
										{
											"begin": 9049,
											"end": 9052,
											"name": "DUP4"
										},
										{
											"begin": 8972,
											"end": 9057,
											"name": "PUSH [tag]",
											"value": "417"
										},
										{
											"begin": 8972,
											"end": 9057,
											"name": "JUMP"
										},
										{
											"begin": 8972,
											"end": 9057,
											"name": "tag",
											"value": "431"
										},
										{
											"begin": 8972,
											"end": 9057,
											"name": "JUMPDEST"
										},
										{
											"begin": 9090,
											"end": 9124,
											"name": "PUSH",
											"value": "454950373132446F6D61696E28737472696E67206E616D652C75696E74323536"
										},
										{
											"begin": 9070,
											"end": 9125,
											"name": "DUP2"
										},
										{
											"begin": 9070,
											"end": 9125,
											"name": "MSTORE"
										},
										{
											"begin": 9159,
											"end": 9193,
											"name": "PUSH",
											"value": "20636861696E49642C6164647265737320766572696679696E67436F6E747261"
										},
										{
											"begin": 9154,
											"end": 9156,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9145,
											"end": 9157,
											"name": "DUP3"
										},
										{
											"begin": 9145,
											"end": 9157,
											"name": "ADD"
										},
										{
											"begin": 9138,
											"end": 9194,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "637429"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 9223,
											"end": 9225,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9214,
											"end": 9226,
											"name": "DUP3"
										},
										{
											"begin": 9214,
											"end": 9226,
											"name": "ADD"
										},
										{
											"begin": 9207,
											"end": 9234,
											"name": "MSTORE"
										},
										{
											"begin": 9262,
											"end": 9264,
											"name": "PUSH",
											"value": "43"
										},
										{
											"begin": 9253,
											"end": 9265,
											"name": "ADD"
										},
										{
											"begin": 9253,
											"end": 9265,
											"name": "SWAP3"
										},
										{
											"begin": 8958,
											"end": 9271,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8958,
											"end": 9271,
											"name": "JUMP"
										},
										{
											"begin": 9280,
											"end": 9674,
											"name": "tag",
											"value": "432"
										},
										{
											"begin": 9280,
											"end": 9674,
											"name": "JUMPDEST"
										},
										{
											"begin": 9280,
											"end": 9674,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9440,
											"end": 9507,
											"name": "PUSH [tag]",
											"value": "433"
										},
										{
											"begin": 9504,
											"end": 9506,
											"name": "PUSH",
											"value": "39"
										},
										{
											"begin": 9499,
											"end": 9502,
											"name": "DUP4"
										},
										{
											"begin": 9440,
											"end": 9507,
											"name": "PUSH [tag]",
											"value": "402"
										},
										{
											"begin": 9440,
											"end": 9507,
											"name": "JUMP"
										},
										{
											"begin": 9440,
											"end": 9507,
											"name": "tag",
											"value": "433"
										},
										{
											"begin": 9440,
											"end": 9507,
											"name": "JUMPDEST"
										},
										{
											"begin": 9540,
											"end": 9574,
											"name": "PUSH",
											"value": "556E693A3A5F7472616E73666572546F6B656E733A2063616E6E6F7420747261"
										},
										{
											"begin": 9520,
											"end": 9575,
											"name": "DUP2"
										},
										{
											"begin": 9520,
											"end": 9575,
											"name": "MSTORE"
										},
										{
											"begin": 9609,
											"end": 9636,
											"name": "PUSH",
											"value": "6E7366657220746F20746865207A65726F206164647265737300000000000000"
										},
										{
											"begin": 9604,
											"end": 9606,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9595,
											"end": 9607,
											"name": "DUP3"
										},
										{
											"begin": 9595,
											"end": 9607,
											"name": "ADD"
										},
										{
											"begin": 9588,
											"end": 9637,
											"name": "MSTORE"
										},
										{
											"begin": 9665,
											"end": 9667,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9656,
											"end": 9668,
											"name": "ADD"
										},
										{
											"begin": 9656,
											"end": 9668,
											"name": "SWAP3"
										},
										{
											"begin": 9426,
											"end": 9674,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 9426,
											"end": 9674,
											"name": "JUMP"
										},
										{
											"begin": 9683,
											"end": 10053,
											"name": "tag",
											"value": "434"
										},
										{
											"begin": 9683,
											"end": 10053,
											"name": "JUMPDEST"
										},
										{
											"begin": 9683,
											"end": 10053,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9843,
											"end": 9910,
											"name": "PUSH [tag]",
											"value": "435"
										},
										{
											"begin": 9907,
											"end": 9909,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 9902,
											"end": 9905,
											"name": "DUP4"
										},
										{
											"begin": 9843,
											"end": 9910,
											"name": "PUSH [tag]",
											"value": "402"
										},
										{
											"begin": 9843,
											"end": 9910,
											"name": "JUMP"
										},
										{
											"begin": 9843,
											"end": 9910,
											"name": "tag",
											"value": "435"
										},
										{
											"begin": 9843,
											"end": 9910,
											"name": "JUMPDEST"
										},
										{
											"begin": 9943,
											"end": 9977,
											"name": "PUSH",
											"value": "536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F"
										},
										{
											"begin": 9923,
											"end": 9978,
											"name": "DUP2"
										},
										{
											"begin": 9923,
											"end": 9978,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 10007,
											"end": 10009,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9998,
											"end": 10010,
											"name": "DUP3"
										},
										{
											"begin": 9998,
											"end": 10010,
											"name": "ADD"
										},
										{
											"begin": 9991,
											"end": 10016,
											"name": "MSTORE"
										},
										{
											"begin": 10044,
											"end": 10046,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10035,
											"end": 10047,
											"name": "ADD"
										},
										{
											"begin": 10035,
											"end": 10047,
											"name": "SWAP3"
										},
										{
											"begin": 9829,
											"end": 10053,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 9829,
											"end": 10053,
											"name": "JUMP"
										},
										{
											"begin": 10062,
											"end": 10390,
											"name": "tag",
											"value": "436"
										},
										{
											"begin": 10062,
											"end": 10390,
											"name": "JUMPDEST"
										},
										{
											"begin": 10062,
											"end": 10390,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10222,
											"end": 10289,
											"name": "PUSH [tag]",
											"value": "437"
										},
										{
											"begin": 10286,
											"end": 10288,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 10281,
											"end": 10284,
											"name": "DUP4"
										},
										{
											"begin": 10222,
											"end": 10289,
											"name": "PUSH [tag]",
											"value": "402"
										},
										{
											"begin": 10222,
											"end": 10289,
											"name": "JUMP"
										},
										{
											"begin": 10222,
											"end": 10289,
											"name": "tag",
											"value": "437"
										},
										{
											"begin": 10222,
											"end": 10289,
											"name": "JUMPDEST"
										},
										{
											"begin": 10322,
											"end": 10352,
											"name": "PUSH",
											"value": "556E693A3A6D696E743A206578636565646564206D696E742063617000000000"
										},
										{
											"begin": 10302,
											"end": 10353,
											"name": "DUP2"
										},
										{
											"begin": 10302,
											"end": 10353,
											"name": "MSTORE"
										},
										{
											"begin": 10381,
											"end": 10383,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10372,
											"end": 10384,
											"name": "ADD"
										},
										{
											"begin": 10372,
											"end": 10384,
											"name": "SWAP3"
										},
										{
											"begin": 10208,
											"end": 10390,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 10208,
											"end": 10390,
											"name": "JUMP"
										},
										{
											"begin": 10399,
											"end": 10771,
											"name": "tag",
											"value": "438"
										},
										{
											"begin": 10399,
											"end": 10771,
											"name": "JUMPDEST"
										},
										{
											"begin": 10399,
											"end": 10771,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10559,
											"end": 10626,
											"name": "PUSH [tag]",
											"value": "439"
										},
										{
											"begin": 10623,
											"end": 10625,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 10618,
											"end": 10621,
											"name": "DUP4"
										},
										{
											"begin": 10559,
											"end": 10626,
											"name": "PUSH [tag]",
											"value": "402"
										},
										{
											"begin": 10559,
											"end": 10626,
											"name": "JUMP"
										},
										{
											"begin": 10559,
											"end": 10626,
											"name": "tag",
											"value": "439"
										},
										{
											"begin": 10559,
											"end": 10626,
											"name": "JUMPDEST"
										},
										{
											"begin": 10659,
											"end": 10693,
											"name": "PUSH",
											"value": "556E693A3A6D696E743A206F6E6C7920746865206D696E7465722063616E206D"
										},
										{
											"begin": 10639,
											"end": 10694,
											"name": "DUP2"
										},
										{
											"begin": 10639,
											"end": 10694,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1A5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "EA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 10723,
											"end": 10725,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10714,
											"end": 10726,
											"name": "DUP3"
										},
										{
											"begin": 10714,
											"end": 10726,
											"name": "ADD"
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE"
										},
										{
											"begin": 10762,
											"end": 10764,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10753,
											"end": 10765,
											"name": "ADD"
										},
										{
											"begin": 10753,
											"end": 10765,
											"name": "SWAP3"
										},
										{
											"begin": 10545,
											"end": 10771,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 10545,
											"end": 10771,
											"name": "JUMP"
										},
										{
											"begin": 10780,
											"end": 11178,
											"name": "tag",
											"value": "440"
										},
										{
											"begin": 10780,
											"end": 11178,
											"name": "JUMPDEST"
										},
										{
											"begin": 10780,
											"end": 11178,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10940,
											"end": 11007,
											"name": "PUSH [tag]",
											"value": "441"
										},
										{
											"begin": 11004,
											"end": 11006,
											"name": "PUSH",
											"value": "3D"
										},
										{
											"begin": 10999,
											"end": 11002,
											"name": "DUP4"
										},
										{
											"begin": 10940,
											"end": 11007,
											"name": "PUSH [tag]",
											"value": "402"
										},
										{
											"begin": 10940,
											"end": 11007,
											"name": "JUMP"
										},
										{
											"begin": 10940,
											"end": 11007,
											"name": "tag",
											"value": "441"
										},
										{
											"begin": 10940,
											"end": 11007,
											"name": "JUMPDEST"
										},
										{
											"begin": 11040,
											"end": 11074,
											"name": "PUSH",
											"value": "556E693A3A7365744D696E7465723A206F6E6C7920746865206D696E74657220"
										},
										{
											"begin": 11020,
											"end": 11075,
											"name": "DUP2"
										},
										{
											"begin": 11020,
											"end": 11075,
											"name": "MSTORE"
										},
										{
											"begin": 11109,
											"end": 11140,
											"name": "PUSH",
											"value": "63616E206368616E676520746865206D696E7465722061646472657373000000"
										},
										{
											"begin": 11104,
											"end": 11106,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11095,
											"end": 11107,
											"name": "DUP3"
										},
										{
											"begin": 11095,
											"end": 11107,
											"name": "ADD"
										},
										{
											"begin": 11088,
											"end": 11141,
											"name": "MSTORE"
										},
										{
											"begin": 11169,
											"end": 11171,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11160,
											"end": 11172,
											"name": "ADD"
										},
										{
											"begin": 11160,
											"end": 11172,
											"name": "SWAP3"
										},
										{
											"begin": 10926,
											"end": 11178,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 10926,
											"end": 11178,
											"name": "JUMP"
										},
										{
											"begin": 11187,
											"end": 11557,
											"name": "tag",
											"value": "442"
										},
										{
											"begin": 11187,
											"end": 11557,
											"name": "JUMPDEST"
										},
										{
											"begin": 11187,
											"end": 11557,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11347,
											"end": 11414,
											"name": "PUSH [tag]",
											"value": "443"
										},
										{
											"begin": 11411,
											"end": 11413,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 11406,
											"end": 11409,
											"name": "DUP4"
										},
										{
											"begin": 11347,
											"end": 11414,
											"name": "PUSH [tag]",
											"value": "402"
										},
										{
											"begin": 11347,
											"end": 11414,
											"name": "JUMP"
										},
										{
											"begin": 11347,
											"end": 11414,
											"name": "tag",
											"value": "443"
										},
										{
											"begin": 11347,
											"end": 11414,
											"name": "JUMPDEST"
										},
										{
											"begin": 11447,
											"end": 11481,
											"name": "PUSH",
											"value": "556E693A3A64656C656761746542795369673A20696E76616C6964206E6F6E63"
										},
										{
											"begin": 11427,
											"end": 11482,
											"name": "DUP2"
										},
										{
											"begin": 11427,
											"end": 11482,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 11511,
											"end": 11513,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11502,
											"end": 11514,
											"name": "DUP3"
										},
										{
											"begin": 11502,
											"end": 11514,
											"name": "ADD"
										},
										{
											"begin": 11495,
											"end": 11520,
											"name": "MSTORE"
										},
										{
											"begin": 11548,
											"end": 11550,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11539,
											"end": 11551,
											"name": "ADD"
										},
										{
											"begin": 11539,
											"end": 11551,
											"name": "SWAP3"
										},
										{
											"begin": 11333,
											"end": 11557,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 11333,
											"end": 11557,
											"name": "JUMP"
										},
										{
											"begin": 11566,
											"end": 11962,
											"name": "tag",
											"value": "444"
										},
										{
											"begin": 11566,
											"end": 11962,
											"name": "JUMPDEST"
										},
										{
											"begin": 11566,
											"end": 11962,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11726,
											"end": 11793,
											"name": "PUSH [tag]",
											"value": "445"
										},
										{
											"begin": 11790,
											"end": 11792,
											"name": "PUSH",
											"value": "3B"
										},
										{
											"begin": 11785,
											"end": 11788,
											"name": "DUP4"
										},
										{
											"begin": 11726,
											"end": 11793,
											"name": "PUSH [tag]",
											"value": "402"
										},
										{
											"begin": 11726,
											"end": 11793,
											"name": "JUMP"
										},
										{
											"begin": 11726,
											"end": 11793,
											"name": "tag",
											"value": "445"
										},
										{
											"begin": 11726,
											"end": 11793,
											"name": "JUMPDEST"
										},
										{
											"begin": 11826,
											"end": 11860,
											"name": "PUSH",
											"value": "556E693A3A5F7472616E73666572546F6B656E733A2063616E6E6F7420747261"
										},
										{
											"begin": 11806,
											"end": 11861,
											"name": "DUP2"
										},
										{
											"begin": 11806,
											"end": 11861,
											"name": "MSTORE"
										},
										{
											"begin": 11895,
											"end": 11924,
											"name": "PUSH",
											"value": "6E736665722066726F6D20746865207A65726F20616464726573730000000000"
										},
										{
											"begin": 11890,
											"end": 11892,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11881,
											"end": 11893,
											"name": "DUP3"
										},
										{
											"begin": 11881,
											"end": 11893,
											"name": "ADD"
										},
										{
											"begin": 11874,
											"end": 11925,
											"name": "MSTORE"
										},
										{
											"begin": 11953,
											"end": 11955,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11944,
											"end": 11956,
											"name": "ADD"
										},
										{
											"begin": 11944,
											"end": 11956,
											"name": "SWAP3"
										},
										{
											"begin": 11712,
											"end": 11962,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 11712,
											"end": 11962,
											"name": "JUMP"
										},
										{
											"begin": 11971,
											"end": 12301,
											"name": "tag",
											"value": "446"
										},
										{
											"begin": 11971,
											"end": 12301,
											"name": "JUMPDEST"
										},
										{
											"begin": 11971,
											"end": 12301,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12131,
											"end": 12198,
											"name": "PUSH [tag]",
											"value": "447"
										},
										{
											"begin": 12195,
											"end": 12197,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 12190,
											"end": 12193,
											"name": "DUP4"
										},
										{
											"begin": 12131,
											"end": 12198,
											"name": "PUSH [tag]",
											"value": "402"
										},
										{
											"begin": 12131,
											"end": 12198,
											"name": "JUMP"
										},
										{
											"begin": 12131,
											"end": 12198,
											"name": "tag",
											"value": "447"
										},
										{
											"begin": 12131,
											"end": 12198,
											"name": "JUMPDEST"
										},
										{
											"begin": 12231,
											"end": 12263,
											"name": "PUSH",
											"value": "556E693A3A7065726D69743A207369676E617475726520657870697265640000"
										},
										{
											"begin": 12211,
											"end": 12264,
											"name": "DUP2"
										},
										{
											"begin": 12211,
											"end": 12264,
											"name": "MSTORE"
										},
										{
											"begin": 12292,
											"end": 12294,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12283,
											"end": 12295,
											"name": "ADD"
										},
										{
											"begin": 12283,
											"end": 12295,
											"name": "SWAP3"
										},
										{
											"begin": 12117,
											"end": 12301,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 12117,
											"end": 12301,
											"name": "JUMP"
										},
										{
											"begin": 12310,
											"end": 12741,
											"name": "tag",
											"value": "448"
										},
										{
											"begin": 12310,
											"end": 12741,
											"name": "JUMPDEST"
										},
										{
											"begin": 12310,
											"end": 12741,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12488,
											"end": 12573,
											"name": "PUSH [tag]",
											"value": "449"
										},
										{
											"begin": 12570,
											"end": 12572,
											"name": "PUSH",
											"value": "3A"
										},
										{
											"begin": 12565,
											"end": 12568,
											"name": "DUP4"
										},
										{
											"begin": 12488,
											"end": 12573,
											"name": "PUSH [tag]",
											"value": "417"
										},
										{
											"begin": 12488,
											"end": 12573,
											"name": "JUMP"
										},
										{
											"begin": 12488,
											"end": 12573,
											"name": "tag",
											"value": "449"
										},
										{
											"begin": 12488,
											"end": 12573,
											"name": "JUMPDEST"
										},
										{
											"begin": 12606,
											"end": 12640,
											"name": "PUSH",
											"value": "44656C65676174696F6E28616464726573732064656C6567617465652C75696E"
										},
										{
											"begin": 12586,
											"end": 12641,
											"name": "DUP2"
										},
										{
											"begin": 12586,
											"end": 12641,
											"name": "MSTORE"
										},
										{
											"begin": 12675,
											"end": 12703,
											"name": "PUSH",
											"value": "74323536206E6F6E63652C75696E743235362065787069727929000000000000"
										},
										{
											"begin": 12670,
											"end": 12672,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12661,
											"end": 12673,
											"name": "DUP3"
										},
										{
											"begin": 12661,
											"end": 12673,
											"name": "ADD"
										},
										{
											"begin": 12654,
											"end": 12704,
											"name": "MSTORE"
										},
										{
											"begin": 12732,
											"end": 12734,
											"name": "PUSH",
											"value": "3A"
										},
										{
											"begin": 12723,
											"end": 12735,
											"name": "ADD"
										},
										{
											"begin": 12723,
											"end": 12735,
											"name": "SWAP3"
										},
										{
											"begin": 12474,
											"end": 12741,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 12474,
											"end": 12741,
											"name": "JUMP"
										},
										{
											"begin": 12750,
											"end": 13080,
											"name": "tag",
											"value": "450"
										},
										{
											"begin": 12750,
											"end": 13080,
											"name": "JUMPDEST"
										},
										{
											"begin": 12750,
											"end": 13080,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12910,
											"end": 12977,
											"name": "PUSH [tag]",
											"value": "451"
										},
										{
											"begin": 12974,
											"end": 12976,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 12969,
											"end": 12972,
											"name": "DUP4"
										},
										{
											"begin": 12910,
											"end": 12977,
											"name": "PUSH [tag]",
											"value": "402"
										},
										{
											"begin": 12910,
											"end": 12977,
											"name": "JUMP"
										},
										{
											"begin": 12910,
											"end": 12977,
											"name": "tag",
											"value": "451"
										},
										{
											"begin": 12910,
											"end": 12977,
											"name": "JUMPDEST"
										},
										{
											"begin": 13010,
											"end": 13042,
											"name": "PUSH",
											"value": "556E693A3A7065726D69743A20696E76616C6964207369676E61747572650000"
										},
										{
											"begin": 12990,
											"end": 13043,
											"name": "DUP2"
										},
										{
											"begin": 12990,
											"end": 13043,
											"name": "MSTORE"
										},
										{
											"begin": 13071,
											"end": 13073,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13062,
											"end": 13074,
											"name": "ADD"
										},
										{
											"begin": 13062,
											"end": 13074,
											"name": "SWAP3"
										},
										{
											"begin": 12896,
											"end": 13080,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 12896,
											"end": 13080,
											"name": "JUMP"
										},
										{
											"begin": 13089,
											"end": 13414,
											"name": "tag",
											"value": "452"
										},
										{
											"begin": 13089,
											"end": 13414,
											"name": "JUMPDEST"
										},
										{
											"begin": 13089,
											"end": 13414,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13249,
											"end": 13316,
											"name": "PUSH [tag]",
											"value": "453"
										},
										{
											"begin": 13313,
											"end": 13315,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 13308,
											"end": 13311,
											"name": "DUP4"
										},
										{
											"begin": 13249,
											"end": 13316,
											"name": "PUSH [tag]",
											"value": "402"
										},
										{
											"begin": 13249,
											"end": 13316,
											"name": "JUMP"
										},
										{
											"begin": 13249,
											"end": 13316,
											"name": "tag",
											"value": "453"
										},
										{
											"begin": 13249,
											"end": 13316,
											"name": "JUMPDEST"
										},
										{
											"begin": 13349,
											"end": 13376,
											"name": "PUSH",
											"value": "556E693A3A7065726D69743A20756E617574686F72697A656400000000000000"
										},
										{
											"begin": 13329,
											"end": 13377,
											"name": "DUP2"
										},
										{
											"begin": 13329,
											"end": 13377,
											"name": "MSTORE"
										},
										{
											"begin": 13405,
											"end": 13407,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13396,
											"end": 13408,
											"name": "ADD"
										},
										{
											"begin": 13396,
											"end": 13408,
											"name": "SWAP3"
										},
										{
											"begin": 13235,
											"end": 13414,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13235,
											"end": 13414,
											"name": "JUMP"
										},
										{
											"begin": 13542,
											"end": 13652,
											"name": "tag",
											"value": "457"
										},
										{
											"begin": 13542,
											"end": 13652,
											"name": "JUMPDEST"
										},
										{
											"begin": 13623,
											"end": 13646,
											"name": "PUSH [tag]",
											"value": "386"
										},
										{
											"begin": 13640,
											"end": 13645,
											"name": "DUP2"
										},
										{
											"begin": 13623,
											"end": 13646,
											"name": "PUSH [tag]",
											"value": "459"
										},
										{
											"begin": 13623,
											"end": 13646,
											"name": "JUMP"
										},
										{
											"begin": 13659,
											"end": 13766,
											"name": "tag",
											"value": "460"
										},
										{
											"begin": 13659,
											"end": 13766,
											"name": "JUMPDEST"
										},
										{
											"begin": 13738,
											"end": 13760,
											"name": "PUSH [tag]",
											"value": "386"
										},
										{
											"begin": 13754,
											"end": 13759,
											"name": "DUP2"
										},
										{
											"begin": 13738,
											"end": 13760,
											"name": "PUSH [tag]",
											"value": "462"
										},
										{
											"begin": 13738,
											"end": 13760,
											"name": "JUMP"
										},
										{
											"begin": 13773,
											"end": 13897,
											"name": "tag",
											"value": "463"
										},
										{
											"begin": 13773,
											"end": 13897,
											"name": "JUMPDEST"
										},
										{
											"begin": 13855,
											"end": 13891,
											"name": "PUSH [tag]",
											"value": "386"
										},
										{
											"begin": 13885,
											"end": 13890,
											"name": "DUP2"
										},
										{
											"begin": 13855,
											"end": 13891,
											"name": "PUSH [tag]",
											"value": "465"
										},
										{
											"begin": 13855,
											"end": 13891,
											"name": "JUMP"
										},
										{
											"begin": 13904,
											"end": 14014,
											"name": "tag",
											"value": "466"
										},
										{
											"begin": 13904,
											"end": 14014,
											"name": "JUMPDEST"
										},
										{
											"begin": 13985,
											"end": 14008,
											"name": "PUSH [tag]",
											"value": "386"
										},
										{
											"begin": 14002,
											"end": 14007,
											"name": "DUP2"
										},
										{
											"begin": 13985,
											"end": 14008,
											"name": "PUSH [tag]",
											"value": "468"
										},
										{
											"begin": 13985,
											"end": 14008,
											"name": "JUMP"
										},
										{
											"begin": 14021,
											"end": 14671,
											"name": "tag",
											"value": "228"
										},
										{
											"begin": 14021,
											"end": 14671,
											"name": "JUMPDEST"
										},
										{
											"begin": 14021,
											"end": 14671,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14276,
											"end": 14424,
											"name": "PUSH [tag]",
											"value": "469"
										},
										{
											"begin": 14420,
											"end": 14423,
											"name": "DUP3"
										},
										{
											"begin": 14276,
											"end": 14424,
											"name": "PUSH [tag]",
											"value": "415"
										},
										{
											"begin": 14276,
											"end": 14424,
											"name": "JUMP"
										},
										{
											"begin": 14276,
											"end": 14424,
											"name": "tag",
											"value": "469"
										},
										{
											"begin": 14276,
											"end": 14424,
											"name": "JUMPDEST"
										},
										{
											"begin": 14269,
											"end": 14424,
											"name": "SWAP2"
										},
										{
											"begin": 14269,
											"end": 14424,
											"name": "POP"
										},
										{
											"begin": 14435,
											"end": 14510,
											"name": "PUSH [tag]",
											"value": "470"
										},
										{
											"begin": 14506,
											"end": 14509,
											"name": "DUP3"
										},
										{
											"begin": 14497,
											"end": 14503,
											"name": "DUP6"
										},
										{
											"begin": 14435,
											"end": 14510,
											"name": "PUSH [tag]",
											"value": "394"
										},
										{
											"begin": 14435,
											"end": 14510,
											"name": "JUMP"
										},
										{
											"begin": 14435,
											"end": 14510,
											"name": "tag",
											"value": "470"
										},
										{
											"begin": 14435,
											"end": 14510,
											"name": "JUMPDEST"
										},
										{
											"begin": 14532,
											"end": 14534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14527,
											"end": 14530,
											"name": "DUP3"
										},
										{
											"begin": 14523,
											"end": 14535,
											"name": "ADD"
										},
										{
											"begin": 14516,
											"end": 14535,
											"name": "SWAP2"
										},
										{
											"begin": 14516,
											"end": 14535,
											"name": "POP"
										},
										{
											"begin": 14546,
											"end": 14621,
											"name": "PUSH [tag]",
											"value": "471"
										},
										{
											"begin": 14617,
											"end": 14620,
											"name": "DUP3"
										},
										{
											"begin": 14608,
											"end": 14614,
											"name": "DUP5"
										},
										{
											"begin": 14546,
											"end": 14621,
											"name": "PUSH [tag]",
											"value": "394"
										},
										{
											"begin": 14546,
											"end": 14621,
											"name": "JUMP"
										},
										{
											"begin": 14546,
											"end": 14621,
											"name": "tag",
											"value": "471"
										},
										{
											"begin": 14546,
											"end": 14621,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 14643,
											"end": 14645,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14634,
											"end": 14646,
											"name": "ADD"
										},
										{
											"begin": 14634,
											"end": 14646,
											"name": "SWAP3"
										},
										{
											"begin": 14257,
											"end": 14671,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 14257,
											"end": 14671,
											"name": "JUMP"
										},
										{
											"begin": 14678,
											"end": 15050,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 14678,
											"end": 15050,
											"name": "JUMPDEST"
										},
										{
											"begin": 14678,
											"end": 15050,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14877,
											"end": 15025,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 15021,
											"end": 15024,
											"name": "DUP3"
										},
										{
											"begin": 14877,
											"end": 15025,
											"name": "PUSH [tag]",
											"value": "426"
										},
										{
											"begin": 14877,
											"end": 15025,
											"name": "JUMP"
										},
										{
											"begin": 15057,
											"end": 15429,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 15057,
											"end": 15429,
											"name": "JUMPDEST"
										},
										{
											"begin": 15057,
											"end": 15429,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15256,
											"end": 15404,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 15400,
											"end": 15403,
											"name": "DUP3"
										},
										{
											"begin": 15256,
											"end": 15404,
											"name": "PUSH [tag]",
											"value": "430"
										},
										{
											"begin": 15256,
											"end": 15404,
											"name": "JUMP"
										},
										{
											"begin": 15436,
											"end": 15808,
											"name": "tag",
											"value": "224"
										},
										{
											"begin": 15436,
											"end": 15808,
											"name": "JUMPDEST"
										},
										{
											"begin": 15436,
											"end": 15808,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15635,
											"end": 15783,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 15779,
											"end": 15782,
											"name": "DUP3"
										},
										{
											"begin": 15635,
											"end": 15783,
											"name": "PUSH [tag]",
											"value": "448"
										},
										{
											"begin": 15635,
											"end": 15783,
											"name": "JUMP"
										},
										{
											"begin": 15815,
											"end": 16028,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 15815,
											"end": 16028,
											"name": "JUMPDEST"
										},
										{
											"begin": 15933,
											"end": 15935,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15918,
											"end": 15936,
											"name": "DUP2"
										},
										{
											"begin": 15918,
											"end": 15936,
											"name": "ADD"
										},
										{
											"begin": 15947,
											"end": 16018,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 15922,
											"end": 15931,
											"name": "DUP3"
										},
										{
											"begin": 15991,
											"end": 15997,
											"name": "DUP5"
										},
										{
											"begin": 15947,
											"end": 16018,
											"name": "PUSH [tag]",
											"value": "385"
										},
										{
											"begin": 15947,
											"end": 16018,
											"name": "JUMP"
										},
										{
											"begin": 16035,
											"end": 16359,
											"name": "tag",
											"value": "272"
										},
										{
											"begin": 16035,
											"end": 16359,
											"name": "JUMPDEST"
										},
										{
											"begin": 16181,
											"end": 16183,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16166,
											"end": 16184,
											"name": "DUP2"
										},
										{
											"begin": 16166,
											"end": 16184,
											"name": "ADD"
										},
										{
											"begin": 16195,
											"end": 16266,
											"name": "PUSH [tag]",
											"value": "476"
										},
										{
											"begin": 16170,
											"end": 16179,
											"name": "DUP3"
										},
										{
											"begin": 16239,
											"end": 16245,
											"name": "DUP6"
										},
										{
											"begin": 16195,
											"end": 16266,
											"name": "PUSH [tag]",
											"value": "385"
										},
										{
											"begin": 16195,
											"end": 16266,
											"name": "JUMP"
										},
										{
											"begin": 16195,
											"end": 16266,
											"name": "tag",
											"value": "476"
										},
										{
											"begin": 16195,
											"end": 16266,
											"name": "JUMPDEST"
										},
										{
											"begin": 16277,
											"end": 16349,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 16345,
											"end": 16347,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16334,
											"end": 16343,
											"name": "DUP4"
										},
										{
											"begin": 16330,
											"end": 16348,
											"name": "ADD"
										},
										{
											"begin": 16321,
											"end": 16327,
											"name": "DUP5"
										},
										{
											"begin": 16277,
											"end": 16349,
											"name": "PUSH [tag]",
											"value": "385"
										},
										{
											"begin": 16277,
											"end": 16349,
											"name": "JUMP"
										},
										{
											"begin": 16366,
											"end": 16567,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 16366,
											"end": 16567,
											"name": "JUMPDEST"
										},
										{
											"begin": 16478,
											"end": 16480,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16463,
											"end": 16481,
											"name": "DUP2"
										},
										{
											"begin": 16463,
											"end": 16481,
											"name": "ADD"
										},
										{
											"begin": 16492,
											"end": 16557,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 16467,
											"end": 16476,
											"name": "DUP3"
										},
										{
											"begin": 16530,
											"end": 16536,
											"name": "DUP5"
										},
										{
											"begin": 16492,
											"end": 16557,
											"name": "PUSH [tag]",
											"value": "388"
										},
										{
											"begin": 16492,
											"end": 16557,
											"name": "JUMP"
										},
										{
											"begin": 16574,
											"end": 16787,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 16574,
											"end": 16787,
											"name": "JUMPDEST"
										},
										{
											"begin": 16692,
											"end": 16694,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16677,
											"end": 16695,
											"name": "DUP2"
										},
										{
											"begin": 16677,
											"end": 16695,
											"name": "ADD"
										},
										{
											"begin": 16706,
											"end": 16777,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 16681,
											"end": 16690,
											"name": "DUP3"
										},
										{
											"begin": 16750,
											"end": 16756,
											"name": "DUP5"
										},
										{
											"begin": 16706,
											"end": 16777,
											"name": "PUSH [tag]",
											"value": "391"
										},
										{
											"begin": 16706,
											"end": 16777,
											"name": "JUMP"
										},
										{
											"begin": 16794,
											"end": 17565,
											"name": "tag",
											"value": "251"
										},
										{
											"begin": 16794,
											"end": 17565,
											"name": "JUMPDEST"
										},
										{
											"begin": 17052,
											"end": 17055,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 17037,
											"end": 17056,
											"name": "DUP2"
										},
										{
											"begin": 17037,
											"end": 17056,
											"name": "ADD"
										},
										{
											"begin": 17067,
											"end": 17138,
											"name": "PUSH [tag]",
											"value": "480"
										},
										{
											"begin": 17041,
											"end": 17050,
											"name": "DUP3"
										},
										{
											"begin": 17111,
											"end": 17117,
											"name": "DUP10"
										},
										{
											"begin": 17067,
											"end": 17138,
											"name": "PUSH [tag]",
											"value": "391"
										},
										{
											"begin": 17067,
											"end": 17138,
											"name": "JUMP"
										},
										{
											"begin": 17067,
											"end": 17138,
											"name": "tag",
											"value": "480"
										},
										{
											"begin": 17067,
											"end": 17138,
											"name": "JUMPDEST"
										},
										{
											"begin": 17149,
											"end": 17221,
											"name": "PUSH [tag]",
											"value": "481"
										},
										{
											"begin": 17217,
											"end": 17219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17206,
											"end": 17215,
											"name": "DUP4"
										},
										{
											"begin": 17202,
											"end": 17220,
											"name": "ADD"
										},
										{
											"begin": 17193,
											"end": 17199,
											"name": "DUP9"
										},
										{
											"begin": 17149,
											"end": 17221,
											"name": "PUSH [tag]",
											"value": "385"
										},
										{
											"begin": 17149,
											"end": 17221,
											"name": "JUMP"
										},
										{
											"begin": 17149,
											"end": 17221,
											"name": "tag",
											"value": "481"
										},
										{
											"begin": 17149,
											"end": 17221,
											"name": "JUMPDEST"
										},
										{
											"begin": 17232,
											"end": 17304,
											"name": "PUSH [tag]",
											"value": "482"
										},
										{
											"begin": 17300,
											"end": 17302,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17289,
											"end": 17298,
											"name": "DUP4"
										},
										{
											"begin": 17285,
											"end": 17303,
											"name": "ADD"
										},
										{
											"begin": 17276,
											"end": 17282,
											"name": "DUP8"
										},
										{
											"begin": 17232,
											"end": 17304,
											"name": "PUSH [tag]",
											"value": "385"
										},
										{
											"begin": 17232,
											"end": 17304,
											"name": "JUMP"
										},
										{
											"begin": 17232,
											"end": 17304,
											"name": "tag",
											"value": "482"
										},
										{
											"begin": 17232,
											"end": 17304,
											"name": "JUMPDEST"
										},
										{
											"begin": 17315,
											"end": 17387,
											"name": "PUSH [tag]",
											"value": "483"
										},
										{
											"begin": 17383,
											"end": 17385,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 17372,
											"end": 17381,
											"name": "DUP4"
										},
										{
											"begin": 17368,
											"end": 17386,
											"name": "ADD"
										},
										{
											"begin": 17359,
											"end": 17365,
											"name": "DUP7"
										},
										{
											"begin": 17315,
											"end": 17387,
											"name": "PUSH [tag]",
											"value": "391"
										},
										{
											"begin": 17315,
											"end": 17387,
											"name": "JUMP"
										},
										{
											"begin": 17315,
											"end": 17387,
											"name": "tag",
											"value": "483"
										},
										{
											"begin": 17315,
											"end": 17387,
											"name": "JUMPDEST"
										},
										{
											"begin": 17398,
											"end": 17471,
											"name": "PUSH [tag]",
											"value": "484"
										},
										{
											"begin": 17466,
											"end": 17469,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 17455,
											"end": 17464,
											"name": "DUP4"
										},
										{
											"begin": 17451,
											"end": 17470,
											"name": "ADD"
										},
										{
											"begin": 17442,
											"end": 17448,
											"name": "DUP6"
										},
										{
											"begin": 17398,
											"end": 17471,
											"name": "PUSH [tag]",
											"value": "391"
										},
										{
											"begin": 17398,
											"end": 17471,
											"name": "JUMP"
										},
										{
											"begin": 17398,
											"end": 17471,
											"name": "tag",
											"value": "484"
										},
										{
											"begin": 17398,
											"end": 17471,
											"name": "JUMPDEST"
										},
										{
											"begin": 17482,
											"end": 17555,
											"name": "PUSH [tag]",
											"value": "485"
										},
										{
											"begin": 17550,
											"end": 17553,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 17539,
											"end": 17548,
											"name": "DUP4"
										},
										{
											"begin": 17535,
											"end": 17554,
											"name": "ADD"
										},
										{
											"begin": 17526,
											"end": 17532,
											"name": "DUP5"
										},
										{
											"begin": 17482,
											"end": 17555,
											"name": "PUSH [tag]",
											"value": "391"
										},
										{
											"begin": 17482,
											"end": 17555,
											"name": "JUMP"
										},
										{
											"begin": 17482,
											"end": 17555,
											"name": "tag",
											"value": "485"
										},
										{
											"begin": 17482,
											"end": 17555,
											"name": "JUMPDEST"
										},
										{
											"begin": 17023,
											"end": 17565,
											"name": "SWAP8"
										},
										{
											"begin": 17023,
											"end": 17565,
											"name": "SWAP7"
										},
										{
											"begin": 17023,
											"end": 17565,
											"name": "POP"
										},
										{
											"begin": 17023,
											"end": 17565,
											"name": "POP"
										},
										{
											"begin": 17023,
											"end": 17565,
											"name": "POP"
										},
										{
											"begin": 17023,
											"end": 17565,
											"name": "POP"
										},
										{
											"begin": 17023,
											"end": 17565,
											"name": "POP"
										},
										{
											"begin": 17023,
											"end": 17565,
											"name": "POP"
										},
										{
											"begin": 17023,
											"end": 17565,
											"name": "POP"
										},
										{
											"begin": 17023,
											"end": 17565,
											"name": "JUMP"
										},
										{
											"begin": 17572,
											"end": 18119,
											"name": "tag",
											"value": "226"
										},
										{
											"begin": 17572,
											"end": 18119,
											"name": "JUMPDEST"
										},
										{
											"begin": 17774,
											"end": 17777,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 17759,
											"end": 17778,
											"name": "DUP2"
										},
										{
											"begin": 17759,
											"end": 17778,
											"name": "ADD"
										},
										{
											"begin": 17789,
											"end": 17860,
											"name": "PUSH [tag]",
											"value": "486"
										},
										{
											"begin": 17763,
											"end": 17772,
											"name": "DUP3"
										},
										{
											"begin": 17833,
											"end": 17839,
											"name": "DUP8"
										},
										{
											"begin": 17789,
											"end": 17860,
											"name": "PUSH [tag]",
											"value": "391"
										},
										{
											"begin": 17789,
											"end": 17860,
											"name": "JUMP"
										},
										{
											"begin": 17789,
											"end": 17860,
											"name": "tag",
											"value": "486"
										},
										{
											"begin": 17789,
											"end": 17860,
											"name": "JUMPDEST"
										},
										{
											"begin": 17871,
											"end": 17943,
											"name": "PUSH [tag]",
											"value": "487"
										},
										{
											"begin": 17939,
											"end": 17941,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17928,
											"end": 17937,
											"name": "DUP4"
										},
										{
											"begin": 17924,
											"end": 17942,
											"name": "ADD"
										},
										{
											"begin": 17915,
											"end": 17921,
											"name": "DUP7"
										},
										{
											"begin": 17871,
											"end": 17943,
											"name": "PUSH [tag]",
											"value": "385"
										},
										{
											"begin": 17871,
											"end": 17943,
											"name": "JUMP"
										},
										{
											"begin": 17871,
											"end": 17943,
											"name": "tag",
											"value": "487"
										},
										{
											"begin": 17871,
											"end": 17943,
											"name": "JUMPDEST"
										},
										{
											"begin": 17954,
											"end": 18026,
											"name": "PUSH [tag]",
											"value": "488"
										},
										{
											"begin": 18022,
											"end": 18024,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18011,
											"end": 18020,
											"name": "DUP4"
										},
										{
											"begin": 18007,
											"end": 18025,
											"name": "ADD"
										},
										{
											"begin": 17998,
											"end": 18004,
											"name": "DUP6"
										},
										{
											"begin": 17954,
											"end": 18026,
											"name": "PUSH [tag]",
											"value": "391"
										},
										{
											"begin": 17954,
											"end": 18026,
											"name": "JUMP"
										},
										{
											"begin": 17954,
											"end": 18026,
											"name": "tag",
											"value": "488"
										},
										{
											"begin": 17954,
											"end": 18026,
											"name": "JUMPDEST"
										},
										{
											"begin": 18037,
											"end": 18109,
											"name": "PUSH [tag]",
											"value": "489"
										},
										{
											"begin": 18105,
											"end": 18107,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 18094,
											"end": 18103,
											"name": "DUP4"
										},
										{
											"begin": 18090,
											"end": 18108,
											"name": "ADD"
										},
										{
											"begin": 18081,
											"end": 18087,
											"name": "DUP5"
										},
										{
											"begin": 18037,
											"end": 18109,
											"name": "PUSH [tag]",
											"value": "391"
										},
										{
											"begin": 18037,
											"end": 18109,
											"name": "JUMP"
										},
										{
											"begin": 18037,
											"end": 18109,
											"name": "tag",
											"value": "489"
										},
										{
											"begin": 18037,
											"end": 18109,
											"name": "JUMPDEST"
										},
										{
											"begin": 17745,
											"end": 18119,
											"name": "SWAP6"
										},
										{
											"begin": 17745,
											"end": 18119,
											"name": "SWAP5"
										},
										{
											"begin": 17745,
											"end": 18119,
											"name": "POP"
										},
										{
											"begin": 17745,
											"end": 18119,
											"name": "POP"
										},
										{
											"begin": 17745,
											"end": 18119,
											"name": "POP"
										},
										{
											"begin": 17745,
											"end": 18119,
											"name": "POP"
										},
										{
											"begin": 17745,
											"end": 18119,
											"name": "POP"
										},
										{
											"begin": 17745,
											"end": 18119,
											"name": "JUMP"
										},
										{
											"begin": 18126,
											"end": 18673,
											"name": "tag",
											"value": "222"
										},
										{
											"begin": 18126,
											"end": 18673,
											"name": "JUMPDEST"
										},
										{
											"begin": 18328,
											"end": 18331,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 18313,
											"end": 18332,
											"name": "DUP2"
										},
										{
											"begin": 18313,
											"end": 18332,
											"name": "ADD"
										},
										{
											"begin": 18343,
											"end": 18414,
											"name": "PUSH [tag]",
											"value": "490"
										},
										{
											"begin": 18317,
											"end": 18326,
											"name": "DUP3"
										},
										{
											"begin": 18387,
											"end": 18393,
											"name": "DUP8"
										},
										{
											"begin": 18343,
											"end": 18414,
											"name": "PUSH [tag]",
											"value": "391"
										},
										{
											"begin": 18343,
											"end": 18414,
											"name": "JUMP"
										},
										{
											"begin": 18343,
											"end": 18414,
											"name": "tag",
											"value": "490"
										},
										{
											"begin": 18343,
											"end": 18414,
											"name": "JUMPDEST"
										},
										{
											"begin": 18425,
											"end": 18497,
											"name": "PUSH [tag]",
											"value": "491"
										},
										{
											"begin": 18493,
											"end": 18495,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18482,
											"end": 18491,
											"name": "DUP4"
										},
										{
											"begin": 18478,
											"end": 18496,
											"name": "ADD"
										},
										{
											"begin": 18469,
											"end": 18475,
											"name": "DUP7"
										},
										{
											"begin": 18425,
											"end": 18497,
											"name": "PUSH [tag]",
											"value": "391"
										},
										{
											"begin": 18425,
											"end": 18497,
											"name": "JUMP"
										},
										{
											"begin": 18425,
											"end": 18497,
											"name": "tag",
											"value": "491"
										},
										{
											"begin": 18425,
											"end": 18497,
											"name": "JUMPDEST"
										},
										{
											"begin": 18508,
											"end": 18580,
											"name": "PUSH [tag]",
											"value": "492"
										},
										{
											"begin": 18576,
											"end": 18578,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18565,
											"end": 18574,
											"name": "DUP4"
										},
										{
											"begin": 18561,
											"end": 18579,
											"name": "ADD"
										},
										{
											"begin": 18552,
											"end": 18558,
											"name": "DUP6"
										},
										{
											"begin": 18508,
											"end": 18580,
											"name": "PUSH [tag]",
											"value": "391"
										},
										{
											"begin": 18508,
											"end": 18580,
											"name": "JUMP"
										},
										{
											"begin": 18508,
											"end": 18580,
											"name": "tag",
											"value": "492"
										},
										{
											"begin": 18508,
											"end": 18580,
											"name": "JUMPDEST"
										},
										{
											"begin": 18591,
											"end": 18663,
											"name": "PUSH [tag]",
											"value": "489"
										},
										{
											"begin": 18659,
											"end": 18661,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 18648,
											"end": 18657,
											"name": "DUP4"
										},
										{
											"begin": 18644,
											"end": 18662,
											"name": "ADD"
										},
										{
											"begin": 18635,
											"end": 18641,
											"name": "DUP5"
										},
										{
											"begin": 18591,
											"end": 18663,
											"name": "PUSH [tag]",
											"value": "385"
										},
										{
											"begin": 18591,
											"end": 18663,
											"name": "JUMP"
										},
										{
											"begin": 18680,
											"end": 19219,
											"name": "tag",
											"value": "230"
										},
										{
											"begin": 18680,
											"end": 19219,
											"name": "JUMPDEST"
										},
										{
											"begin": 18878,
											"end": 18881,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 18863,
											"end": 18882,
											"name": "DUP2"
										},
										{
											"begin": 18863,
											"end": 18882,
											"name": "ADD"
										},
										{
											"begin": 18893,
											"end": 18964,
											"name": "PUSH [tag]",
											"value": "494"
										},
										{
											"begin": 18867,
											"end": 18876,
											"name": "DUP3"
										},
										{
											"begin": 18937,
											"end": 18943,
											"name": "DUP8"
										},
										{
											"begin": 18893,
											"end": 18964,
											"name": "PUSH [tag]",
											"value": "391"
										},
										{
											"begin": 18893,
											"end": 18964,
											"name": "JUMP"
										},
										{
											"begin": 18893,
											"end": 18964,
											"name": "tag",
											"value": "494"
										},
										{
											"begin": 18893,
											"end": 18964,
											"name": "JUMPDEST"
										},
										{
											"begin": 18975,
											"end": 19043,
											"name": "PUSH [tag]",
											"value": "487"
										},
										{
											"begin": 19039,
											"end": 19041,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19028,
											"end": 19037,
											"name": "DUP4"
										},
										{
											"begin": 19024,
											"end": 19042,
											"name": "ADD"
										},
										{
											"begin": 19015,
											"end": 19021,
											"name": "DUP7"
										},
										{
											"begin": 18975,
											"end": 19043,
											"name": "PUSH [tag]",
											"value": "460"
										},
										{
											"begin": 18975,
											"end": 19043,
											"name": "JUMP"
										},
										{
											"begin": 19226,
											"end": 19519,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 19226,
											"end": 19519,
											"name": "JUMPDEST"
										},
										{
											"begin": 19360,
											"end": 19362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19374,
											"end": 19421,
											"name": "DUP1"
										},
										{
											"begin": 19374,
											"end": 19421,
											"name": "DUP3"
										},
										{
											"begin": 19374,
											"end": 19421,
											"name": "MSTORE"
										},
										{
											"begin": 19345,
											"end": 19363,
											"name": "DUP2"
										},
										{
											"begin": 19345,
											"end": 19363,
											"name": "ADD"
										},
										{
											"begin": 19435,
											"end": 19509,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 19345,
											"end": 19363,
											"name": "DUP2"
										},
										{
											"begin": 19495,
											"end": 19501,
											"name": "DUP5"
										},
										{
											"begin": 19435,
											"end": 19509,
											"name": "PUSH [tag]",
											"value": "398"
										},
										{
											"begin": 19435,
											"end": 19509,
											"name": "JUMP"
										},
										{
											"begin": 19834,
											"end": 20241,
											"name": "tag",
											"value": "240"
										},
										{
											"begin": 19834,
											"end": 20241,
											"name": "JUMPDEST"
										},
										{
											"begin": 20025,
											"end": 20027,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20039,
											"end": 20086,
											"name": "DUP1"
										},
										{
											"begin": 20039,
											"end": 20086,
											"name": "DUP3"
										},
										{
											"begin": 20039,
											"end": 20086,
											"name": "MSTORE"
										},
										{
											"begin": 20010,
											"end": 20028,
											"name": "DUP2"
										},
										{
											"begin": 20010,
											"end": 20028,
											"name": "ADD"
										},
										{
											"begin": 20100,
											"end": 20231,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 20010,
											"end": 20028,
											"name": "DUP2"
										},
										{
											"begin": 20100,
											"end": 20231,
											"name": "PUSH [tag]",
											"value": "413"
										},
										{
											"begin": 20100,
											"end": 20231,
											"name": "JUMP"
										},
										{
											"begin": 20248,
											"end": 20655,
											"name": "tag",
											"value": "294"
										},
										{
											"begin": 20248,
											"end": 20655,
											"name": "JUMPDEST"
										},
										{
											"begin": 20439,
											"end": 20441,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20453,
											"end": 20500,
											"name": "DUP1"
										},
										{
											"begin": 20453,
											"end": 20500,
											"name": "DUP3"
										},
										{
											"begin": 20453,
											"end": 20500,
											"name": "MSTORE"
										},
										{
											"begin": 20424,
											"end": 20442,
											"name": "DUP2"
										},
										{
											"begin": 20424,
											"end": 20442,
											"name": "ADD"
										},
										{
											"begin": 20514,
											"end": 20645,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 20424,
											"end": 20442,
											"name": "DUP2"
										},
										{
											"begin": 20514,
											"end": 20645,
											"name": "PUSH [tag]",
											"value": "418"
										},
										{
											"begin": 20514,
											"end": 20645,
											"name": "JUMP"
										},
										{
											"begin": 20662,
											"end": 21069,
											"name": "tag",
											"value": "234"
										},
										{
											"begin": 20662,
											"end": 21069,
											"name": "JUMPDEST"
										},
										{
											"begin": 20853,
											"end": 20855,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20867,
											"end": 20914,
											"name": "DUP1"
										},
										{
											"begin": 20867,
											"end": 20914,
											"name": "DUP3"
										},
										{
											"begin": 20867,
											"end": 20914,
											"name": "MSTORE"
										},
										{
											"begin": 20838,
											"end": 20856,
											"name": "DUP2"
										},
										{
											"begin": 20838,
											"end": 20856,
											"name": "ADD"
										},
										{
											"begin": 20928,
											"end": 21059,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 20838,
											"end": 20856,
											"name": "DUP2"
										},
										{
											"begin": 20928,
											"end": 21059,
											"name": "PUSH [tag]",
											"value": "420"
										},
										{
											"begin": 20928,
											"end": 21059,
											"name": "JUMP"
										},
										{
											"begin": 21076,
											"end": 21483,
											"name": "tag",
											"value": "198"
										},
										{
											"begin": 21076,
											"end": 21483,
											"name": "JUMPDEST"
										},
										{
											"begin": 21267,
											"end": 21269,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21281,
											"end": 21328,
											"name": "DUP1"
										},
										{
											"begin": 21281,
											"end": 21328,
											"name": "DUP3"
										},
										{
											"begin": 21281,
											"end": 21328,
											"name": "MSTORE"
										},
										{
											"begin": 21252,
											"end": 21270,
											"name": "DUP2"
										},
										{
											"begin": 21252,
											"end": 21270,
											"name": "ADD"
										},
										{
											"begin": 21342,
											"end": 21473,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 21252,
											"end": 21270,
											"name": "DUP2"
										},
										{
											"begin": 21342,
											"end": 21473,
											"name": "PUSH [tag]",
											"value": "422"
										},
										{
											"begin": 21342,
											"end": 21473,
											"name": "JUMP"
										},
										{
											"begin": 21490,
											"end": 21897,
											"name": "tag",
											"value": "173"
										},
										{
											"begin": 21490,
											"end": 21897,
											"name": "JUMPDEST"
										},
										{
											"begin": 21681,
											"end": 21683,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21695,
											"end": 21742,
											"name": "DUP1"
										},
										{
											"begin": 21695,
											"end": 21742,
											"name": "DUP3"
										},
										{
											"begin": 21695,
											"end": 21742,
											"name": "MSTORE"
										},
										{
											"begin": 21666,
											"end": 21684,
											"name": "DUP2"
										},
										{
											"begin": 21666,
											"end": 21684,
											"name": "ADD"
										},
										{
											"begin": 21756,
											"end": 21887,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 21666,
											"end": 21684,
											"name": "DUP2"
										},
										{
											"begin": 21756,
											"end": 21887,
											"name": "PUSH [tag]",
											"value": "424"
										},
										{
											"begin": 21756,
											"end": 21887,
											"name": "JUMP"
										},
										{
											"begin": 21904,
											"end": 22311,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 21904,
											"end": 22311,
											"name": "JUMPDEST"
										},
										{
											"begin": 22095,
											"end": 22097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22109,
											"end": 22156,
											"name": "DUP1"
										},
										{
											"begin": 22109,
											"end": 22156,
											"name": "DUP3"
										},
										{
											"begin": 22109,
											"end": 22156,
											"name": "MSTORE"
										},
										{
											"begin": 22080,
											"end": 22098,
											"name": "DUP2"
										},
										{
											"begin": 22080,
											"end": 22098,
											"name": "ADD"
										},
										{
											"begin": 22170,
											"end": 22301,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 22080,
											"end": 22098,
											"name": "DUP2"
										},
										{
											"begin": 22170,
											"end": 22301,
											"name": "PUSH [tag]",
											"value": "428"
										},
										{
											"begin": 22170,
											"end": 22301,
											"name": "JUMP"
										},
										{
											"begin": 22318,
											"end": 22725,
											"name": "tag",
											"value": "286"
										},
										{
											"begin": 22318,
											"end": 22725,
											"name": "JUMPDEST"
										},
										{
											"begin": 22509,
											"end": 22511,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22523,
											"end": 22570,
											"name": "DUP1"
										},
										{
											"begin": 22523,
											"end": 22570,
											"name": "DUP3"
										},
										{
											"begin": 22523,
											"end": 22570,
											"name": "MSTORE"
										},
										{
											"begin": 22494,
											"end": 22512,
											"name": "DUP2"
										},
										{
											"begin": 22494,
											"end": 22512,
											"name": "ADD"
										},
										{
											"begin": 22584,
											"end": 22715,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 22494,
											"end": 22512,
											"name": "DUP2"
										},
										{
											"begin": 22584,
											"end": 22715,
											"name": "PUSH [tag]",
											"value": "432"
										},
										{
											"begin": 22584,
											"end": 22715,
											"name": "JUMP"
										},
										{
											"begin": 22732,
											"end": 23139,
											"name": "tag",
											"value": "300"
										},
										{
											"begin": 22732,
											"end": 23139,
											"name": "JUMPDEST"
										},
										{
											"begin": 22923,
											"end": 22925,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22937,
											"end": 22984,
											"name": "DUP1"
										},
										{
											"begin": 22937,
											"end": 22984,
											"name": "DUP3"
										},
										{
											"begin": 22937,
											"end": 22984,
											"name": "MSTORE"
										},
										{
											"begin": 22908,
											"end": 22926,
											"name": "DUP2"
										},
										{
											"begin": 22908,
											"end": 22926,
											"name": "ADD"
										},
										{
											"begin": 22998,
											"end": 23129,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 22908,
											"end": 22926,
											"name": "DUP2"
										},
										{
											"begin": 22998,
											"end": 23129,
											"name": "PUSH [tag]",
											"value": "434"
										},
										{
											"begin": 22998,
											"end": 23129,
											"name": "JUMP"
										},
										{
											"begin": 23146,
											"end": 23553,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 23146,
											"end": 23553,
											"name": "JUMPDEST"
										},
										{
											"begin": 23337,
											"end": 23339,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23351,
											"end": 23398,
											"name": "DUP1"
										},
										{
											"begin": 23351,
											"end": 23398,
											"name": "DUP3"
										},
										{
											"begin": 23351,
											"end": 23398,
											"name": "MSTORE"
										},
										{
											"begin": 23322,
											"end": 23340,
											"name": "DUP2"
										},
										{
											"begin": 23322,
											"end": 23340,
											"name": "ADD"
										},
										{
											"begin": 23412,
											"end": 23543,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 23322,
											"end": 23340,
											"name": "DUP2"
										},
										{
											"begin": 23412,
											"end": 23543,
											"name": "PUSH [tag]",
											"value": "436"
										},
										{
											"begin": 23412,
											"end": 23543,
											"name": "JUMP"
										},
										{
											"begin": 23560,
											"end": 23967,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 23560,
											"end": 23967,
											"name": "JUMPDEST"
										},
										{
											"begin": 23751,
											"end": 23753,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23765,
											"end": 23812,
											"name": "DUP1"
										},
										{
											"begin": 23765,
											"end": 23812,
											"name": "DUP3"
										},
										{
											"begin": 23765,
											"end": 23812,
											"name": "MSTORE"
										},
										{
											"begin": 23736,
											"end": 23754,
											"name": "DUP2"
										},
										{
											"begin": 23736,
											"end": 23754,
											"name": "ADD"
										},
										{
											"begin": 23826,
											"end": 23957,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 23736,
											"end": 23754,
											"name": "DUP2"
										},
										{
											"begin": 23826,
											"end": 23957,
											"name": "PUSH [tag]",
											"value": "438"
										},
										{
											"begin": 23826,
											"end": 23957,
											"name": "JUMP"
										},
										{
											"begin": 23974,
											"end": 24381,
											"name": "tag",
											"value": "270"
										},
										{
											"begin": 23974,
											"end": 24381,
											"name": "JUMPDEST"
										},
										{
											"begin": 24165,
											"end": 24167,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24179,
											"end": 24226,
											"name": "DUP1"
										},
										{
											"begin": 24179,
											"end": 24226,
											"name": "DUP3"
										},
										{
											"begin": 24179,
											"end": 24226,
											"name": "MSTORE"
										},
										{
											"begin": 24150,
											"end": 24168,
											"name": "DUP2"
										},
										{
											"begin": 24150,
											"end": 24168,
											"name": "ADD"
										},
										{
											"begin": 24240,
											"end": 24371,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 24150,
											"end": 24168,
											"name": "DUP2"
										},
										{
											"begin": 24240,
											"end": 24371,
											"name": "PUSH [tag]",
											"value": "440"
										},
										{
											"begin": 24240,
											"end": 24371,
											"name": "JUMP"
										},
										{
											"begin": 24388,
											"end": 24795,
											"name": "tag",
											"value": "237"
										},
										{
											"begin": 24388,
											"end": 24795,
											"name": "JUMPDEST"
										},
										{
											"begin": 24579,
											"end": 24581,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24593,
											"end": 24640,
											"name": "DUP1"
										},
										{
											"begin": 24593,
											"end": 24640,
											"name": "DUP3"
										},
										{
											"begin": 24593,
											"end": 24640,
											"name": "MSTORE"
										},
										{
											"begin": 24564,
											"end": 24582,
											"name": "DUP2"
										},
										{
											"begin": 24564,
											"end": 24582,
											"name": "ADD"
										},
										{
											"begin": 24654,
											"end": 24785,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 24564,
											"end": 24582,
											"name": "DUP2"
										},
										{
											"begin": 24654,
											"end": 24785,
											"name": "PUSH [tag]",
											"value": "442"
										},
										{
											"begin": 24654,
											"end": 24785,
											"name": "JUMP"
										},
										{
											"begin": 24802,
											"end": 25209,
											"name": "tag",
											"value": "283"
										},
										{
											"begin": 24802,
											"end": 25209,
											"name": "JUMPDEST"
										},
										{
											"begin": 24993,
											"end": 24995,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25007,
											"end": 25054,
											"name": "DUP1"
										},
										{
											"begin": 25007,
											"end": 25054,
											"name": "DUP3"
										},
										{
											"begin": 25007,
											"end": 25054,
											"name": "MSTORE"
										},
										{
											"begin": 24978,
											"end": 24996,
											"name": "DUP2"
										},
										{
											"begin": 24978,
											"end": 24996,
											"name": "ADD"
										},
										{
											"begin": 25068,
											"end": 25199,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 24978,
											"end": 24996,
											"name": "DUP2"
										},
										{
											"begin": 25068,
											"end": 25199,
											"name": "PUSH [tag]",
											"value": "444"
										},
										{
											"begin": 25068,
											"end": 25199,
											"name": "JUMP"
										},
										{
											"begin": 25216,
											"end": 25623,
											"name": "tag",
											"value": "263"
										},
										{
											"begin": 25216,
											"end": 25623,
											"name": "JUMPDEST"
										},
										{
											"begin": 25407,
											"end": 25409,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25421,
											"end": 25468,
											"name": "DUP1"
										},
										{
											"begin": 25421,
											"end": 25468,
											"name": "DUP3"
										},
										{
											"begin": 25421,
											"end": 25468,
											"name": "MSTORE"
										},
										{
											"begin": 25392,
											"end": 25410,
											"name": "DUP2"
										},
										{
											"begin": 25392,
											"end": 25410,
											"name": "ADD"
										},
										{
											"begin": 25482,
											"end": 25613,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 25392,
											"end": 25410,
											"name": "DUP2"
										},
										{
											"begin": 25482,
											"end": 25613,
											"name": "PUSH [tag]",
											"value": "446"
										},
										{
											"begin": 25482,
											"end": 25613,
											"name": "JUMP"
										},
										{
											"begin": 25630,
											"end": 26037,
											"name": "tag",
											"value": "257"
										},
										{
											"begin": 25630,
											"end": 26037,
											"name": "JUMPDEST"
										},
										{
											"begin": 25821,
											"end": 25823,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25835,
											"end": 25882,
											"name": "DUP1"
										},
										{
											"begin": 25835,
											"end": 25882,
											"name": "DUP3"
										},
										{
											"begin": 25835,
											"end": 25882,
											"name": "MSTORE"
										},
										{
											"begin": 25806,
											"end": 25824,
											"name": "DUP2"
										},
										{
											"begin": 25806,
											"end": 25824,
											"name": "ADD"
										},
										{
											"begin": 25896,
											"end": 26027,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 25806,
											"end": 25824,
											"name": "DUP2"
										},
										{
											"begin": 25896,
											"end": 26027,
											"name": "PUSH [tag]",
											"value": "450"
										},
										{
											"begin": 25896,
											"end": 26027,
											"name": "JUMP"
										},
										{
											"begin": 26044,
											"end": 26451,
											"name": "tag",
											"value": "260"
										},
										{
											"begin": 26044,
											"end": 26451,
											"name": "JUMPDEST"
										},
										{
											"begin": 26235,
											"end": 26237,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26249,
											"end": 26296,
											"name": "DUP1"
										},
										{
											"begin": 26249,
											"end": 26296,
											"name": "DUP3"
										},
										{
											"begin": 26249,
											"end": 26296,
											"name": "MSTORE"
										},
										{
											"begin": 26220,
											"end": 26238,
											"name": "DUP2"
										},
										{
											"begin": 26220,
											"end": 26238,
											"name": "ADD"
										},
										{
											"begin": 26310,
											"end": 26441,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 26220,
											"end": 26238,
											"name": "DUP2"
										},
										{
											"begin": 26310,
											"end": 26441,
											"name": "PUSH [tag]",
											"value": "452"
										},
										{
											"begin": 26310,
											"end": 26441,
											"name": "JUMP"
										},
										{
											"begin": 26678,
											"end": 26887,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 26678,
											"end": 26887,
											"name": "JUMPDEST"
										},
										{
											"begin": 26794,
											"end": 26796,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26779,
											"end": 26797,
											"name": "DUP2"
										},
										{
											"begin": 26779,
											"end": 26797,
											"name": "ADD"
										},
										{
											"begin": 26808,
											"end": 26877,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 26783,
											"end": 26792,
											"name": "DUP3"
										},
										{
											"begin": 26850,
											"end": 26856,
											"name": "DUP5"
										},
										{
											"begin": 26808,
											"end": 26877,
											"name": "PUSH [tag]",
											"value": "457"
										},
										{
											"begin": 26808,
											"end": 26877,
											"name": "JUMP"
										},
										{
											"begin": 26894,
											"end": 27210,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 26894,
											"end": 27210,
											"name": "JUMPDEST"
										},
										{
											"begin": 27036,
											"end": 27038,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27021,
											"end": 27039,
											"name": "DUP2"
										},
										{
											"begin": 27021,
											"end": 27039,
											"name": "ADD"
										},
										{
											"begin": 27050,
											"end": 27119,
											"name": "PUSH [tag]",
											"value": "518"
										},
										{
											"begin": 27025,
											"end": 27034,
											"name": "DUP3"
										},
										{
											"begin": 27092,
											"end": 27098,
											"name": "DUP6"
										},
										{
											"begin": 27050,
											"end": 27119,
											"name": "PUSH [tag]",
											"value": "457"
										},
										{
											"begin": 27050,
											"end": 27119,
											"name": "JUMP"
										},
										{
											"begin": 27050,
											"end": 27119,
											"name": "tag",
											"value": "518"
										},
										{
											"begin": 27050,
											"end": 27119,
											"name": "JUMPDEST"
										},
										{
											"begin": 27130,
											"end": 27200,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 27196,
											"end": 27198,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27185,
											"end": 27194,
											"name": "DUP4"
										},
										{
											"begin": 27181,
											"end": 27199,
											"name": "ADD"
										},
										{
											"begin": 27172,
											"end": 27178,
											"name": "DUP5"
										},
										{
											"begin": 27130,
											"end": 27200,
											"name": "PUSH [tag]",
											"value": "466"
										},
										{
											"begin": 27130,
											"end": 27200,
											"name": "JUMP"
										},
										{
											"begin": 27217,
											"end": 27422,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 27217,
											"end": 27422,
											"name": "JUMPDEST"
										},
										{
											"begin": 27331,
											"end": 27333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27316,
											"end": 27334,
											"name": "DUP2"
										},
										{
											"begin": 27316,
											"end": 27334,
											"name": "ADD"
										},
										{
											"begin": 27345,
											"end": 27412,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 27320,
											"end": 27329,
											"name": "DUP3"
										},
										{
											"begin": 27385,
											"end": 27391,
											"name": "DUP5"
										},
										{
											"begin": 27345,
											"end": 27412,
											"name": "PUSH [tag]",
											"value": "460"
										},
										{
											"begin": 27345,
											"end": 27412,
											"name": "JUMP"
										},
										{
											"begin": 27429,
											"end": 27640,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 27429,
											"end": 27640,
											"name": "JUMPDEST"
										},
										{
											"begin": 27546,
											"end": 27548,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27531,
											"end": 27549,
											"name": "DUP2"
										},
										{
											"begin": 27531,
											"end": 27549,
											"name": "ADD"
										},
										{
											"begin": 27560,
											"end": 27630,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 27535,
											"end": 27544,
											"name": "DUP3"
										},
										{
											"begin": 27603,
											"end": 27609,
											"name": "DUP5"
										},
										{
											"begin": 27560,
											"end": 27630,
											"name": "PUSH [tag]",
											"value": "463"
										},
										{
											"begin": 27560,
											"end": 27630,
											"name": "JUMP"
										},
										{
											"begin": 27647,
											"end": 27856,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 27647,
											"end": 27856,
											"name": "JUMPDEST"
										},
										{
											"begin": 27763,
											"end": 27765,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27748,
											"end": 27766,
											"name": "DUP2"
										},
										{
											"begin": 27748,
											"end": 27766,
											"name": "ADD"
										},
										{
											"begin": 27777,
											"end": 27846,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 27752,
											"end": 27761,
											"name": "DUP3"
										},
										{
											"begin": 27819,
											"end": 27825,
											"name": "DUP5"
										},
										{
											"begin": 27777,
											"end": 27846,
											"name": "PUSH [tag]",
											"value": "466"
										},
										{
											"begin": 27777,
											"end": 27846,
											"name": "JUMP"
										},
										{
											"begin": 27863,
											"end": 28183,
											"name": "tag",
											"value": "335"
										},
										{
											"begin": 27863,
											"end": 28183,
											"name": "JUMPDEST"
										},
										{
											"begin": 28007,
											"end": 28009,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27992,
											"end": 28010,
											"name": "DUP2"
										},
										{
											"begin": 27992,
											"end": 28010,
											"name": "ADD"
										},
										{
											"begin": 28021,
											"end": 28091,
											"name": "PUSH [tag]",
											"value": "523"
										},
										{
											"begin": 27996,
											"end": 28005,
											"name": "DUP3"
										},
										{
											"begin": 28064,
											"end": 28070,
											"name": "DUP6"
										},
										{
											"begin": 28021,
											"end": 28091,
											"name": "PUSH [tag]",
											"value": "463"
										},
										{
											"begin": 28021,
											"end": 28091,
											"name": "JUMP"
										},
										{
											"begin": 28021,
											"end": 28091,
											"name": "tag",
											"value": "523"
										},
										{
											"begin": 28021,
											"end": 28091,
											"name": "JUMPDEST"
										},
										{
											"begin": 28102,
											"end": 28173,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 28169,
											"end": 28171,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28158,
											"end": 28167,
											"name": "DUP4"
										},
										{
											"begin": 28154,
											"end": 28172,
											"name": "ADD"
										},
										{
											"begin": 28145,
											"end": 28151,
											"name": "DUP5"
										},
										{
											"begin": 28102,
											"end": 28173,
											"name": "PUSH [tag]",
											"value": "463"
										},
										{
											"begin": 28102,
											"end": 28173,
											"name": "JUMP"
										},
										{
											"begin": 28190,
											"end": 28308,
											"name": "tag",
											"value": "409"
										},
										{
											"begin": 28190,
											"end": 28308,
											"name": "JUMPDEST"
										},
										{
											"begin": 28274,
											"end": 28286,
											"name": "MLOAD"
										},
										{
											"begin": 28274,
											"end": 28286,
											"name": "SWAP1"
										},
										{
											"begin": 28245,
											"end": 28308,
											"name": "JUMP"
										},
										{
											"begin": 28445,
											"end": 28608,
											"name": "tag",
											"value": "402"
										},
										{
											"begin": 28445,
											"end": 28608,
											"name": "JUMPDEST"
										},
										{
											"begin": 28548,
											"end": 28567,
											"name": "SWAP1"
										},
										{
											"begin": 28548,
											"end": 28567,
											"name": "DUP2"
										},
										{
											"begin": 28548,
											"end": 28567,
											"name": "MSTORE"
										},
										{
											"begin": 28597,
											"end": 28601,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28588,
											"end": 28602,
											"name": "ADD"
										},
										{
											"begin": 28588,
											"end": 28602,
											"name": "SWAP1"
										},
										{
											"begin": 28541,
											"end": 28608,
											"name": "JUMP"
										},
										{
											"begin": 28617,
											"end": 28762,
											"name": "tag",
											"value": "417"
										},
										{
											"begin": 28617,
											"end": 28762,
											"name": "JUMPDEST"
										},
										{
											"begin": 28753,
											"end": 28756,
											"name": "SWAP2"
										},
										{
											"begin": 28731,
											"end": 28762,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 28731,
											"end": 28762,
											"name": "JUMP"
										},
										{
											"begin": 28770,
											"end": 28861,
											"name": "tag",
											"value": "387"
										},
										{
											"begin": 28770,
											"end": 28861,
											"name": "JUMPDEST"
										},
										{
											"begin": 28770,
											"end": 28861,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28832,
											"end": 28856,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 28850,
											"end": 28855,
											"name": "DUP3"
										},
										{
											"begin": 28832,
											"end": 28856,
											"name": "PUSH [tag]",
											"value": "526"
										},
										{
											"begin": 28832,
											"end": 28856,
											"name": "JUMP"
										},
										{
											"begin": 28868,
											"end": 28953,
											"name": "tag",
											"value": "390"
										},
										{
											"begin": 28868,
											"end": 28953,
											"name": "JUMPDEST"
										},
										{
											"begin": 28934,
											"end": 28947,
											"name": "ISZERO"
										},
										{
											"begin": 28927,
											"end": 28948,
											"name": "ISZERO"
										},
										{
											"begin": 28927,
											"end": 28948,
											"name": "SWAP1"
										},
										{
											"begin": 28910,
											"end": 28953,
											"name": "JUMP"
										},
										{
											"begin": 28960,
											"end": 29032,
											"name": "tag",
											"value": "393"
										},
										{
											"begin": 28960,
											"end": 29032,
											"name": "JUMPDEST"
										},
										{
											"begin": 29022,
											"end": 29027,
											"name": "SWAP1"
										},
										{
											"begin": 29005,
											"end": 29032,
											"name": "JUMP"
										},
										{
											"begin": 29039,
											"end": 29160,
											"name": "tag",
											"value": "526"
										},
										{
											"begin": 29039,
											"end": 29160,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 29101,
											"end": 29155,
											"name": "AND"
										},
										{
											"begin": 29101,
											"end": 29155,
											"name": "SWAP1"
										},
										{
											"begin": 29084,
											"end": 29160,
											"name": "JUMP"
										},
										{
											"begin": 29246,
											"end": 29334,
											"name": "tag",
											"value": "459"
										},
										{
											"begin": 29246,
											"end": 29334,
											"name": "JUMPDEST"
										},
										{
											"begin": 29318,
											"end": 29328,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 29307,
											"end": 29329,
											"name": "AND"
										},
										{
											"begin": 29307,
											"end": 29329,
											"name": "SWAP1"
										},
										{
											"begin": 29290,
											"end": 29334,
											"name": "JUMP"
										},
										{
											"begin": 29341,
											"end": 29422,
											"name": "tag",
											"value": "462"
										},
										{
											"begin": 29341,
											"end": 29422,
											"name": "JUMPDEST"
										},
										{
											"begin": 29412,
											"end": 29416,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 29401,
											"end": 29417,
											"name": "AND"
										},
										{
											"begin": 29401,
											"end": 29417,
											"name": "SWAP1"
										},
										{
											"begin": 29384,
											"end": 29422,
											"name": "JUMP"
										},
										{
											"begin": 29429,
											"end": 29533,
											"name": "tag",
											"value": "468"
										},
										{
											"begin": 29429,
											"end": 29533,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 29490,
											"end": 29528,
											"name": "AND"
										},
										{
											"begin": 29490,
											"end": 29528,
											"name": "SWAP1"
										},
										{
											"begin": 29473,
											"end": 29533,
											"name": "JUMP"
										},
										{
											"begin": 29540,
											"end": 29646,
											"name": "tag",
											"value": "465"
										},
										{
											"begin": 29540,
											"end": 29646,
											"name": "JUMPDEST"
										},
										{
											"begin": 29540,
											"end": 29646,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 29618,
											"end": 29641,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 29635,
											"end": 29640,
											"name": "DUP3"
										},
										{
											"begin": 29618,
											"end": 29641,
											"name": "PUSH [tag]",
											"value": "468"
										},
										{
											"begin": 29618,
											"end": 29641,
											"name": "JUMP"
										},
										{
											"begin": 29654,
											"end": 29922,
											"name": "tag",
											"value": "404"
										},
										{
											"begin": 29654,
											"end": 29922,
											"name": "JUMPDEST"
										},
										{
											"begin": 29719,
											"end": 29720,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 29726,
											"end": 29827,
											"name": "tag",
											"value": "528"
										},
										{
											"begin": 29726,
											"end": 29827,
											"name": "JUMPDEST"
										},
										{
											"begin": 29740,
											"end": 29746,
											"name": "DUP4"
										},
										{
											"begin": 29737,
											"end": 29738,
											"name": "DUP2"
										},
										{
											"begin": 29734,
											"end": 29747,
											"name": "LT"
										},
										{
											"begin": 29726,
											"end": 29827,
											"name": "ISZERO"
										},
										{
											"begin": 29726,
											"end": 29827,
											"name": "PUSH [tag]",
											"value": "530"
										},
										{
											"begin": 29726,
											"end": 29827,
											"name": "JUMPI"
										},
										{
											"begin": 29807,
											"end": 29818,
											"name": "DUP2"
										},
										{
											"begin": 29807,
											"end": 29818,
											"name": "DUP2"
										},
										{
											"begin": 29807,
											"end": 29818,
											"name": "ADD"
										},
										{
											"begin": 29801,
											"end": 29819,
											"name": "MLOAD"
										},
										{
											"begin": 29788,
											"end": 29799,
											"name": "DUP4"
										},
										{
											"begin": 29788,
											"end": 29799,
											"name": "DUP3"
										},
										{
											"begin": 29788,
											"end": 29799,
											"name": "ADD"
										},
										{
											"begin": 29781,
											"end": 29820,
											"name": "MSTORE"
										},
										{
											"begin": 29762,
											"end": 29764,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29755,
											"end": 29765,
											"name": "ADD"
										},
										{
											"begin": 29726,
											"end": 29827,
											"name": "PUSH [tag]",
											"value": "528"
										},
										{
											"begin": 29726,
											"end": 29827,
											"name": "JUMP"
										},
										{
											"begin": 29726,
											"end": 29827,
											"name": "tag",
											"value": "530"
										},
										{
											"begin": 29726,
											"end": 29827,
											"name": "JUMPDEST"
										},
										{
											"begin": 29842,
											"end": 29848,
											"name": "DUP4"
										},
										{
											"begin": 29839,
											"end": 29840,
											"name": "DUP2"
										},
										{
											"begin": 29836,
											"end": 29849,
											"name": "GT"
										},
										{
											"begin": 29833,
											"end": 29835,
											"name": "ISZERO"
										},
										{
											"begin": 29833,
											"end": 29835,
											"name": "PUSH [tag]",
											"value": "322"
										},
										{
											"begin": 29833,
											"end": 29835,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 29907,
											"end": 29908,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 29889,
											"end": 29905,
											"name": "SWAP2"
										},
										{
											"begin": 29889,
											"end": 29905,
											"name": "ADD"
										},
										{
											"begin": 29882,
											"end": 29909,
											"name": "MSTORE"
										},
										{
											"begin": 29703,
											"end": 29922,
											"name": "JUMP"
										},
										{
											"begin": 30011,
											"end": 30108,
											"name": "tag",
											"value": "406"
										},
										{
											"begin": 30011,
											"end": 30108,
											"name": "JUMPDEST"
										},
										{
											"begin": 30099,
											"end": 30101,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 30079,
											"end": 30093,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 30075,
											"end": 30103,
											"name": "AND"
										},
										{
											"begin": 30075,
											"end": 30103,
											"name": "SWAP1"
										},
										{
											"begin": 30059,
											"end": 30108,
											"name": "JUMP"
										},
										{
											"begin": 30116,
											"end": 30233,
											"name": "tag",
											"value": "342"
										},
										{
											"begin": 30116,
											"end": 30233,
											"name": "JUMPDEST"
										},
										{
											"begin": 30185,
											"end": 30209,
											"name": "PUSH [tag]",
											"value": "532"
										},
										{
											"begin": 30203,
											"end": 30208,
											"name": "DUP2"
										},
										{
											"begin": 30185,
											"end": 30209,
											"name": "PUSH [tag]",
											"value": "387"
										},
										{
											"begin": 30185,
											"end": 30209,
											"name": "JUMP"
										},
										{
											"begin": 30185,
											"end": 30209,
											"name": "tag",
											"value": "532"
										},
										{
											"begin": 30185,
											"end": 30209,
											"name": "JUMPDEST"
										},
										{
											"begin": 30178,
											"end": 30183,
											"name": "DUP2"
										},
										{
											"begin": 30175,
											"end": 30210,
											"name": "EQ"
										},
										{
											"begin": 30165,
											"end": 30167,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 30165,
											"end": 30167,
											"name": "JUMPI"
										},
										{
											"begin": 30224,
											"end": 30225,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 30221,
											"end": 30222,
											"name": "DUP1"
										},
										{
											"begin": 30214,
											"end": 30226,
											"name": "REVERT"
										},
										{
											"begin": 30240,
											"end": 30357,
											"name": "tag",
											"value": "345"
										},
										{
											"begin": 30240,
											"end": 30357,
											"name": "JUMPDEST"
										},
										{
											"begin": 30309,
											"end": 30333,
											"name": "PUSH [tag]",
											"value": "532"
										},
										{
											"begin": 30327,
											"end": 30332,
											"name": "DUP2"
										},
										{
											"begin": 30309,
											"end": 30333,
											"name": "PUSH [tag]",
											"value": "393"
										},
										{
											"begin": 30309,
											"end": 30333,
											"name": "JUMP"
										},
										{
											"begin": 30488,
											"end": 30603,
											"name": "tag",
											"value": "351"
										},
										{
											"begin": 30488,
											"end": 30603,
											"name": "JUMPDEST"
										},
										{
											"begin": 30556,
											"end": 30579,
											"name": "PUSH [tag]",
											"value": "532"
										},
										{
											"begin": 30573,
											"end": 30578,
											"name": "DUP2"
										},
										{
											"begin": 30556,
											"end": 30579,
											"name": "PUSH [tag]",
											"value": "459"
										},
										{
											"begin": 30556,
											"end": 30579,
											"name": "JUMP"
										},
										{
											"begin": 30610,
											"end": 30723,
											"name": "tag",
											"value": "354"
										},
										{
											"begin": 30610,
											"end": 30723,
											"name": "JUMPDEST"
										},
										{
											"begin": 30677,
											"end": 30699,
											"name": "PUSH [tag]",
											"value": "532"
										},
										{
											"begin": 30693,
											"end": 30698,
											"name": "DUP2"
										},
										{
											"begin": 30677,
											"end": 30699,
											"name": "PUSH [tag]",
											"value": "462"
										},
										{
											"begin": 30677,
											"end": 30699,
											"name": "JUMP"
										}
									],
									".data": {
										"136758788D48EC4D9744BA8C2136A9C9406D6C92CD4A81EFF0DE4942B636DB13": "556e693a3a7472616e7366657246726f6d3a207472616e7366657220616d6f756e742065786365656473207370656e64657220616c6c6f77616e6365",
										"1EF2347F5DBB97E8EB7BC1442A128A1C6E65386B013257FE2B8AD95AAAA96AB8": "556e693a3a6d696e743a20746f74616c537570706c7920657863656564732039362062697473",
										"3230BA2CB739B33589720B8A5892642694535E935234939514431FF16907D24A": "556e693a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"58DA0B91010307EE6A63257C5283618928105E355857D8F79CF7E017AD7082F4": "556e693a3a7065726d69743a20616d6f756e7420657863656564732039362062697473",
										"5C6C891434A3C5951DB59F5FE43D566B04BF54E07BC444B7F9F72601E608DC42": "556e693a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f7773",
										"66157EF8D926A3327823FECD4CE53EDFCB6533C37C90DC98ACFB91E4F2854725": "556e693a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473",
										"8F9E8E1E6816D4A772D233C08B8292A576126F7DBD1D9B7CD30EF07F7C3D78D2": "556e693a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f7773",
										"9BC67DB7413F33B8F7A9995149809B7B3A4A83B5BA884084BEA06CFB35986555": "556e693a3a7472616e736665723a20616d6f756e7420657863656564732039362062697473",
										"AB5EAE08D50CC345C58C2D7D67F9034A98D0A88DD540314C408C39A8DCEC01D": "556e693a3a6d696e743a207472616e7366657220616d6f756e74206f766572666c6f7773",
										"BCB6733E7AC2AEE3C3602EE664D4B3CB251E429DF5C7E9148D412D0B60F07B16": "556e693a3a6d696e743a20616d6f756e7420657863656564732039362062697473",
										"CB3E128DA7F3F16C83A901CCE3AB145C66BAD45A0CD648091FECC9964EBF42FE": "556e693a3a617070726f76653a20616d6f756e7420657863656564732039362062697473",
										"F838EE8B15C3D07740BB9B304B8146EC63BB435A7703825B5E6424EE2072674A": "556e693a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e74206f766572666c6f7773"
									}
								}
							}
						},
						"methodIdentifiers": {
							"DELEGATION_TYPEHASH()": "e7a324dc",
							"DOMAIN_TYPEHASH()": "20606b70",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"checkpoints(address,uint32)": "f1127ed8",
							"decimals()": "313ce567",
							"delegate(address)": "5c19a95c",
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "c3cda520",
							"delegates(address)": "587cde1e",
							"getCurrentVotes(address)": "b4b5ea57",
							"getPriorVotes(address,uint256)": "782d6fe1",
							"minimumTimeBetweenMints()": "5c11d62f",
							"mint(address,uint256)": "40c10f19",
							"mintCap()": "76c71ca1",
							"minter()": "07546172",
							"mintingAllowedAfter()": "30b36cef",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"numCheckpoints(address)": "6fcfff45",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"setMinter(address)": "fca3b5aa",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minter_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"mintingAllowedAfter_\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newMinter\",\"type\":\"address\"}],\"name\":\"MinterChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DELEGATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rawAmount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"votes\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getCurrentVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minimumTimeBetweenMints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rawAmount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mintCap\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mintingAllowedAfter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rawAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter_\",\"type\":\"address\"}],\"name\":\"setMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rawAmount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rawAmount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"params\":{\"account\":\"The address of the account holding the funds\",\"spender\":\"The address of the account spending the funds\"},\"return\":\"The number of tokens approved\"},\"approve(address,uint256)\":{\"details\":\"This will overwrite the approval amount for `spender` and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)\",\"params\":{\"rawAmount\":\"The number of tokens that are approved (2^256-1 means infinite)\",\"spender\":\"The address of the account which may transfer tokens\"},\"return\":\"Whether or not the approval succeeded\"},\"balanceOf(address)\":{\"params\":{\"account\":\"The address of the account to get the balance of\"},\"return\":\"The number of tokens held\"},\"constructor\":{\"params\":{\"account\":\"The initial account to grant all the tokens\",\"minter_\":\"The account with minting ability\",\"mintingAllowedAfter_\":\"The timestamp after which minting may occur\"}},\"delegate(address)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\"}},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\",\"expiry\":\"The time at which to expire the signature\",\"nonce\":\"The contract state required to match the signature\",\"r\":\"Half of the ECDSA signature pair\",\"s\":\"Half of the ECDSA signature pair\",\"v\":\"The recovery byte of the signature\"}},\"getCurrentVotes(address)\":{\"params\":{\"account\":\"The address to get votes balance\"},\"return\":\"The number of current votes for `account`\"},\"getPriorVotes(address,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation.\",\"params\":{\"account\":\"The address of the account to check\",\"blockNumber\":\"The block number to get the vote balance at\"},\"return\":\"The number of votes the account had as of the given block\"},\"mint(address,uint256)\":{\"params\":{\"dst\":\"The address of the destination account\",\"rawAmount\":\"The number of tokens to be minted\"}},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"deadline\":\"The time at which to expire the signature\",\"owner\":\"The address to approve from\",\"r\":\"Half of the ECDSA signature pair\",\"rawAmount\":\"The number of tokens that are approved (2^256-1 means infinite)\",\"s\":\"Half of the ECDSA signature pair\",\"spender\":\"The address to be approved\",\"v\":\"The recovery byte of the signature\"}},\"setMinter(address)\":{\"params\":{\"minter_\":\"The address of the new minter\"}},\"transfer(address,uint256)\":{\"params\":{\"dst\":\"The address of the destination account\",\"rawAmount\":\"The number of tokens to transfer\"},\"return\":\"Whether or not the transfer succeeded\"},\"transferFrom(address,address,uint256)\":{\"params\":{\"dst\":\"The address of the destination account\",\"rawAmount\":\"The number of tokens to transfer\",\"src\":\"The address of the source account\"},\"return\":\"Whether or not the transfer succeeded\"}}},\"userdoc\":{\"methods\":{\"allowance(address,address)\":{\"notice\":\"Get the number of tokens `spender` is approved to spend on behalf of `account`\"},\"approve(address,uint256)\":{\"notice\":\"Approve `spender` to transfer up to `amount` from `src`\"},\"balanceOf(address)\":{\"notice\":\"Get the number of tokens held by the `account`\"},\"constructor\":\"Construct a new Uni token\",\"delegate(address)\":{\"notice\":\"Delegate votes from `msg.sender` to `delegatee`\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Delegates votes from signatory to `delegatee`\"},\"getCurrentVotes(address)\":{\"notice\":\"Gets the current votes balance for `account`\"},\"getPriorVotes(address,uint256)\":{\"notice\":\"Determine the prior number of votes for an account as of a block number\"},\"mint(address,uint256)\":{\"notice\":\"Mint new tokens\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Triggers an approval from owner to spends\"},\"setMinter(address)\":{\"notice\":\"Change the minter address\"},\"transfer(address,uint256)\":{\"notice\":\"Transfer `amount` tokens from `msg.sender` to `dst`\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer `amount` tokens from `src` to `dst`\"}}}},\"settings\":{\"compilationTarget\":{\"kcbreward.sol\":\"Uni\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"kcbreward.sol\":{\"keccak256\":\"0x112df1c09207e46636533fc5f793e46d1ccf407848b8d1a30fd8ade7b5e040c1\",\"urls\":[\"bzz-raw://ae14de1143e3fb460ce7ce7fca2da4bcc845b1704aacea07c632386747e9e503\",\"dweb:/ipfs/QmY7sKYtRFw9KsVjHgNDFcPsJUZ21YHKcVeGh18pzVTd4C\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 262,
								"contract": "kcbreward.sol:Uni",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 264,
								"contract": "kcbreward.sol:Uni",
								"label": "minter",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 266,
								"contract": "kcbreward.sol:Uni",
								"label": "mintingAllowedAfter",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 280,
								"contract": "kcbreward.sol:Uni",
								"label": "allowances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint96))"
							},
							{
								"astId": 284,
								"contract": "kcbreward.sol:Uni",
								"label": "balances",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint96)"
							},
							{
								"astId": 288,
								"contract": "kcbreward.sol:Uni",
								"label": "delegates",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 299,
								"contract": "kcbreward.sol:Uni",
								"label": "checkpoints",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)293_storage))"
							},
							{
								"astId": 303,
								"contract": "kcbreward.sol:Uni",
								"label": "numCheckpoints",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint32)"
							},
							{
								"astId": 322,
								"contract": "kcbreward.sol:Uni",
								"label": "nonces",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint96))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint96))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint96)"
							},
							"t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)293_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint32 => struct Uni.Checkpoint))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint32,t_struct(Checkpoint)293_storage)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_address,t_uint32)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint32)",
								"numberOfBytes": "32",
								"value": "t_uint32"
							},
							"t_mapping(t_address,t_uint96)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint96)",
								"numberOfBytes": "32",
								"value": "t_uint96"
							},
							"t_mapping(t_uint32,t_struct(Checkpoint)293_storage)": {
								"encoding": "mapping",
								"key": "t_uint32",
								"label": "mapping(uint32 => struct Uni.Checkpoint)",
								"numberOfBytes": "32",
								"value": "t_struct(Checkpoint)293_storage"
							},
							"t_struct(Checkpoint)293_storage": {
								"encoding": "inplace",
								"label": "struct Uni.Checkpoint",
								"members": [
									{
										"astId": 290,
										"contract": "kcbreward.sol:Uni",
										"label": "fromBlock",
										"offset": 0,
										"slot": "0",
										"type": "t_uint32"
									},
									{
										"astId": 292,
										"contract": "kcbreward.sol:Uni",
										"label": "votes",
										"offset": 4,
										"slot": "0",
										"type": "t_uint96"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint96": {
								"encoding": "inplace",
								"label": "uint96",
								"numberOfBytes": "12"
							}
						}
					},
					"userdoc": {
						"methods": {
							"allowance(address,address)": {
								"notice": "Get the number of tokens `spender` is approved to spend on behalf of `account`"
							},
							"approve(address,uint256)": {
								"notice": "Approve `spender` to transfer up to `amount` from `src`"
							},
							"balanceOf(address)": {
								"notice": "Get the number of tokens held by the `account`"
							},
							"constructor": "Construct a new Uni token",
							"delegate(address)": {
								"notice": "Delegate votes from `msg.sender` to `delegatee`"
							},
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Delegates votes from signatory to `delegatee`"
							},
							"getCurrentVotes(address)": {
								"notice": "Gets the current votes balance for `account`"
							},
							"getPriorVotes(address,uint256)": {
								"notice": "Determine the prior number of votes for an account as of a block number"
							},
							"mint(address,uint256)": {
								"notice": "Mint new tokens"
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Triggers an approval from owner to spends"
							},
							"setMinter(address)": {
								"notice": "Change the minter address"
							},
							"transfer(address,uint256)": {
								"notice": "Transfer `amount` tokens from `msg.sender` to `dst`"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfer `amount` tokens from `src` to `dst`"
							}
						}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "kcbreward.sol:10:1: Warning: Experimental features are turned on. Do not use experimental features on live deployments.\npragma experimental ABIEncoderV2;\n^-------------------------------^\n",
				"message": "Experimental features are turned on. Do not use experimental features on live deployments.",
				"severity": "warning",
				"sourceLocation": {
					"end": 192,
					"file": "kcbreward.sol",
					"start": 159
				},
				"type": "Warning"
			}
		],
		"sources": {
			"kcbreward.sol": {
				"ast": {
					"absolutePath": "kcbreward.sol",
					"exportedSymbols": {
						"SafeMath": [
							250
						],
						"Uni": [
							1520
						]
					},
					"id": 1521,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "134:24:0"
						},
						{
							"id": 2,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "159:33:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 250,
							"linearizedBaseContracts": [
								250
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 26,
										"nodeType": "Block",
										"src": "1194:109:0",
										"statements": [
											{
												"assignments": [
													12
												],
												"declarations": [
													{
														"constant": false,
														"id": 12,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 26,
														"src": "1204:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 11,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1204:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 16,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 13,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "1216:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 14,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "1220:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1216:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1204:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 18,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "1239:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 19,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "1244:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1239:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1247:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 17,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1538,
															1539
														],
														"referencedDeclaration": 1539,
														"src": "1231:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1231:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "1231:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 24,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 12,
													"src": "1295:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 10,
												"id": 25,
												"nodeType": "Return",
												"src": "1288:8:0"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on overflow.\n     * Counterpart to Solidity's `+` operator.\n     * Requirements:\n- Addition cannot overflow.",
									"id": 27,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "1140:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1140:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 6,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "1151:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1139:22:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "1185:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1184:9:0"
									},
									"scope": 250,
									"src": "1127:176:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1639:92:0",
										"statements": [
											{
												"assignments": [
													39
												],
												"declarations": [
													{
														"constant": false,
														"id": 39,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 53,
														"src": "1649:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 38,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1649:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 43,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 40,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "1661:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 41,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "1665:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1661:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1649:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 45,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1684:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 46,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1689:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1684:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 48,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "1692:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1538,
															1539
														],
														"referencedDeclaration": 1539,
														"src": "1676:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1676:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "1676:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 51,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 39,
													"src": "1723:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 37,
												"id": 52,
												"nodeType": "Return",
												"src": "1716:8:0"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting with custom message on overflow.\n     * Counterpart to Solidity's `+` operator.\n     * Requirements:\n- Addition cannot overflow.",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1568:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1579:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 32,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1579:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1556:50:0"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1630:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1629:9:0"
									},
									"scope": 250,
									"src": "1544:187:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "2057:68:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 64,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2078:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 65,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "2081:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e20756e646572666c6f77",
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2084:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1caebeb8fec78d96e2107fd22e0abe38fcab72034848d9a80a8de2a86ac41d40",
																"typeString": "literal_string \"SafeMath: subtraction underflow\""
															},
															"value": "SafeMath: subtraction underflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_1caebeb8fec78d96e2107fd22e0abe38fcab72034848d9a80a8de2a86ac41d40",
																"typeString": "literal_string \"SafeMath: subtraction underflow\""
															}
														],
														"id": 63,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															70,
															97
														],
														"referencedDeclaration": 97,
														"src": "2074:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2074:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 62,
												"id": 68,
												"nodeType": "Return",
												"src": "2067:51:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on underflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot underflow.",
									"id": 70,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2003:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2003:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2014:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2002:22:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2048:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 60,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2047:9:0"
									},
									"scope": 250,
									"src": "1990:135:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 96,
										"nodeType": "Block",
										"src": "2499:92:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 82,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 74,
																"src": "2517:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 83,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 72,
																"src": "2522:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2517:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 85,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "2525:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 81,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1538,
															1539
														],
														"referencedDeclaration": 1539,
														"src": "2509:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "2509:29:0"
											},
											{
												"assignments": [
													89
												],
												"declarations": [
													{
														"constant": false,
														"id": 89,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 96,
														"src": "2548:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 88,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2548:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 93,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 90,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "2560:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 91,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "2564:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2560:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2548:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 94,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 89,
													"src": "2583:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 80,
												"id": 95,
												"nodeType": "Return",
												"src": "2576:8:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on underflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot underflow.",
									"id": 97,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "2417:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2417:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "2428:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "2439:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 75,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2439:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2416:50:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "2490:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2490:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2489:9:0"
									},
									"scope": 250,
									"src": "2404:187:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "2891:392:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 106,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "3123:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 107,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3128:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3123:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3119:45:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3131:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3152:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 105,
															"id": 110,
															"nodeType": "Return",
															"src": "3145:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													114
												],
												"declarations": [
													{
														"constant": false,
														"id": 114,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 130,
														"src": "3174:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 113,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3174:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 118,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 115,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "3186:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 116,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "3190:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3186:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3174:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 120,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 114,
																	"src": "3209:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 121,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 99,
																	"src": "3213:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3209:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 123,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "3218:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3209:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3221:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 119,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1538,
															1539
														],
														"referencedDeclaration": 1539,
														"src": "3201:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3201:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "3201:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 128,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 114,
													"src": "3275:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 105,
												"id": 129,
												"nodeType": "Return",
												"src": "3268:8:0"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on overflow.\n     * Counterpart to Solidity's `*` operator.\n     * Requirements:\n- Multiplication cannot overflow.",
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "2837:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2837:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "2848:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2848:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2836:22:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "2882:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2881:9:0"
									},
									"scope": 250,
									"src": "2824:459:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "3611:369:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 142,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "3843:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 143,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3848:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3843:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 148,
												"nodeType": "IfStatement",
												"src": "3839:45:0",
												"trueBody": {
													"id": 147,
													"nodeType": "Block",
													"src": "3851:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3872:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 141,
															"id": 146,
															"nodeType": "Return",
															"src": "3865:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													150
												],
												"declarations": [
													{
														"constant": false,
														"id": 150,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 166,
														"src": "3894:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 149,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3894:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 154,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 151,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "3906:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 152,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "3910:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3906:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3894:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 156,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "3929:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 157,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "3933:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3929:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 159,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 135,
																"src": "3938:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3929:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 161,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "3941:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 155,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1538,
															1539
														],
														"referencedDeclaration": 1539,
														"src": "3921:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3921:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "3921:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 164,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 150,
													"src": "3972:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 141,
												"id": 165,
												"nodeType": "Return",
												"src": "3965:8:0"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on overflow.\n     * Counterpart to Solidity's `*` operator.\n     * Requirements:\n- Multiplication cannot overflow.",
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "3529:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3529:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "3540:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3540:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "3551:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 136,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3551:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3528:50:0"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "3602:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3602:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3601:9:0"
									},
									"scope": 250,
									"src": "3516:464:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 182,
										"nodeType": "Block",
										"src": "4502:63:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 177,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "4523:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 178,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "4526:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 179,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4529:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 176,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															183,
															210
														],
														"referencedDeclaration": 210,
														"src": "4519:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4519:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 175,
												"id": 181,
												"nodeType": "Return",
												"src": "4512:46:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers.\nReverts on division by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "4448:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4448:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "4459:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4459:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4447:22:0"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "4493:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4493:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4492:9:0"
									},
									"scope": 250,
									"src": "4435:130:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "5135:243:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 195,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 187,
																"src": "5219:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5223:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5219:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 198,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "5226:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 194,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1538,
															1539
														],
														"referencedDeclaration": 1539,
														"src": "5211:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5211:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "5211:28:0"
											},
											{
												"assignments": [
													202
												],
												"declarations": [
													{
														"constant": false,
														"id": 202,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 209,
														"src": "5249:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 201,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5249:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 206,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 203,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "5261:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 204,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "5265:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5261:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5249:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 207,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 202,
													"src": "5370:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 193,
												"id": 208,
												"nodeType": "Return",
												"src": "5363:8:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers.\nReverts with custom message on division by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "5053:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5053:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "5064:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5064:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "5075:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 188,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5075:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5052:50:0"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "5126:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5126:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5125:9:0"
									},
									"scope": 250,
									"src": "5040:338:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "5889:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 220,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "5910:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 221,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "5913:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5916:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 219,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															226,
															249
														],
														"referencedDeclaration": 249,
														"src": "5906:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5906:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 218,
												"id": 224,
												"nodeType": "Return",
												"src": "5899:44:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "5835:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5835:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "5846:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5846:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5834:22:0"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "5880:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5880:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5879:9:0"
									},
									"scope": 250,
									"src": "5822:128:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "6509:68:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 238,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 230,
																"src": "6527:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6532:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6527:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 241,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "6535:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 237,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1538,
															1539
														],
														"referencedDeclaration": 1539,
														"src": "6519:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6519:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 243,
												"nodeType": "ExpressionStatement",
												"src": "6519:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 244,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "6565:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 245,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 230,
														"src": "6569:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6565:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 236,
												"id": 247,
												"nodeType": "Return",
												"src": "6558:12:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "6427:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6427:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "6438:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6438:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "6449:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 231,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6449:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6426:50:0"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "6500:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6500:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6499:9:0"
									},
									"scope": 250,
									"src": "6414:163:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1521,
							"src": "889:5690:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1520,
							"linearizedBaseContracts": [
								1520
							],
							"name": "Uni",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 253,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 1520,
									"src": "6649:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 251,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6649:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "556e6973776170",
										"id": 252,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6679:9:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_99c45e8ee5dde061ced9c812089094fbd28a020e7e37f2851198887e5ca64985",
											"typeString": "literal_string \"Uniswap\""
										},
										"value": "Uniswap"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 256,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 1520,
									"src": "6746:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 254,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6746:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "554e49",
										"id": 255,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6778:5:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_fba01d52a7cd84480d0573725899486a0b5e55c20ff45d6628874349375d1650",
											"typeString": "literal_string \"UNI\""
										},
										"value": "UNI"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 259,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 1520,
									"src": "6843:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 257,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "6843:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3138",
										"id": 258,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6876:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 262,
									"name": "totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 1520,
									"src": "6939:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 260,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "6939:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "315f3030305f3030305f303030653138",
										"id": 261,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6965:16:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										},
										"value": "1_000_000_000e18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 264,
									"name": "minter",
									"nodeType": "VariableDeclaration",
									"scope": 1520,
									"src": "7055:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 263,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7055:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 266,
									"name": "mintingAllowedAfter",
									"nodeType": "VariableDeclaration",
									"scope": 1520,
									"src": "7143:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 265,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "7143:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 271,
									"name": "minimumTimeBetweenMints",
									"nodeType": "VariableDeclaration",
									"scope": 1520,
									"src": "7224:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 267,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "7224:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_31536000_by_1",
											"typeString": "int_const 31536000"
										},
										"id": 270,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "31",
											"id": 268,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "7273:6:0",
											"subdenomination": "days",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_86400_by_1",
												"typeString": "int_const 86400"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "333635",
											"id": 269,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "7282:3:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_365_by_1",
												"typeString": "int_const 365"
											},
											"value": "365"
										},
										"src": "7273:12:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_31536000_by_1",
											"typeString": "int_const 31536000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 274,
									"name": "mintCap",
									"nodeType": "VariableDeclaration",
									"scope": 1520,
									"src": "7377:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 272,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "7377:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "32",
										"id": 273,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7409:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 280,
									"name": "allowances",
									"nodeType": "VariableDeclaration",
									"scope": 1520,
									"src": "7471:68:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
										"typeString": "mapping(address => mapping(address => uint96))"
									},
									"typeName": {
										"id": 279,
										"keyType": {
											"id": 275,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "7480:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "7471:48:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
											"typeString": "mapping(address => mapping(address => uint96))"
										},
										"valueType": {
											"id": 278,
											"keyType": {
												"id": 276,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7500:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "7491:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
												"typeString": "mapping(address => uint96)"
											},
											"valueType": {
												"id": 277,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "7511:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 284,
									"name": "balances",
									"nodeType": "VariableDeclaration",
									"scope": 1520,
									"src": "7613:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
										"typeString": "mapping(address => uint96)"
									},
									"typeName": {
										"id": 283,
										"keyType": {
											"id": 281,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "7622:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "7613:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
											"typeString": "mapping(address => uint96)"
										},
										"valueType": {
											"id": 282,
											"name": "uint96",
											"nodeType": "ElementaryTypeName",
											"src": "7633:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 288,
									"name": "delegates",
									"nodeType": "VariableDeclaration",
									"scope": 1520,
									"src": "7716:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 287,
										"keyType": {
											"id": 285,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "7725:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "7716:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 286,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "7736:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"canonicalName": "Uni.Checkpoint",
									"id": 293,
									"members": [
										{
											"constant": false,
											"id": 290,
											"name": "fromBlock",
											"nodeType": "VariableDeclaration",
											"scope": 293,
											"src": "7872:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 289,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "7872:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 292,
											"name": "votes",
											"nodeType": "VariableDeclaration",
											"scope": 293,
											"src": "7898:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											},
											"typeName": {
												"id": 291,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "7898:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Checkpoint",
									"nodeType": "StructDefinition",
									"scope": 1520,
									"src": "7844:73:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 299,
									"name": "checkpoints",
									"nodeType": "VariableDeclaration",
									"scope": 1520,
									"src": "7996:70:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$293_storage_$_$",
										"typeString": "mapping(address => mapping(uint32 => struct Uni.Checkpoint))"
									},
									"typeName": {
										"id": 298,
										"keyType": {
											"id": 294,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "8005:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "7996:51:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$293_storage_$_$",
											"typeString": "mapping(address => mapping(uint32 => struct Uni.Checkpoint))"
										},
										"valueType": {
											"id": 297,
											"keyType": {
												"id": 295,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "8025:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"nodeType": "Mapping",
											"src": "8016:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$293_storage_$",
												"typeString": "mapping(uint32 => struct Uni.Checkpoint)"
											},
											"valueType": {
												"contractScope": null,
												"id": 296,
												"name": "Checkpoint",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 293,
												"src": "8035:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Checkpoint_$293_storage_ptr",
													"typeString": "struct Uni.Checkpoint"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 303,
									"name": "numCheckpoints",
									"nodeType": "VariableDeclaration",
									"scope": 1520,
									"src": "8132:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
										"typeString": "mapping(address => uint32)"
									},
									"typeName": {
										"id": 302,
										"keyType": {
											"id": 300,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "8141:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "8132:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
											"typeString": "mapping(address => uint32)"
										},
										"valueType": {
											"id": 301,
											"name": "uint32",
											"nodeType": "ElementaryTypeName",
											"src": "8152:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 308,
									"name": "DOMAIN_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 1520,
									"src": "8251:122:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 304,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "8251:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 306,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "8303:69:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
													"typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
													"typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 305,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1529,
											"src": "8293:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 307,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "8293:80:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 313,
									"name": "DELEGATION_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 1520,
									"src": "8464:117:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 309,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "8464:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929",
												"id": 311,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "8520:60:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
													"typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
												},
												"value": "Delegation(address delegatee,uint256 nonce,uint256 expiry)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
													"typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
												}
											],
											"id": 310,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1529,
											"src": "8510:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 312,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "8510:71:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 318,
									"name": "PERMIT_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 1520,
									"src": "8668:137:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 314,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "8668:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
												"id": 316,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "8720:84:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												},
												"value": "Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												}
											],
											"id": 315,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1529,
											"src": "8710:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 317,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "8710:95:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 322,
									"name": "nonces",
									"nodeType": "VariableDeclaration",
									"scope": 1520,
									"src": "8883:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 321,
										"keyType": {
											"id": 319,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "8892:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "8883:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 320,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "8903:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": "@notice An event thats emitted when the minter address is changed",
									"id": 328,
									"name": "MinterChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"indexed": false,
												"name": "minter",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "9023:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"indexed": false,
												"name": "newMinter",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "9039:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9022:35:0"
									},
									"src": "9003:55:0"
								},
								{
									"anonymous": false,
									"documentation": "@notice An event thats emitted when an account changes its delegate",
									"id": 336,
									"name": "DelegateChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"indexed": true,
												"name": "delegator",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "9162:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9162:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"indexed": true,
												"name": "fromDelegate",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "9189:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9189:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"name": "toDelegate",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "9219:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9219:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9161:85:0"
									},
									"src": "9140:107:0"
								},
								{
									"anonymous": false,
									"documentation": "@notice An event thats emitted when a delegate account's vote balance changes",
									"id": 344,
									"name": "DelegateVotesChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"indexed": true,
												"name": "delegate",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "9366:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9366:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"indexed": false,
												"name": "previousBalance",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "9392:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9392:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"indexed": false,
												"name": "newBalance",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "9414:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9414:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9365:65:0"
									},
									"src": "9339:92:0"
								},
								{
									"anonymous": false,
									"documentation": "@notice The standard EIP-20 transfer event",
									"id": 352,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "9503:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9503:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "9525:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9525:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "9545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9502:58:0"
									},
									"src": "9488:73:0"
								},
								{
									"anonymous": false,
									"documentation": "@notice The standard EIP-20 approval event",
									"id": 360,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "9633:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9633:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "9656:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9656:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "9681:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9681:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9632:64:0"
									},
									"src": "9618:79:0"
								},
								{
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "10040:359:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 370,
																"name": "mintingAllowedAfter_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "10058:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 371,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1525,
																	"src": "10082:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "10082:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10058:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e693a3a636f6e7374727563746f723a206d696e74696e672063616e206f6e6c7920626567696e206166746572206465706c6f796d656e74",
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10099:59:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_709d77ba4b86f1914120b68d9c9230eddba9a66e2dbda0bfb5bc324846702760",
																"typeString": "literal_string \"Uni::constructor: minting can only begin after deployment\""
															},
															"value": "Uni::constructor: minting can only begin after deployment"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_709d77ba4b86f1914120b68d9c9230eddba9a66e2dbda0bfb5bc324846702760",
																"typeString": "literal_string \"Uni::constructor: minting can only begin after deployment\""
															}
														],
														"id": 369,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1538,
															1539
														],
														"referencedDeclaration": 1539,
														"src": "10050:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10050:109:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "10050:109:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 377,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "10170:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																"typeString": "mapping(address => uint96)"
															}
														},
														"id": 379,
														"indexExpression": {
															"argumentTypes": null,
															"id": 378,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "10179:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10170:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 381,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "10197:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10190:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint96_$",
																"typeString": "type(uint96)"
															},
															"typeName": "uint96"
														},
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10190:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "10170:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "10170:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10241:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 386,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10233:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10233:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 389,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "10245:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 390,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "10254:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 385,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "10224:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10224:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "EmitStatement",
												"src": "10219:47:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 393,
														"name": "minter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "10276:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 394,
														"name": "minter_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "10285:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10276:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 396,
												"nodeType": "ExpressionStatement",
												"src": "10276:16:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10329:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 398,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10321:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10321:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 401,
															"name": "minter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "10333:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 397,
														"name": "MinterChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "10307:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10307:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 403,
												"nodeType": "EmitStatement",
												"src": "10302:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 404,
														"name": "mintingAllowedAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "10350:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 405,
														"name": "mintingAllowedAfter_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "10372:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10350:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "10350:42:0"
											}
										]
									},
									"documentation": "@notice Construct a new Uni token\n@param account The initial account to grant all the tokens\n@param minter_ The account with minting ability\n@param mintingAllowedAfter_ The timestamp after which minting may occur",
									"id": 409,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "9972:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9972:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"name": "minter_",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "9989:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9989:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"name": "mintingAllowedAfter_",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "10006:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10006:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9971:61:0"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10040:0:0"
									},
									"scope": 1520,
									"src": "9960:439:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 431,
										"nodeType": "Block",
										"src": "10559:182:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 415,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1535,
																	"src": "10577:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "10577:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 417,
																"name": "minter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 264,
																"src": "10591:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10577:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e693a3a7365744d696e7465723a206f6e6c7920746865206d696e7465722063616e206368616e676520746865206d696e7465722061646472657373",
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10599:63:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d0c976c03aaa94802283adf77ef1ce74ec8a066553c069fcfec5a68a1eb9411a",
																"typeString": "literal_string \"Uni::setMinter: only the minter can change the minter address\""
															},
															"value": "Uni::setMinter: only the minter can change the minter address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d0c976c03aaa94802283adf77ef1ce74ec8a066553c069fcfec5a68a1eb9411a",
																"typeString": "literal_string \"Uni::setMinter: only the minter can change the minter address\""
															}
														],
														"id": 414,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1538,
															1539
														],
														"referencedDeclaration": 1539,
														"src": "10569:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10569:94:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 421,
												"nodeType": "ExpressionStatement",
												"src": "10569:94:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 423,
															"name": "minter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "10692:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 424,
															"name": "minter_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "10700:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 422,
														"name": "MinterChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "10678:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10678:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 426,
												"nodeType": "EmitStatement",
												"src": "10673:35:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 427,
														"name": "minter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "10718:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 428,
														"name": "minter_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 411,
														"src": "10727:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10718:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "10718:16:0"
											}
										]
									},
									"documentation": "@notice Change the minter address\n@param minter_ The address of the new minter",
									"id": 432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setMinter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"name": "minter_",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "10533:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10533:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10532:17:0"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10559:0:0"
									},
									"scope": 1520,
									"src": "10514:227:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 536,
										"nodeType": "Block",
										"src": "10961:987:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 440,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1535,
																	"src": "10979:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "10979:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 442,
																"name": "minter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 264,
																"src": "10993:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10979:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e693a3a6d696e743a206f6e6c7920746865206d696e7465722063616e206d696e74",
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11001:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc6a5c1b47b7f8bc902cdb48ac9758787b1a8119a1909e02b5432deee2d32a62",
																"typeString": "literal_string \"Uni::mint: only the minter can mint\""
															},
															"value": "Uni::mint: only the minter can mint"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc6a5c1b47b7f8bc902cdb48ac9758787b1a8119a1909e02b5432deee2d32a62",
																"typeString": "literal_string \"Uni::mint: only the minter can mint\""
															}
														],
														"id": 439,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1538,
															1539
														],
														"referencedDeclaration": 1539,
														"src": "10971:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10971:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "10971:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 448,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1525,
																	"src": "11057:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "11057:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 450,
																"name": "mintingAllowedAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 266,
																"src": "11076:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11057:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e693a3a6d696e743a206d696e74696e67206e6f7420616c6c6f77656420796574",
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11097:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7b0ec4a3f6bfba673b135595084a79859c9e4ba0d9455df08bfb3bece6df3142",
																"typeString": "literal_string \"Uni::mint: minting not allowed yet\""
															},
															"value": "Uni::mint: minting not allowed yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7b0ec4a3f6bfba673b135595084a79859c9e4ba0d9455df08bfb3bece6df3142",
																"typeString": "literal_string \"Uni::mint: minting not allowed yet\""
															}
														],
														"id": 447,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1538,
															1539
														],
														"referencedDeclaration": 1539,
														"src": "11049:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11049:85:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "11049:85:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 456,
																"name": "dst",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 434,
																"src": "11152:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11167:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11159:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11159:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "11152:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e693a3a6d696e743a2063616e6e6f74207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11171:48:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5f24bdbd67fb75785b275770fb658b786eb2736feb96698cf0894896fdf28c73",
																"typeString": "literal_string \"Uni::mint: cannot transfer to the zero address\""
															},
															"value": "Uni::mint: cannot transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5f24bdbd67fb75785b275770fb658b786eb2736feb96698cf0894896fdf28c73",
																"typeString": "literal_string \"Uni::mint: cannot transfer to the zero address\""
															}
														],
														"id": 455,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1538,
															1539
														],
														"referencedDeclaration": 1539,
														"src": "11144:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11144:76:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 463,
												"nodeType": "ExpressionStatement",
												"src": "11144:76:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 464,
														"name": "mintingAllowedAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "11258:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 467,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1525,
																	"src": "11293:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "11293:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 469,
																"name": "minimumTimeBetweenMints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "11310:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 465,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 250,
																"src": "11280:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$250_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "11280:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11280:54:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11258:76:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "11258:76:0"
											},
											{
												"assignments": [
													474
												],
												"declarations": [
													{
														"constant": false,
														"id": 474,
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"scope": 536,
														"src": "11372:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 473,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "11372:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 479,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 476,
															"name": "rawAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "11395:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e693a3a6d696e743a20616d6f756e7420657863656564732039362062697473",
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11406:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bcb6733e7ac2aee3c3602ee664d4b3cb251e429df5c7e9148d412d0b60f07b16",
																"typeString": "literal_string \"Uni::mint: amount exceeds 96 bits\""
															},
															"value": "Uni::mint: amount exceeds 96 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_bcb6733e7ac2aee3c3602ee664d4b3cb251e429df5c7e9148d412d0b60f07b16",
																"typeString": "literal_string \"Uni::mint: amount exceeds 96 bits\""
															}
														],
														"id": 475,
														"name": "safe96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1457,
														"src": "11388:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint96_$",
															"typeString": "function (uint256,string memory) pure returns (uint96)"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11388:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11372:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 481,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 474,
																"src": "11460:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 486,
																				"name": "totalSupply",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 262,
																				"src": "11496:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"id": 487,
																				"name": "mintCap",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 274,
																				"src": "11509:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 484,
																				"name": "SafeMath",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 250,
																				"src": "11483:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_SafeMath_$250_$",
																					"typeString": "type(library SafeMath)"
																				}
																			},
																			"id": 485,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 131,
																			"src": "11483:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11483:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "313030",
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11519:3:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 482,
																		"name": "SafeMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 250,
																		"src": "11470:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeMath_$250_$",
																			"typeString": "type(library SafeMath)"
																		}
																	},
																	"id": 483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 183,
																	"src": "11470:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11470:53:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11460:63:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e693a3a6d696e743a206578636565646564206d696e7420636170",
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11525:30:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c455438be199e7ac7b6d21fdc7332bbd68229582d8b1be9266bdb0f4844638c0",
																"typeString": "literal_string \"Uni::mint: exceeded mint cap\""
															},
															"value": "Uni::mint: exceeded mint cap"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c455438be199e7ac7b6d21fdc7332bbd68229582d8b1be9266bdb0f4844638c0",
																"typeString": "literal_string \"Uni::mint: exceeded mint cap\""
															}
														],
														"id": 480,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1538,
															1539
														],
														"referencedDeclaration": 1539,
														"src": "11452:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11452:104:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "11452:104:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 495,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 262,
														"src": "11566:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 499,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "11600:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 500,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 474,
																		"src": "11613:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 497,
																		"name": "SafeMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 250,
																		"src": "11587:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeMath_$250_$",
																			"typeString": "type(library SafeMath)"
																		}
																	},
																	"id": 498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 27,
																	"src": "11587:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11587:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "556e693a3a6d696e743a20746f74616c537570706c7920657863656564732039362062697473",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11622:40:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_1ef2347f5dbb97e8eb7bc1442a128a1c6e65386b013257fe2b8ad95aaaa96ab8",
																	"typeString": "literal_string \"Uni::mint: totalSupply exceeds 96 bits\""
																},
																"value": "Uni::mint: totalSupply exceeds 96 bits"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_1ef2347f5dbb97e8eb7bc1442a128a1c6e65386b013257fe2b8ad95aaaa96ab8",
																	"typeString": "literal_string \"Uni::mint: totalSupply exceeds 96 bits\""
																}
															],
															"id": 496,
															"name": "safe96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1457,
															"src": "11580:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint96_$",
																"typeString": "function (uint256,string memory) pure returns (uint96)"
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11580:83:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "11566:97:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "11566:97:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 506,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "11722:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																"typeString": "mapping(address => uint96)"
															}
														},
														"id": 508,
														"indexExpression": {
															"argumentTypes": null,
															"id": 507,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "11731:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11722:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 510,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 284,
																	"src": "11744:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																		"typeString": "mapping(address => uint96)"
																	}
																},
																"id": 512,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 511,
																	"name": "dst",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 434,
																	"src": "11753:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11744:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"argumentTypes": null,
																"id": 513,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 474,
																"src": "11759:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "556e693a3a6d696e743a207472616e7366657220616d6f756e74206f766572666c6f7773",
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11767:38:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_0ab5eae08d50cc345c58c2d7d67f9034a98d0a88dd540314c408c39a8dcec01d",
																	"typeString": "literal_string \"Uni::mint: transfer amount overflows\""
																},
																"value": "Uni::mint: transfer amount overflows"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_stringliteral_0ab5eae08d50cc345c58c2d7d67f9034a98d0a88dd540314c408c39a8dcec01d",
																	"typeString": "literal_string \"Uni::mint: transfer amount overflows\""
																}
															],
															"id": 509,
															"name": "add96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1484,
															"src": "11738:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
																"typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11738:68:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "11722:84:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 517,
												"nodeType": "ExpressionStatement",
												"src": "11722:84:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11838:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11830:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11830:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 522,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "11842:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 523,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "11847:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 518,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "11821:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11821:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 525,
												"nodeType": "EmitStatement",
												"src": "11816:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11914:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11906:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11906:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 530,
																"name": "delegates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "11918:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 532,
															"indexExpression": {
																"argumentTypes": null,
																"id": 531,
																"name": "dst",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 434,
																"src": "11928:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11918:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 533,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "11934:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 526,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "11891:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (address,address,uint96)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11891:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "11891:50:0"
											}
										]
									},
									"documentation": "@notice Mint new tokens\n@param dst The address of the destination account\n@param rawAmount The number of tokens to be minted",
									"id": 537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"name": "dst",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "10923:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10923:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"name": "rawAmount",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "10936:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10936:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10922:29:0"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10961:0:0"
									},
									"scope": 1520,
									"src": "10909:1039:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 552,
										"nodeType": "Block",
										"src": "12326:52:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 546,
															"name": "allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "12343:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
																"typeString": "mapping(address => mapping(address => uint96))"
															}
														},
														"id": 548,
														"indexExpression": {
															"argumentTypes": null,
															"id": 547,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "12354:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12343:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
															"typeString": "mapping(address => uint96)"
														}
													},
													"id": 550,
													"indexExpression": {
														"argumentTypes": null,
														"id": 549,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 541,
														"src": "12363:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12343:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 545,
												"id": 551,
												"nodeType": "Return",
												"src": "12336:35:0"
											}
										]
									},
									"documentation": "@notice Get the number of tokens `spender` is approved to spend on behalf of `account`\n@param account The address of the account holding the funds\n@param spender The address of the account spending the funds\n@return The number of tokens approved",
									"id": 553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "12263:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12263:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "12280:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12280:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12262:34:0"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "12320:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12320:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12319:6:0"
									},
									"scope": 1520,
									"src": "12244:134:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 606,
										"nodeType": "Block",
										"src": "12920:332:0",
										"statements": [
											{
												"assignments": [
													563
												],
												"declarations": [
													{
														"constant": false,
														"id": 563,
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"scope": 606,
														"src": "12930:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 562,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "12930:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 564,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "12930:13:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 565,
														"name": "rawAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 557,
														"src": "12957:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "12975:2:0",
																"subExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12976:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															],
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12970:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": "uint"
														},
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12970:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12957:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 586,
													"nodeType": "Block",
													"src": "13030:91:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 579,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 563,
																	"src": "13044:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 581,
																			"name": "rawAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 557,
																			"src": "13060:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"hexValue": "556e693a3a617070726f76653a20616d6f756e7420657863656564732039362062697473",
																			"id": 582,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13071:38:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_cb3e128da7f3f16c83a901cce3ab145c66bad45a0cd648091fecc9964ebf42fe",
																				"typeString": "literal_string \"Uni::approve: amount exceeds 96 bits\""
																			},
																			"value": "Uni::approve: amount exceeds 96 bits"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_cb3e128da7f3f16c83a901cce3ab145c66bad45a0cd648091fecc9964ebf42fe",
																				"typeString": "literal_string \"Uni::approve: amount exceeds 96 bits\""
																			}
																		],
																		"id": 580,
																		"name": "safe96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1457,
																		"src": "13053:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint96_$",
																			"typeString": "function (uint256,string memory) pure returns (uint96)"
																		}
																	},
																	"id": 583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13053:57:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "13044:66:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 585,
															"nodeType": "ExpressionStatement",
															"src": "13044:66:0"
														}
													]
												},
												"id": 587,
												"nodeType": "IfStatement",
												"src": "12953:168:0",
												"trueBody": {
													"id": 578,
													"nodeType": "Block",
													"src": "12980:44:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 571,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 563,
																	"src": "12994:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 574,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "-",
																			"prefix": true,
																			"src": "13010:2:0",
																			"subExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 573,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13011:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		],
																		"id": 572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "13003:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint96_$",
																			"typeString": "type(uint96)"
																		},
																		"typeName": "uint96"
																	},
																	"id": 575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13003:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "12994:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 577,
															"nodeType": "ExpressionStatement",
															"src": "12994:19:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 588,
																"name": "allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 280,
																"src": "13131:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
																	"typeString": "mapping(address => mapping(address => uint96))"
																}
															},
															"id": 592,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 589,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1535,
																	"src": "13142:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "13142:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13131:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																"typeString": "mapping(address => uint96)"
															}
														},
														"id": 593,
														"indexExpression": {
															"argumentTypes": null,
															"id": 591,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "13154:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13131:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 594,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "13165:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "13131:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 596,
												"nodeType": "ExpressionStatement",
												"src": "13131:40:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 598,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1535,
																"src": "13196:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "13196:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 600,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "13208:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 601,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "13217:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 597,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "13187:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13187:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 603,
												"nodeType": "EmitStatement",
												"src": "13182:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13241:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 561,
												"id": 605,
												"nodeType": "Return",
												"src": "13234:11:0"
											}
										]
									},
									"documentation": "@notice Approve `spender` to transfer up to `amount` from `src`\n@dev This will overwrite the approval amount for `spender`\n and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)\n@param spender The address of the account which may transfer tokens\n@param rawAmount The number of tokens that are approved (2^256-1 means infinite)\n@return Whether or not the approval succeeded",
									"id": 607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "12863:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12863:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"name": "rawAmount",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "12880:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12880:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12862:33:0"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "12914:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 559,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12914:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12913:6:0"
									},
									"scope": 1520,
									"src": "12846:406:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "13849:912:0",
										"statements": [
											{
												"assignments": [
													625
												],
												"declarations": [
													{
														"constant": false,
														"id": 625,
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"scope": 743,
														"src": "13859:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 624,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "13859:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 626,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "13859:13:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 627,
														"name": "rawAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "13886:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "13904:2:0",
																"subExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13905:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															],
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13899:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": "uint"
														},
														"id": 631,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13899:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13886:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 648,
													"nodeType": "Block",
													"src": "13959:90:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 641,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 625,
																	"src": "13973:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 643,
																			"name": "rawAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 613,
																			"src": "13989:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"hexValue": "556e693a3a7065726d69743a20616d6f756e7420657863656564732039362062697473",
																			"id": 644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14000:37:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_58da0b91010307ee6a63257c5283618928105e355857d8f79cf7e017ad7082f4",
																				"typeString": "literal_string \"Uni::permit: amount exceeds 96 bits\""
																			},
																			"value": "Uni::permit: amount exceeds 96 bits"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_58da0b91010307ee6a63257c5283618928105e355857d8f79cf7e017ad7082f4",
																				"typeString": "literal_string \"Uni::permit: amount exceeds 96 bits\""
																			}
																		],
																		"id": 642,
																		"name": "safe96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1457,
																		"src": "13982:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint96_$",
																			"typeString": "function (uint256,string memory) pure returns (uint96)"
																		}
																	},
																	"id": 645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13982:56:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "13973:65:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 647,
															"nodeType": "ExpressionStatement",
															"src": "13973:65:0"
														}
													]
												},
												"id": 649,
												"nodeType": "IfStatement",
												"src": "13882:167:0",
												"trueBody": {
													"id": 640,
													"nodeType": "Block",
													"src": "13909:44:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 633,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 625,
																	"src": "13923:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 636,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "-",
																			"prefix": true,
																			"src": "13939:2:0",
																			"subExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 635,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13940:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		],
																		"id": 634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "13932:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint96_$",
																			"typeString": "type(uint96)"
																		},
																		"typeName": "uint96"
																	},
																	"id": 637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13932:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "13923:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 639,
															"nodeType": "ExpressionStatement",
															"src": "13923:19:0"
														}
													]
												}
											},
											{
												"assignments": [
													651
												],
												"declarations": [
													{
														"constant": false,
														"id": 651,
														"name": "domainSeparator",
														"nodeType": "VariableDeclaration",
														"scope": 743,
														"src": "14059:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 650,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "14059:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 668,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 655,
																	"name": "DOMAIN_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "14106:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 658,
																					"name": "name",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 253,
																					"src": "14139:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory",
																						"typeString": "string memory"
																					}
																				],
																				"id": 657,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "14133:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																					"typeString": "type(bytes storage pointer)"
																				},
																				"typeName": "bytes"
																			},
																			"id": 659,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14133:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 656,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1529,
																		"src": "14123:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14123:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 661,
																		"name": "getChainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1519,
																		"src": "14147:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
																			"typeString": "function () pure returns (uint256)"
																		}
																	},
																	"id": 662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14147:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 664,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1551,
																			"src": "14169:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Uni_$1520",
																				"typeString": "contract Uni"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Uni_$1520",
																				"typeString": "contract Uni"
																			}
																		],
																		"id": 663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14161:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14161:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 653,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1522,
																	"src": "14095:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 654,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "14095:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14095:80:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 652,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1529,
														"src": "14085:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14085:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14059:117:0"
											},
											{
												"assignments": [
													670
												],
												"declarations": [
													{
														"constant": false,
														"id": 670,
														"name": "structHash",
														"nodeType": "VariableDeclaration",
														"scope": 743,
														"src": "14186:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 669,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "14186:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 685,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 674,
																	"name": "PERMIT_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 318,
																	"src": "14228:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 675,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "14245:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 676,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 611,
																	"src": "14252:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 677,
																	"name": "rawAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "14261:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "14272:15:0",
																	"subExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 678,
																			"name": "nonces",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 322,
																			"src": "14272:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 680,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 679,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 609,
																			"src": "14279:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "14272:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 682,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 615,
																	"src": "14289:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 672,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1522,
																	"src": "14217:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 673,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "14217:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14217:81:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 671,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1529,
														"src": "14207:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14207:92:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14186:113:0"
											},
											{
												"assignments": [
													687
												],
												"declarations": [
													{
														"constant": false,
														"id": 687,
														"name": "digest",
														"nodeType": "VariableDeclaration",
														"scope": 743,
														"src": "14309:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 686,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "14309:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 696,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "1901",
																	"id": 691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14353:10:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"argumentTypes": null,
																	"id": 692,
																	"name": "domainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 651,
																	"src": "14365:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 693,
																	"name": "structHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 670,
																	"src": "14382:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 689,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1522,
																	"src": "14336:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "14336:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14336:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 688,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1529,
														"src": "14326:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14326:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14309:85:0"
											},
											{
												"assignments": [
													698
												],
												"declarations": [
													{
														"constant": false,
														"id": 698,
														"name": "signatory",
														"nodeType": "VariableDeclaration",
														"scope": 743,
														"src": "14404:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 697,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14404:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 705,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 700,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "14434:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 701,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "14442:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 702,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "14445:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 703,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "14448:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 699,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1527,
														"src": "14424:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14424:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14404:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 707,
																"name": "signatory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 698,
																"src": "14468:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14489:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14481:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14481:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "14468:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e693a3a7065726d69743a20696e76616c6964207369676e6174757265",
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14493:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e94c1ed3488f38be72a83cd591a1465ccfe1e93939cfd7e4bf71c4eb9af19f1a",
																"typeString": "literal_string \"Uni::permit: invalid signature\""
															},
															"value": "Uni::permit: invalid signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e94c1ed3488f38be72a83cd591a1465ccfe1e93939cfd7e4bf71c4eb9af19f1a",
																"typeString": "literal_string \"Uni::permit: invalid signature\""
															}
														],
														"id": 706,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1538,
															1539
														],
														"referencedDeclaration": 1539,
														"src": "14460:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14460:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 714,
												"nodeType": "ExpressionStatement",
												"src": "14460:66:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 716,
																"name": "signatory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 698,
																"src": "14544:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 717,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "14557:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14544:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e693a3a7065726d69743a20756e617574686f72697a6564",
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14564:27:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f1c0fd1d78a537bfd8cc59c08393a4da90fc7d3eff469a9fd5787d9f1738b823",
																"typeString": "literal_string \"Uni::permit: unauthorized\""
															},
															"value": "Uni::permit: unauthorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f1c0fd1d78a537bfd8cc59c08393a4da90fc7d3eff469a9fd5787d9f1738b823",
																"typeString": "literal_string \"Uni::permit: unauthorized\""
															}
														],
														"id": 715,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1538,
															1539
														],
														"referencedDeclaration": 1539,
														"src": "14536:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14536:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 721,
												"nodeType": "ExpressionStatement",
												"src": "14536:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 723,
																"name": "now",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1537,
																"src": "14610:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 724,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 615,
																"src": "14617:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14610:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e693a3a7065726d69743a207369676e61747572652065787069726564",
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14627:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dfc249d887a80709dc035102a1322af6511c742bde4b1331b9d41e48d95becdb",
																"typeString": "literal_string \"Uni::permit: signature expired\""
															},
															"value": "Uni::permit: signature expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dfc249d887a80709dc035102a1322af6511c742bde4b1331b9d41e48d95becdb",
																"typeString": "literal_string \"Uni::permit: signature expired\""
															}
														],
														"id": 722,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1538,
															1539
														],
														"referencedDeclaration": 1539,
														"src": "14602:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14602:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 728,
												"nodeType": "ExpressionStatement",
												"src": "14602:58:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 729,
																"name": "allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 280,
																"src": "14671:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
																	"typeString": "mapping(address => mapping(address => uint96))"
																}
															},
															"id": 732,
															"indexExpression": {
																"argumentTypes": null,
																"id": 730,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "14682:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14671:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																"typeString": "mapping(address => uint96)"
															}
														},
														"id": 733,
														"indexExpression": {
															"argumentTypes": null,
															"id": 731,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "14689:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14671:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 734,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "14700:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "14671:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 736,
												"nodeType": "ExpressionStatement",
												"src": "14671:35:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 738,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "14731:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 739,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "14738:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 740,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "14747:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 737,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "14722:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14722:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 742,
												"nodeType": "EmitStatement",
												"src": "14717:37:0"
											}
										]
									},
									"documentation": "@notice Triggers an approval from owner to spends\n@param owner The address to approve from\n@param spender The address to be approved\n@param rawAmount The number of tokens that are approved (2^256-1 means infinite)\n@param deadline The time at which to expire the signature\n@param v The recovery byte of the signature\n@param r Half of the ECDSA signature pair\n@param s Half of the ECDSA signature pair",
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "13746:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13746:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "13761:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13761:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"name": "rawAmount",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "13778:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13778:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "13794:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 614,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13794:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "13809:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 616,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13809:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "13818:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 618,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "13818:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "13829:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 620,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "13829:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13745:94:0"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13849:0:0"
									},
									"scope": 1520,
									"src": "13730:1031:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "15022:41:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 751,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "15039:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
															"typeString": "mapping(address => uint96)"
														}
													},
													"id": 753,
													"indexExpression": {
														"argumentTypes": null,
														"id": 752,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "15048:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15039:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 750,
												"id": 754,
												"nodeType": "Return",
												"src": "15032:24:0"
											}
										]
									},
									"documentation": "@notice Get the number of tokens held by the `account`\n@param account The address of the account to get the balance of\n@return The number of tokens held",
									"id": 756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "14976:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14976:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14975:17:0"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "15016:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 748,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15016:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15015:6:0"
									},
									"scope": 1520,
									"src": "14957:106:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 781,
										"nodeType": "Block",
										"src": "15390:162:0",
										"statements": [
											{
												"assignments": [
													766
												],
												"declarations": [
													{
														"constant": false,
														"id": 766,
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"scope": 781,
														"src": "15400:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 765,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "15400:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 771,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 768,
															"name": "rawAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "15423:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e693a3a7472616e736665723a20616d6f756e7420657863656564732039362062697473",
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15434:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9bc67db7413f33b8f7a9995149809b7b3a4a83b5ba884084bea06cfb35986555",
																"typeString": "literal_string \"Uni::transfer: amount exceeds 96 bits\""
															},
															"value": "Uni::transfer: amount exceeds 96 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_9bc67db7413f33b8f7a9995149809b7b3a4a83b5ba884084bea06cfb35986555",
																"typeString": "literal_string \"Uni::transfer: amount exceeds 96 bits\""
															}
														],
														"id": 767,
														"name": "safe96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1457,
														"src": "15416:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint96_$",
															"typeString": "function (uint256,string memory) pure returns (uint96)"
														}
													},
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15416:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15400:74:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 773,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1535,
																"src": "15500:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "15500:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 775,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "15512:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 776,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "15517:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 772,
														"name": "_transferTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "15484:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (address,address,uint96)"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15484:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "15484:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15541:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 764,
												"id": 780,
												"nodeType": "Return",
												"src": "15534:11:0"
											}
										]
									},
									"documentation": "@notice Transfer `amount` tokens from `msg.sender` to `dst`\n@param dst The address of the destination account\n@param rawAmount The number of tokens to transfer\n@return Whether or not the transfer succeeded",
									"id": 782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"name": "dst",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "15337:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15337:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"name": "rawAmount",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "15350:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 759,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15350:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15336:29:0"
									},
									"returnParameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "15384:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 762,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15384:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15383:6:0"
									},
									"scope": 1520,
									"src": "15319:233:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "15941:568:0",
										"statements": [
											{
												"assignments": [
													794
												],
												"declarations": [
													{
														"constant": false,
														"id": 794,
														"name": "spender",
														"nodeType": "VariableDeclaration",
														"scope": 855,
														"src": "15951:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 793,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15951:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 797,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 795,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1535,
														"src": "15969:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "15969:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15951:28:0"
											},
											{
												"assignments": [
													799
												],
												"declarations": [
													{
														"constant": false,
														"id": 799,
														"name": "spenderAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 855,
														"src": "15989:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 798,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "15989:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 805,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 800,
															"name": "allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "16015:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
																"typeString": "mapping(address => mapping(address => uint96))"
															}
														},
														"id": 802,
														"indexExpression": {
															"argumentTypes": null,
															"id": 801,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "16026:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16015:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
															"typeString": "mapping(address => uint96)"
														}
													},
													"id": 804,
													"indexExpression": {
														"argumentTypes": null,
														"id": 803,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "16031:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "16015:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15989:50:0"
											},
											{
												"assignments": [
													807
												],
												"declarations": [
													{
														"constant": false,
														"id": 807,
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"scope": 855,
														"src": "16049:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 806,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "16049:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 812,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 809,
															"name": "rawAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "16072:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e693a3a617070726f76653a20616d6f756e7420657863656564732039362062697473",
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16083:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cb3e128da7f3f16c83a901cce3ab145c66bad45a0cd648091fecc9964ebf42fe",
																"typeString": "literal_string \"Uni::approve: amount exceeds 96 bits\""
															},
															"value": "Uni::approve: amount exceeds 96 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_cb3e128da7f3f16c83a901cce3ab145c66bad45a0cd648091fecc9964ebf42fe",
																"typeString": "literal_string \"Uni::approve: amount exceeds 96 bits\""
															}
														],
														"id": 808,
														"name": "safe96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1457,
														"src": "16065:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint96_$",
															"typeString": "function (uint256,string memory) pure returns (uint96)"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16065:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16049:73:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 813,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "16137:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 814,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "16148:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "16137:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"id": 821,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 816,
															"name": "spenderAllowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "16155:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "-",
																	"prefix": true,
																	"src": "16182:2:0",
																	"subExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 818,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16183:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_1_by_1",
																		"typeString": "int_const -1"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_minus_1_by_1",
																		"typeString": "int_const -1"
																	}
																],
																"id": 817,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16175:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint96_$",
																	"typeString": "type(uint96)"
																},
																"typeName": "uint96"
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16175:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"src": "16155:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16137:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 846,
												"nodeType": "IfStatement",
												"src": "16133:305:0",
												"trueBody": {
													"id": 845,
													"nodeType": "Block",
													"src": "16187:251:0",
													"statements": [
														{
															"assignments": [
																824
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 824,
																	"name": "newAllowance",
																	"nodeType": "VariableDeclaration",
																	"scope": 845,
																	"src": "16201:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	},
																	"typeName": {
																		"id": 823,
																		"name": "uint96",
																		"nodeType": "ElementaryTypeName",
																		"src": "16201:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 830,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 826,
																		"name": "spenderAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "16229:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 827,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 807,
																		"src": "16247:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "556e693a3a7472616e7366657246726f6d3a207472616e7366657220616d6f756e742065786365656473207370656e64657220616c6c6f77616e6365",
																		"id": 828,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16255:62:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_136758788d48ec4d9744ba8c2136a9c9406d6c92cd4a81eff0de4942b636db13",
																			"typeString": "literal_string \"Uni::transferFrom: transfer amount exceeds spender allowance\""
																		},
																		"value": "Uni::transferFrom: transfer amount exceeds spender allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		},
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_136758788d48ec4d9744ba8c2136a9c9406d6c92cd4a81eff0de4942b636db13",
																			"typeString": "literal_string \"Uni::transferFrom: transfer amount exceeds spender allowance\""
																		}
																	],
																	"id": 825,
																	"name": "sub96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1507,
																	"src": "16223:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
																		"typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
																	}
																},
																"id": 829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16223:95:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "16201:117:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 831,
																			"name": "allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 280,
																			"src": "16332:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
																				"typeString": "mapping(address => mapping(address => uint96))"
																			}
																		},
																		"id": 834,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 832,
																			"name": "src",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 784,
																			"src": "16343:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "16332:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																			"typeString": "mapping(address => uint96)"
																		}
																	},
																	"id": 835,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 833,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 794,
																		"src": "16348:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "16332:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 836,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 824,
																	"src": "16359:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "16332:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 838,
															"nodeType": "ExpressionStatement",
															"src": "16332:39:0"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 840,
																		"name": "src",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 784,
																		"src": "16400:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 841,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 794,
																		"src": "16405:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 842,
																		"name": "newAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 824,
																		"src": "16414:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	],
																	"id": 839,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "16391:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16391:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 844,
															"nodeType": "EmitStatement",
															"src": "16386:41:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 848,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "16464:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 849,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "16469:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 850,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "16474:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 847,
														"name": "_transferTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "16448:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (address,address,uint96)"
														}
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16448:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 852,
												"nodeType": "ExpressionStatement",
												"src": "16448:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16498:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 792,
												"id": 854,
												"nodeType": "Return",
												"src": "16491:11:0"
											}
										]
									},
									"documentation": "@notice Transfer `amount` tokens from `src` to `dst`\n@param src The address of the source account\n@param dst The address of the destination account\n@param rawAmount The number of tokens to transfer\n@return Whether or not the transfer succeeded",
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"name": "src",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "15875:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15875:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"name": "dst",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "15888:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15888:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"name": "rawAmount",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "15901:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15901:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15874:42:0"
									},
									"returnParameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "15935:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 790,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15935:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15934:6:0"
									},
									"scope": 1520,
									"src": "15853:656:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "16695:56:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 862,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1535,
																"src": "16722:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "16722:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 864,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "16734:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 861,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "16712:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16712:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"functionReturnParameters": 860,
												"id": 866,
												"nodeType": "Return",
												"src": "16705:39:0"
											}
										]
									},
									"documentation": "@notice Delegate votes from `msg.sender` to `delegatee`\n@param delegatee The address to delegate votes to",
									"id": 868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "16669:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16668:19:0"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16695:0:0"
									},
									"scope": 1520,
									"src": "16651:100:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "17279:672:0",
										"statements": [
											{
												"assignments": [
													884
												],
												"declarations": [
													{
														"constant": false,
														"id": 884,
														"name": "domainSeparator",
														"nodeType": "VariableDeclaration",
														"scope": 965,
														"src": "17289:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 883,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "17289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 901,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 888,
																	"name": "DOMAIN_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "17336:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 891,
																					"name": "name",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 253,
																					"src": "17369:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory",
																						"typeString": "string memory"
																					}
																				],
																				"id": 890,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "17363:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																					"typeString": "type(bytes storage pointer)"
																				},
																				"typeName": "bytes"
																			},
																			"id": 892,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17363:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 889,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1529,
																		"src": "17353:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17353:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 894,
																		"name": "getChainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1519,
																		"src": "17377:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
																			"typeString": "function () pure returns (uint256)"
																		}
																	},
																	"id": 895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17377:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 897,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1551,
																			"src": "17399:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Uni_$1520",
																				"typeString": "contract Uni"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Uni_$1520",
																				"typeString": "contract Uni"
																			}
																		],
																		"id": 896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "17391:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17391:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 886,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1522,
																	"src": "17325:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "17325:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17325:80:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 885,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1529,
														"src": "17315:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17315:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17289:117:0"
											},
											{
												"assignments": [
													903
												],
												"declarations": [
													{
														"constant": false,
														"id": 903,
														"name": "structHash",
														"nodeType": "VariableDeclaration",
														"scope": 965,
														"src": "17416:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 902,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "17416:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 913,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 907,
																	"name": "DELEGATION_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 313,
																	"src": "17458:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 908,
																	"name": "delegatee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 870,
																	"src": "17479:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 909,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 872,
																	"src": "17490:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 910,
																	"name": "expiry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 874,
																	"src": "17497:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 905,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1522,
																	"src": "17447:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "17447:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17447:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 904,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1529,
														"src": "17437:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17437:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17416:89:0"
											},
											{
												"assignments": [
													915
												],
												"declarations": [
													{
														"constant": false,
														"id": 915,
														"name": "digest",
														"nodeType": "VariableDeclaration",
														"scope": 965,
														"src": "17515:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 914,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "17515:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 924,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "1901",
																	"id": 919,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17559:10:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"argumentTypes": null,
																	"id": 920,
																	"name": "domainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "17571:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 921,
																	"name": "structHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 903,
																	"src": "17588:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 917,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1522,
																	"src": "17542:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "17542:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17542:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 916,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1529,
														"src": "17532:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17532:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17515:85:0"
											},
											{
												"assignments": [
													926
												],
												"declarations": [
													{
														"constant": false,
														"id": 926,
														"name": "signatory",
														"nodeType": "VariableDeclaration",
														"scope": 965,
														"src": "17610:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 925,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "17610:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 933,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 928,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "17640:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 929,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "17648:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 930,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "17651:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 931,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "17654:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 927,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1527,
														"src": "17630:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17630:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17610:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 935,
																"name": "signatory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 926,
																"src": "17674:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17695:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17687:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17687:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "17674:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e693a3a64656c656761746542795369673a20696e76616c6964207369676e6174757265",
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17699:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_41ba3897512438c3b52e550ef92ff91255600d9202c2b92b8893f625252dfabf",
																"typeString": "literal_string \"Uni::delegateBySig: invalid signature\""
															},
															"value": "Uni::delegateBySig: invalid signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_41ba3897512438c3b52e550ef92ff91255600d9202c2b92b8893f625252dfabf",
																"typeString": "literal_string \"Uni::delegateBySig: invalid signature\""
															}
														],
														"id": 934,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1538,
															1539
														],
														"referencedDeclaration": 1539,
														"src": "17666:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17666:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 942,
												"nodeType": "ExpressionStatement",
												"src": "17666:73:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 944,
																"name": "nonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 872,
																"src": "17757:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "17766:19:0",
																"subExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 945,
																		"name": "nonces",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 322,
																		"src": "17766:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 947,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 946,
																		"name": "signatory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 926,
																		"src": "17773:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "17766:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17757:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e693a3a64656c656761746542795369673a20696e76616c6964206e6f6e6365",
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17787:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d126ba952f4f7443590dacc43a358ae6ad956133386dc92be4e1185a27d416b3",
																"typeString": "literal_string \"Uni::delegateBySig: invalid nonce\""
															},
															"value": "Uni::delegateBySig: invalid nonce"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d126ba952f4f7443590dacc43a358ae6ad956133386dc92be4e1185a27d416b3",
																"typeString": "literal_string \"Uni::delegateBySig: invalid nonce\""
															}
														],
														"id": 943,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1538,
															1539
														],
														"referencedDeclaration": 1539,
														"src": "17749:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17749:74:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 952,
												"nodeType": "ExpressionStatement",
												"src": "17749:74:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 954,
																"name": "now",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1537,
																"src": "17841:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 955,
																"name": "expiry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 874,
																"src": "17848:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17841:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e693a3a64656c656761746542795369673a207369676e61747572652065787069726564",
															"id": 957,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17856:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_287e5345cbd1fcc69d3d1d2165b5d321c6a9eb5b34f1162e798e9d80f3fdf12b",
																"typeString": "literal_string \"Uni::delegateBySig: signature expired\""
															},
															"value": "Uni::delegateBySig: signature expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_287e5345cbd1fcc69d3d1d2165b5d321c6a9eb5b34f1162e798e9d80f3fdf12b",
																"typeString": "literal_string \"Uni::delegateBySig: signature expired\""
															}
														],
														"id": 953,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1538,
															1539
														],
														"referencedDeclaration": 1539,
														"src": "17833:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17833:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 959,
												"nodeType": "ExpressionStatement",
												"src": "17833:63:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 961,
															"name": "signatory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "17923:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 962,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "17934:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 960,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "17913:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17913:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"functionReturnParameters": 882,
												"id": 964,
												"nodeType": "Return",
												"src": "17906:38:0"
											}
										]
									},
									"documentation": "@notice Delegates votes from signatory to `delegatee`\n@param delegatee The address to delegate votes to\n@param nonce The contract state required to match the signature\n@param expiry The time at which to expire the signature\n@param v The recovery byte of the signature\n@param r Half of the ECDSA signature pair\n@param s Half of the ECDSA signature pair",
									"id": 966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegateBySig",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "17197:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17197:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"name": "nonce",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "17216:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "17216:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"name": "expiry",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "17228:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "17228:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "17241:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 875,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "17241:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "17250:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 877,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17250:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "17261:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 879,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17261:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17196:75:0"
									},
									"returnParameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17279:0:0"
									},
									"scope": 1520,
									"src": "17174:777:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 993,
										"nodeType": "Block",
										"src": "18218:146:0",
										"statements": [
											{
												"assignments": [
													974
												],
												"declarations": [
													{
														"constant": false,
														"id": 974,
														"name": "nCheckpoints",
														"nodeType": "VariableDeclaration",
														"scope": 993,
														"src": "18228:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 973,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "18228:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 978,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 975,
														"name": "numCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "18250:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
															"typeString": "mapping(address => uint32)"
														}
													},
													"id": 977,
													"indexExpression": {
														"argumentTypes": null,
														"id": 976,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "18265:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "18250:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18228:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 981,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 979,
															"name": "nCheckpoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "18290:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18305:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "18290:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 990,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18356:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "18290:67:0",
													"trueExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 982,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 299,
																	"src": "18309:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$293_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct Uni.Checkpoint storage ref))"
																	}
																},
																"id": 984,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 983,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 968,
																	"src": "18321:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "18309:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$293_storage_$",
																	"typeString": "mapping(uint32 => struct Uni.Checkpoint storage ref)"
																}
															},
															"id": 988,
															"indexExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 987,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 985,
																	"name": "nCheckpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 974,
																	"src": "18330:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18345:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "18330:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18309:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$293_storage",
																"typeString": "struct Uni.Checkpoint storage ref"
															}
														},
														"id": 989,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "votes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 292,
														"src": "18309:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 972,
												"id": 992,
												"nodeType": "Return",
												"src": "18283:74:0"
											}
										]
									},
									"documentation": "@notice Gets the current votes balance for `account`\n@param account The address to get votes balance\n@return The number of current votes for `account`",
									"id": 994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentVotes",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "18170:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18170:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18169:17:0"
									},
									"returnParameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "18210:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 970,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "18210:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18209:8:0"
									},
									"scope": 1520,
									"src": "18145:219:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1124,
										"nodeType": "Block",
										"src": "18873:1098:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1004,
																"name": "blockNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 998,
																"src": "18891:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1005,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1525,
																	"src": "18905:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "18905:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18891:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e693a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564",
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18919:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_49a8c5a37f9a1453393e39114b211b704ebc96555b0cd38f42c3478bd0b9f9d2",
																"typeString": "literal_string \"Uni::getPriorVotes: not yet determined\""
															},
															"value": "Uni::getPriorVotes: not yet determined"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_49a8c5a37f9a1453393e39114b211b704ebc96555b0cd38f42c3478bd0b9f9d2",
																"typeString": "literal_string \"Uni::getPriorVotes: not yet determined\""
															}
														],
														"id": 1003,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1538,
															1539
														],
														"referencedDeclaration": 1539,
														"src": "18883:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18883:77:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1010,
												"nodeType": "ExpressionStatement",
												"src": "18883:77:0"
											},
											{
												"assignments": [
													1012
												],
												"declarations": [
													{
														"constant": false,
														"id": 1012,
														"name": "nCheckpoints",
														"nodeType": "VariableDeclaration",
														"scope": 1124,
														"src": "18971:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1011,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "18971:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1016,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1013,
														"name": "numCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "18993:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
															"typeString": "mapping(address => uint32)"
														}
													},
													"id": 1015,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1014,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "19008:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "18993:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18971:45:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1017,
														"name": "nCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1012,
														"src": "19030:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1018,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19046:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19030:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1023,
												"nodeType": "IfStatement",
												"src": "19026:56:0",
												"trueBody": {
													"id": 1022,
													"nodeType": "Block",
													"src": "19049:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1020,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19070:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1002,
															"id": 1021,
															"nodeType": "Return",
															"src": "19063:8:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1024,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 299,
																	"src": "19139:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$293_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct Uni.Checkpoint storage ref))"
																	}
																},
																"id": 1026,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1025,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 996,
																	"src": "19151:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19139:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$293_storage_$",
																	"typeString": "mapping(uint32 => struct Uni.Checkpoint storage ref)"
																}
															},
															"id": 1030,
															"indexExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1027,
																	"name": "nCheckpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1012,
																	"src": "19160:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19175:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "19160:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "19139:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$293_storage",
																"typeString": "struct Uni.Checkpoint storage ref"
															}
														},
														"id": 1031,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "fromBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 290,
														"src": "19139:48:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1032,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 998,
														"src": "19191:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19139:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1044,
												"nodeType": "IfStatement",
												"src": "19135:145:0",
												"trueBody": {
													"id": 1043,
													"nodeType": "Block",
													"src": "19204:76:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1034,
																			"name": "checkpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 299,
																			"src": "19225:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$293_storage_$_$",
																				"typeString": "mapping(address => mapping(uint32 => struct Uni.Checkpoint storage ref))"
																			}
																		},
																		"id": 1036,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1035,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 996,
																			"src": "19237:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "19225:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$293_storage_$",
																			"typeString": "mapping(uint32 => struct Uni.Checkpoint storage ref)"
																		}
																	},
																	"id": 1040,
																	"indexExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		"id": 1039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1037,
																			"name": "nCheckpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1012,
																			"src": "19246:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 1038,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19261:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "19246:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "19225:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$293_storage",
																		"typeString": "struct Uni.Checkpoint storage ref"
																	}
																},
																"id": 1041,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "votes",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 292,
																"src": "19225:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"functionReturnParameters": 1002,
															"id": 1042,
															"nodeType": "Return",
															"src": "19218:51:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1045,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 299,
																	"src": "19338:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$293_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct Uni.Checkpoint storage ref))"
																	}
																},
																"id": 1047,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1046,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 996,
																	"src": "19350:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19338:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$293_storage_$",
																	"typeString": "mapping(uint32 => struct Uni.Checkpoint storage ref)"
																}
															},
															"id": 1049,
															"indexExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19359:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "19338:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$293_storage",
																"typeString": "struct Uni.Checkpoint storage ref"
															}
														},
														"id": 1050,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "fromBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 290,
														"src": "19338:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1051,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 998,
														"src": "19374:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19338:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1056,
												"nodeType": "IfStatement",
												"src": "19334:86:0",
												"trueBody": {
													"id": 1055,
													"nodeType": "Block",
													"src": "19387:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1053,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19408:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1002,
															"id": 1054,
															"nodeType": "Return",
															"src": "19401:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													1058
												],
												"declarations": [
													{
														"constant": false,
														"id": 1058,
														"name": "lower",
														"nodeType": "VariableDeclaration",
														"scope": 1124,
														"src": "19430:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1057,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "19430:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1060,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "19445:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19430:16:0"
											},
											{
												"assignments": [
													1062
												],
												"declarations": [
													{
														"constant": false,
														"id": 1062,
														"name": "upper",
														"nodeType": "VariableDeclaration",
														"scope": 1124,
														"src": "19456:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1061,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "19456:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1066,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1063,
														"name": "nCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1012,
														"src": "19471:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 1064,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19486:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "19471:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19456:31:0"
											},
											{
												"body": {
													"id": 1115,
													"nodeType": "Block",
													"src": "19519:396:0",
													"statements": [
														{
															"assignments": [
																1071
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1071,
																	"name": "center",
																	"nodeType": "VariableDeclaration",
																	"scope": 1115,
																	"src": "19533:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"typeName": {
																		"id": 1070,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "19533:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1080,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1072,
																	"name": "upper",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1062,
																	"src": "19549:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 1078,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 1075,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1073,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1062,
																					"src": "19558:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 1074,
																					"name": "lower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1058,
																					"src": "19566:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "19558:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			}
																		],
																		"id": 1076,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "19557:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 1077,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19575:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "19557:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "19549:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "19533:43:0"
														},
														{
															"assignments": [
																1082
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1082,
																	"name": "cp",
																	"nodeType": "VariableDeclaration",
																	"scope": 1115,
																	"src": "19617:20:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$293_memory_ptr",
																		"typeString": "struct Uni.Checkpoint"
																	},
																	"typeName": {
																		"contractScope": null,
																		"id": 1081,
																		"name": "Checkpoint",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 293,
																		"src": "19617:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$293_storage_ptr",
																			"typeString": "struct Uni.Checkpoint"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1088,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1083,
																		"name": "checkpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 299,
																		"src": "19640:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$293_storage_$_$",
																			"typeString": "mapping(address => mapping(uint32 => struct Uni.Checkpoint storage ref))"
																		}
																	},
																	"id": 1085,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1084,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 996,
																		"src": "19652:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "19640:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$293_storage_$",
																		"typeString": "mapping(uint32 => struct Uni.Checkpoint storage ref)"
																	}
																},
																"id": 1087,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1086,
																	"name": "center",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1071,
																	"src": "19661:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19640:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$293_storage",
																	"typeString": "struct Uni.Checkpoint storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "19617:51:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1089,
																		"name": "cp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1082,
																		"src": "19686:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$293_memory_ptr",
																			"typeString": "struct Uni.Checkpoint memory"
																		}
																	},
																	"id": 1090,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "fromBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 290,
																	"src": "19686:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1091,
																	"name": "blockNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 998,
																	"src": "19702:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19686:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1097,
																			"name": "cp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1082,
																			"src": "19773:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Checkpoint_$293_memory_ptr",
																				"typeString": "struct Uni.Checkpoint memory"
																			}
																		},
																		"id": 1098,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "fromBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 290,
																		"src": "19773:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1099,
																		"name": "blockNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 998,
																		"src": "19788:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "19773:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 1112,
																	"nodeType": "Block",
																	"src": "19854:51:0",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 1110,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 1106,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1062,
																					"src": "19872:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					"id": 1109,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 1107,
																						"name": "center",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1071,
																						"src": "19880:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 1108,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "19889:1:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "19880:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "19872:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"id": 1111,
																			"nodeType": "ExpressionStatement",
																			"src": "19872:18:0"
																		}
																	]
																},
																"id": 1113,
																"nodeType": "IfStatement",
																"src": "19769:136:0",
																"trueBody": {
																	"id": 1105,
																	"nodeType": "Block",
																	"src": "19801:47:0",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 1103,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 1101,
																					"name": "lower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1058,
																					"src": "19819:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"id": 1102,
																					"name": "center",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1071,
																					"src": "19827:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "19819:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"id": 1104,
																			"nodeType": "ExpressionStatement",
																			"src": "19819:14:0"
																		}
																	]
																}
															},
															"id": 1114,
															"nodeType": "IfStatement",
															"src": "19682:223:0",
															"trueBody": {
																"id": 1096,
																"nodeType": "Block",
																"src": "19715:48:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1093,
																				"name": "cp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1082,
																				"src": "19740:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Checkpoint_$293_memory_ptr",
																					"typeString": "struct Uni.Checkpoint memory"
																				}
																			},
																			"id": 1094,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "votes",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 292,
																			"src": "19740:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"functionReturnParameters": 1002,
																		"id": 1095,
																		"nodeType": "Return",
																		"src": "19733:15:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1067,
														"name": "upper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1062,
														"src": "19504:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1068,
														"name": "lower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1058,
														"src": "19512:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "19504:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1116,
												"nodeType": "WhileStatement",
												"src": "19497:418:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1117,
																"name": "checkpoints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 299,
																"src": "19931:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$293_storage_$_$",
																	"typeString": "mapping(address => mapping(uint32 => struct Uni.Checkpoint storage ref))"
																}
															},
															"id": 1119,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1118,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "19943:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "19931:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$293_storage_$",
																"typeString": "mapping(uint32 => struct Uni.Checkpoint storage ref)"
															}
														},
														"id": 1121,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1120,
															"name": "lower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "19952:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "19931:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Checkpoint_$293_storage",
															"typeString": "struct Uni.Checkpoint storage ref"
														}
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "votes",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 292,
													"src": "19931:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 1002,
												"id": 1123,
												"nodeType": "Return",
												"src": "19924:40:0"
											}
										]
									},
									"documentation": "@notice Determine the prior number of votes for an account as of a block number\n@dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n@param account The address of the account to check\n@param blockNumber The block number to get the vote balance at\n@return The number of votes the account had as of the given block",
									"id": 1125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPriorVotes",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "18809:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18809:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"name": "blockNumber",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "18826:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "18826:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18808:35:0"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "18865:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1000,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "18865:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18864:8:0"
									},
									"scope": 1520,
									"src": "18786:1185:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1162,
										"nodeType": "Block",
										"src": "20043:301:0",
										"statements": [
											{
												"assignments": [
													1133
												],
												"declarations": [
													{
														"constant": false,
														"id": 1133,
														"name": "currentDelegate",
														"nodeType": "VariableDeclaration",
														"scope": 1162,
														"src": "20053:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "20053:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1137,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1134,
														"name": "delegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "20079:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 1136,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1135,
														"name": "delegator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1127,
														"src": "20089:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "20079:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20053:46:0"
											},
											{
												"assignments": [
													1139
												],
												"declarations": [
													{
														"constant": false,
														"id": 1139,
														"name": "delegatorBalance",
														"nodeType": "VariableDeclaration",
														"scope": 1162,
														"src": "20109:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 1138,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "20109:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1143,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1140,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "20135:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
															"typeString": "mapping(address => uint96)"
														}
													},
													"id": 1142,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1141,
														"name": "delegator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1127,
														"src": "20144:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "20135:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20109:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1144,
															"name": "delegates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "20164:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 1146,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1145,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "20174:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20164:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1147,
														"name": "delegatee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "20187:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20164:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1149,
												"nodeType": "ExpressionStatement",
												"src": "20164:32:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1151,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "20228:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1152,
															"name": "currentDelegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "20239:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1153,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "20256:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1150,
														"name": "DelegateChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "20212:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address,address)"
														}
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20212:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1155,
												"nodeType": "EmitStatement",
												"src": "20207:59:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1157,
															"name": "currentDelegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "20292:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1158,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "20309:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1159,
															"name": "delegatorBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "20320:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 1156,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "20277:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (address,address,uint96)"
														}
													},
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20277:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1161,
												"nodeType": "ExpressionStatement",
												"src": "20277:60:0"
											}
										]
									},
									"documentation": null,
									"id": 1163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"name": "delegator",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "19996:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "20015:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20015:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19995:38:0"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20043:0:0"
									},
									"scope": 1520,
									"src": "19977:367:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "20425:526:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1173,
																"name": "src",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1165,
																"src": "20443:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20458:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20450:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20450:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "20443:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e693a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20462:61:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_de7e0a100b60a11ede47141c5b3cbe581ee85f280a75b7fbf40a7340eb978ea6",
																"typeString": "literal_string \"Uni::_transferTokens: cannot transfer from the zero address\""
															},
															"value": "Uni::_transferTokens: cannot transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_de7e0a100b60a11ede47141c5b3cbe581ee85f280a75b7fbf40a7340eb978ea6",
																"typeString": "literal_string \"Uni::_transferTokens: cannot transfer from the zero address\""
															}
														],
														"id": 1172,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1538,
															1539
														],
														"referencedDeclaration": 1539,
														"src": "20435:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20435:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1180,
												"nodeType": "ExpressionStatement",
												"src": "20435:89:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1182,
																"name": "dst",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1167,
																"src": "20542:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20557:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20549:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20549:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "20542:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e693a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20561:59:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8cdff6d324f122ca5cad9ec8d91ca56840c45dd7fc048a003b94957b6f733086",
																"typeString": "literal_string \"Uni::_transferTokens: cannot transfer to the zero address\""
															},
															"value": "Uni::_transferTokens: cannot transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8cdff6d324f122ca5cad9ec8d91ca56840c45dd7fc048a003b94957b6f733086",
																"typeString": "literal_string \"Uni::_transferTokens: cannot transfer to the zero address\""
															}
														],
														"id": 1181,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1538,
															1539
														],
														"referencedDeclaration": 1539,
														"src": "20534:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20534:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1189,
												"nodeType": "ExpressionStatement",
												"src": "20534:87:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1190,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "20632:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																"typeString": "mapping(address => uint96)"
															}
														},
														"id": 1192,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1191,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "20641:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20632:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1194,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 284,
																	"src": "20654:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																		"typeString": "mapping(address => uint96)"
																	}
																},
																"id": 1196,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1195,
																	"name": "src",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1165,
																	"src": "20663:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20654:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"argumentTypes": null,
																"id": 1197,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1169,
																"src": "20669:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "556e693a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 1198,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20677:55:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_3230ba2cb739b33589720b8a5892642694535e935234939514431ff16907d24a",
																	"typeString": "literal_string \"Uni::_transferTokens: transfer amount exceeds balance\""
																},
																"value": "Uni::_transferTokens: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_stringliteral_3230ba2cb739b33589720b8a5892642694535e935234939514431ff16907d24a",
																	"typeString": "literal_string \"Uni::_transferTokens: transfer amount exceeds balance\""
																}
															],
															"id": 1193,
															"name": "sub96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1507,
															"src": "20648:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
																"typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
															}
														},
														"id": 1199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20648:85:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "20632:101:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 1201,
												"nodeType": "ExpressionStatement",
												"src": "20632:101:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1202,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "20743:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																"typeString": "mapping(address => uint96)"
															}
														},
														"id": 1204,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1203,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "20752:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20743:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1206,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 284,
																	"src": "20765:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																		"typeString": "mapping(address => uint96)"
																	}
																},
																"id": 1208,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1207,
																	"name": "dst",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1167,
																	"src": "20774:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20765:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"argumentTypes": null,
																"id": 1209,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1169,
																"src": "20780:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "556e693a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e74206f766572666c6f7773",
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20788:49:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_f838ee8b15c3d07740bb9b304b8146ec63bb435a7703825b5e6424ee2072674a",
																	"typeString": "literal_string \"Uni::_transferTokens: transfer amount overflows\""
																},
																"value": "Uni::_transferTokens: transfer amount overflows"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_stringliteral_f838ee8b15c3d07740bb9b304b8146ec63bb435a7703825b5e6424ee2072674a",
																	"typeString": "literal_string \"Uni::_transferTokens: transfer amount overflows\""
																}
															],
															"id": 1205,
															"name": "add96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1484,
															"src": "20759:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
																"typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
															}
														},
														"id": 1211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20759:79:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "20743:95:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 1213,
												"nodeType": "ExpressionStatement",
												"src": "20743:95:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1215,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "20862:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1216,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "20867:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1217,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "20872:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 1214,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "20853:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20853:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1219,
												"nodeType": "EmitStatement",
												"src": "20848:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1221,
																"name": "delegates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "20905:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 1223,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1222,
																"name": "src",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1165,
																"src": "20915:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20905:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1224,
																"name": "delegates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "20921:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 1226,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1225,
																"name": "dst",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1167,
																"src": "20931:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20921:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1227,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "20937:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 1220,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "20890:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (address,address,uint96)"
														}
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20890:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1229,
												"nodeType": "ExpressionStatement",
												"src": "20890:54:0"
											}
										]
									},
									"documentation": null,
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"name": "src",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "20375:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20375:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"name": "dst",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "20388:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20388:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "20401:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1168,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "20401:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20374:41:0"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20425:0:0"
									},
									"scope": 1520,
									"src": "20350:601:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1337,
										"nodeType": "Block",
										"src": "21037:841:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1240,
															"name": "srcRep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "21051:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1241,
															"name": "dstRep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "21061:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "21051:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"id": 1245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1243,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1237,
															"src": "21071:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21080:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "21071:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "21051:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1336,
												"nodeType": "IfStatement",
												"src": "21047:825:0",
												"trueBody": {
													"id": 1335,
													"nodeType": "Block",
													"src": "21083:789:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1247,
																	"name": "srcRep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1233,
																	"src": "21101:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1249,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21119:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "21111:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 1250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "21111:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "21101:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1290,
															"nodeType": "IfStatement",
															"src": "21097:376:0",
															"trueBody": {
																"id": 1289,
																"nodeType": "Block",
																"src": "21123:350:0",
																"statements": [
																	{
																		"assignments": [
																			1253
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1253,
																				"name": "srcRepNum",
																				"nodeType": "VariableDeclaration",
																				"scope": 1289,
																				"src": "21141:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"typeName": {
																					"id": 1252,
																					"name": "uint32",
																					"nodeType": "ElementaryTypeName",
																					"src": "21141:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1257,
																		"initialValue": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1254,
																				"name": "numCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 303,
																				"src": "21160:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																					"typeString": "mapping(address => uint32)"
																				}
																			},
																			"id": 1256,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1255,
																				"name": "srcRep",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1233,
																				"src": "21175:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "21160:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "21141:41:0"
																	},
																	{
																		"assignments": [
																			1259
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1259,
																				"name": "srcRepOld",
																				"nodeType": "VariableDeclaration",
																				"scope": 1289,
																				"src": "21200:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				},
																				"typeName": {
																					"id": 1258,
																					"name": "uint96",
																					"nodeType": "ElementaryTypeName",
																					"src": "21200:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1273,
																		"initialValue": {
																			"argumentTypes": null,
																			"condition": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 1262,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1260,
																					"name": "srcRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1253,
																					"src": "21219:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 1261,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "21231:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "21219:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1271,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21278:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 1272,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "21219:60:0",
																			"trueExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 1263,
																							"name": "checkpoints",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 299,
																							"src": "21235:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$293_storage_$_$",
																								"typeString": "mapping(address => mapping(uint32 => struct Uni.Checkpoint storage ref))"
																							}
																						},
																						"id": 1265,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 1264,
																							"name": "srcRep",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1233,
																							"src": "21247:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "21235:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$293_storage_$",
																							"typeString": "mapping(uint32 => struct Uni.Checkpoint storage ref)"
																						}
																					},
																					"id": 1269,
																					"indexExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						},
																						"id": 1268,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1266,
																							"name": "srcRepNum",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1253,
																							"src": "21255:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 1267,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "21267:1:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "21255:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "21235:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Checkpoint_$293_storage",
																						"typeString": "struct Uni.Checkpoint storage ref"
																					}
																				},
																				"id": 1270,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "votes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 292,
																				"src": "21235:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "21200:79:0"
																	},
																	{
																		"assignments": [
																			1275
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1275,
																				"name": "srcRepNew",
																				"nodeType": "VariableDeclaration",
																				"scope": 1289,
																				"src": "21297:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				},
																				"typeName": {
																					"id": 1274,
																					"name": "uint96",
																					"nodeType": "ElementaryTypeName",
																					"src": "21297:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1281,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1277,
																					"name": "srcRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1259,
																					"src": "21322:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1278,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1237,
																					"src": "21333:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "556e693a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f7773",
																					"id": 1279,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "21341:41:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_8f9e8e1e6816d4a772d233c08b8292a576126f7dbd1d9b7cd30ef07f7c3d78d2",
																						"typeString": "literal_string \"Uni::_moveVotes: vote amount underflows\""
																					},
																					"value": "Uni::_moveVotes: vote amount underflows"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_8f9e8e1e6816d4a772d233c08b8292a576126f7dbd1d9b7cd30ef07f7c3d78d2",
																						"typeString": "literal_string \"Uni::_moveVotes: vote amount underflows\""
																					}
																				],
																				"id": 1276,
																				"name": "sub96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1507,
																				"src": "21316:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
																					"typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
																				}
																			},
																			"id": 1280,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21316:67:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "21297:86:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1283,
																					"name": "srcRep",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1233,
																					"src": "21418:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1284,
																					"name": "srcRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1253,
																					"src": "21426:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1285,
																					"name": "srcRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1259,
																					"src": "21437:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1286,
																					"name": "srcRepNew",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1275,
																					"src": "21448:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				],
																				"id": 1282,
																				"name": "_writeCheckpoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1411,
																				"src": "21401:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint96_$_t_uint96_$returns$__$",
																					"typeString": "function (address,uint32,uint96,uint96)"
																				}
																			},
																			"id": 1287,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21401:57:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1288,
																		"nodeType": "ExpressionStatement",
																		"src": "21401:57:0"
																	}
																]
															}
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1291,
																	"name": "dstRep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1235,
																	"src": "21491:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1293,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21509:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1292,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "21501:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 1294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "21501:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "21491:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1334,
															"nodeType": "IfStatement",
															"src": "21487:375:0",
															"trueBody": {
																"id": 1333,
																"nodeType": "Block",
																"src": "21513:349:0",
																"statements": [
																	{
																		"assignments": [
																			1297
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1297,
																				"name": "dstRepNum",
																				"nodeType": "VariableDeclaration",
																				"scope": 1333,
																				"src": "21531:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"typeName": {
																					"id": 1296,
																					"name": "uint32",
																					"nodeType": "ElementaryTypeName",
																					"src": "21531:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1301,
																		"initialValue": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1298,
																				"name": "numCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 303,
																				"src": "21550:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																					"typeString": "mapping(address => uint32)"
																				}
																			},
																			"id": 1300,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1299,
																				"name": "dstRep",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1235,
																				"src": "21565:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "21550:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "21531:41:0"
																	},
																	{
																		"assignments": [
																			1303
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1303,
																				"name": "dstRepOld",
																				"nodeType": "VariableDeclaration",
																				"scope": 1333,
																				"src": "21590:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				},
																				"typeName": {
																					"id": 1302,
																					"name": "uint96",
																					"nodeType": "ElementaryTypeName",
																					"src": "21590:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1317,
																		"initialValue": {
																			"argumentTypes": null,
																			"condition": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 1306,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1304,
																					"name": "dstRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1297,
																					"src": "21609:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 1305,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "21621:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "21609:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1315,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21668:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 1316,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "21609:60:0",
																			"trueExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 1307,
																							"name": "checkpoints",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 299,
																							"src": "21625:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$293_storage_$_$",
																								"typeString": "mapping(address => mapping(uint32 => struct Uni.Checkpoint storage ref))"
																							}
																						},
																						"id": 1309,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 1308,
																							"name": "dstRep",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1235,
																							"src": "21637:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "21625:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$293_storage_$",
																							"typeString": "mapping(uint32 => struct Uni.Checkpoint storage ref)"
																						}
																					},
																					"id": 1313,
																					"indexExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						},
																						"id": 1312,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1310,
																							"name": "dstRepNum",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1297,
																							"src": "21645:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 1311,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "21657:1:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "21645:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "21625:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Checkpoint_$293_storage",
																						"typeString": "struct Uni.Checkpoint storage ref"
																					}
																				},
																				"id": 1314,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "votes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 292,
																				"src": "21625:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "21590:79:0"
																	},
																	{
																		"assignments": [
																			1319
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1319,
																				"name": "dstRepNew",
																				"nodeType": "VariableDeclaration",
																				"scope": 1333,
																				"src": "21687:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				},
																				"typeName": {
																					"id": 1318,
																					"name": "uint96",
																					"nodeType": "ElementaryTypeName",
																					"src": "21687:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1325,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1321,
																					"name": "dstRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1303,
																					"src": "21712:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1322,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1237,
																					"src": "21723:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "556e693a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f7773",
																					"id": 1323,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "21731:40:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_5c6c891434a3c5951db59f5fe43d566b04bf54e07bc444b7f9f72601e608dc42",
																						"typeString": "literal_string \"Uni::_moveVotes: vote amount overflows\""
																					},
																					"value": "Uni::_moveVotes: vote amount overflows"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_5c6c891434a3c5951db59f5fe43d566b04bf54e07bc444b7f9f72601e608dc42",
																						"typeString": "literal_string \"Uni::_moveVotes: vote amount overflows\""
																					}
																				],
																				"id": 1320,
																				"name": "add96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1484,
																				"src": "21706:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
																					"typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
																				}
																			},
																			"id": 1324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21706:66:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "21687:85:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1327,
																					"name": "dstRep",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1235,
																					"src": "21807:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1328,
																					"name": "dstRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1297,
																					"src": "21815:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1329,
																					"name": "dstRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1303,
																					"src": "21826:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1330,
																					"name": "dstRepNew",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1319,
																					"src": "21837:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				],
																				"id": 1326,
																				"name": "_writeCheckpoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1411,
																				"src": "21790:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint96_$_t_uint96_$returns$__$",
																					"typeString": "function (address,uint32,uint96,uint96)"
																				}
																			},
																			"id": 1331,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21790:57:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1332,
																		"nodeType": "ExpressionStatement",
																		"src": "21790:57:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_moveDelegates",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"name": "srcRep",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "20981:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20981:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"name": "dstRep",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "20997:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20997:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "21013:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1236,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "21013:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20980:47:0"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21037:0:0"
									},
									"scope": 1520,
									"src": "20957:921:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1410,
										"nodeType": "Block",
										"src": "21993:508:0",
										"statements": [
											{
												"assignments": [
													1350
												],
												"declarations": [
													{
														"constant": false,
														"id": 1350,
														"name": "blockNumber",
														"nodeType": "VariableDeclaration",
														"scope": 1410,
														"src": "22001:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1349,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "22001:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1356,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1352,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1525,
																"src": "22029:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "22029:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e693a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473",
															"id": 1354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22043:53:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_66157ef8d926a3327823fecd4ce53edfcb6533c37c90dc98acfb91e4f2854725",
																"typeString": "literal_string \"Uni::_writeCheckpoint: block number exceeds 32 bits\""
															},
															"value": "Uni::_writeCheckpoint: block number exceeds 32 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_66157ef8d926a3327823fecd4ce53edfcb6533c37c90dc98acfb91e4f2854725",
																"typeString": "literal_string \"Uni::_writeCheckpoint: block number exceeds 32 bits\""
															}
														],
														"id": 1351,
														"name": "safe32",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1434,
														"src": "22022:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint32_$",
															"typeString": "function (uint256,string memory) pure returns (uint32)"
														}
													},
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22022:75:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22001:96:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 1359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1357,
															"name": "nCheckpoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1342,
															"src": "22110:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22125:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "22110:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 1369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1360,
																		"name": "checkpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 299,
																		"src": "22130:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$293_storage_$_$",
																			"typeString": "mapping(address => mapping(uint32 => struct Uni.Checkpoint storage ref))"
																		}
																	},
																	"id": 1362,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1361,
																		"name": "delegatee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1340,
																		"src": "22142:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "22130:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$293_storage_$",
																		"typeString": "mapping(uint32 => struct Uni.Checkpoint storage ref)"
																	}
																},
																"id": 1366,
																"indexExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 1365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1363,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1342,
																		"src": "22153:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 1364,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22168:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "22153:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "22130:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$293_storage",
																	"typeString": "struct Uni.Checkpoint storage ref"
																}
															},
															"id": 1367,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "fromBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 290,
															"src": "22130:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1368,
															"name": "blockNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1350,
															"src": "22184:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "22130:65:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "22110:85:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1402,
													"nodeType": "Block",
													"src": "22281:149:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1383,
																			"name": "checkpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 299,
																			"src": "22293:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$293_storage_$_$",
																				"typeString": "mapping(address => mapping(uint32 => struct Uni.Checkpoint storage ref))"
																			}
																		},
																		"id": 1386,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1384,
																			"name": "delegatee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1340,
																			"src": "22305:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "22293:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$293_storage_$",
																			"typeString": "mapping(uint32 => struct Uni.Checkpoint storage ref)"
																		}
																	},
																	"id": 1387,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1385,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1342,
																		"src": "22316:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "22293:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$293_storage",
																		"typeString": "struct Uni.Checkpoint storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1389,
																			"name": "blockNumber",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1350,
																			"src": "22343:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 1390,
																			"name": "newVotes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1346,
																			"src": "22356:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			{
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		],
																		"id": 1388,
																		"name": "Checkpoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 293,
																		"src": "22332:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_Checkpoint_$293_storage_ptr_$",
																			"typeString": "type(struct Uni.Checkpoint storage pointer)"
																		}
																	},
																	"id": 1391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22332:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$293_memory",
																		"typeString": "struct Uni.Checkpoint memory"
																	}
																},
																"src": "22293:72:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$293_storage",
																	"typeString": "struct Uni.Checkpoint storage ref"
																}
															},
															"id": 1393,
															"nodeType": "ExpressionStatement",
															"src": "22293:72:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1394,
																		"name": "numCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 303,
																		"src": "22377:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																			"typeString": "mapping(address => uint32)"
																		}
																	},
																	"id": 1396,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1395,
																		"name": "delegatee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1340,
																		"src": "22392:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "22377:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 1399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1397,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1342,
																		"src": "22405:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 1398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22420:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "22405:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "22377:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 1401,
															"nodeType": "ExpressionStatement",
															"src": "22377:44:0"
														}
													]
												},
												"id": 1403,
												"nodeType": "IfStatement",
												"src": "22106:324:0",
												"trueBody": {
													"id": 1382,
													"nodeType": "Block",
													"src": "22197:78:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1371,
																				"name": "checkpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 299,
																				"src": "22209:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$293_storage_$_$",
																					"typeString": "mapping(address => mapping(uint32 => struct Uni.Checkpoint storage ref))"
																				}
																			},
																			"id": 1376,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1372,
																				"name": "delegatee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1340,
																				"src": "22221:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "22209:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$293_storage_$",
																				"typeString": "mapping(uint32 => struct Uni.Checkpoint storage ref)"
																			}
																		},
																		"id": 1377,
																		"indexExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			"id": 1375,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1373,
																				"name": "nCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1342,
																				"src": "22232:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 1374,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22247:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "22232:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "22209:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$293_storage",
																			"typeString": "struct Uni.Checkpoint storage ref"
																		}
																	},
																	"id": 1378,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "votes",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 292,
																	"src": "22209:46:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1379,
																	"name": "newVotes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1346,
																	"src": "22258:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "22209:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 1381,
															"nodeType": "ExpressionStatement",
															"src": "22209:57:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1405,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "22464:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1406,
															"name": "oldVotes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1344,
															"src": "22475:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"argumentTypes": null,
															"id": 1407,
															"name": "newVotes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1346,
															"src": "22485:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 1404,
														"name": "DelegateVotesChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "22443:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22443:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1409,
												"nodeType": "EmitStatement",
												"src": "22438:56:0"
											}
										]
									},
									"documentation": null,
									"id": 1411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_writeCheckpoint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "21910:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21910:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1342,
												"name": "nCheckpoints",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "21929:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1341,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "21929:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"name": "oldVotes",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "21950:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1343,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "21950:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"name": "newVotes",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "21967:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1345,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "21967:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21909:74:0"
									},
									"returnParameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21993:0:0"
									},
									"scope": 1520,
									"src": "21884:617:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1433,
										"nodeType": "Block",
										"src": "22590:75:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1421,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1413,
																"src": "22608:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																},
																"id": 1424,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 1422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22612:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 1423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22615:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "22612:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "22608:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1426,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "22619:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1420,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1538,
															1539
														],
														"referencedDeclaration": 1539,
														"src": "22600:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22600:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1428,
												"nodeType": "ExpressionStatement",
												"src": "22600:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1430,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "22656:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1429,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "22649:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": "uint32"
													},
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22649:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 1419,
												"id": 1432,
												"nodeType": "Return",
												"src": "22642:16:0"
											}
										]
									},
									"documentation": null,
									"id": 1434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe32",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"name": "n",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "22523:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1412,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "22523:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1415,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "22531:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1414,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "22531:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22522:36:0"
									},
									"returnParameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "22582:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1417,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "22582:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22581:8:0"
									},
									"scope": 1520,
									"src": "22507:158:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1456,
										"nodeType": "Block",
										"src": "22754:75:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1444,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1436,
																"src": "22772:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
																	"typeString": "int_const 79228162514264337593543950336"
																},
																"id": 1447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 1445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22776:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3936",
																	"id": 1446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22779:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_96_by_1",
																		"typeString": "int_const 96"
																	},
																	"value": "96"
																},
																"src": "22776:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
																	"typeString": "int_const 79228162514264337593543950336"
																}
															},
															"src": "22772:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1449,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1438,
															"src": "22783:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1443,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1538,
															1539
														],
														"referencedDeclaration": 1539,
														"src": "22764:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22764:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1451,
												"nodeType": "ExpressionStatement",
												"src": "22764:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1453,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "22820:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1452,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "22813:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": "uint96"
													},
													"id": 1454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22813:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 1442,
												"id": 1455,
												"nodeType": "Return",
												"src": "22806:16:0"
											}
										]
									},
									"documentation": null,
									"id": 1457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe96",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"name": "n",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "22687:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1435,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "22687:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "22695:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1437,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "22695:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22686:36:0"
									},
									"returnParameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "22746:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1440,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "22746:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22745:8:0"
									},
									"scope": 1520,
									"src": "22671:158:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1483,
										"nodeType": "Block",
										"src": "22929:90:0",
										"statements": [
											{
												"assignments": [
													1469
												],
												"declarations": [
													{
														"constant": false,
														"id": 1469,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1483,
														"src": "22939:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 1468,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "22939:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1473,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 1472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1470,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1459,
														"src": "22950:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1471,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1461,
														"src": "22954:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "22950:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22939:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1475,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1469,
																"src": "22973:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1476,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1459,
																"src": "22978:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "22973:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1478,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1463,
															"src": "22981:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1474,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1538,
															1539
														],
														"referencedDeclaration": 1539,
														"src": "22965:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22965:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1480,
												"nodeType": "ExpressionStatement",
												"src": "22965:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1481,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1469,
													"src": "23011:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 1467,
												"id": 1482,
												"nodeType": "Return",
												"src": "23004:8:0"
											}
										]
									},
									"documentation": null,
									"id": 1484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add96",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "22850:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1458,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "22850:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "22860:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1460,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "22860:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1463,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "22870:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1462,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "22870:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22849:48:0"
									},
									"returnParameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "22921:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1465,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "22921:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22920:8:0"
									},
									"scope": 1520,
									"src": "22835:184:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1506,
										"nodeType": "Block",
										"src": "23119:68:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 1498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1496,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1488,
																"src": "23137:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1497,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1486,
																"src": "23142:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "23137:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1499,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "23145:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1495,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1538,
															1539
														],
														"referencedDeclaration": 1539,
														"src": "23129:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23129:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1501,
												"nodeType": "ExpressionStatement",
												"src": "23129:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1502,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1486,
														"src": "23175:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1503,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1488,
														"src": "23179:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "23175:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 1494,
												"id": 1505,
												"nodeType": "Return",
												"src": "23168:12:0"
											}
										]
									},
									"documentation": null,
									"id": 1507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub96",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "23040:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1485,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "23040:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1488,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "23050:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1487,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "23050:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1490,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "23060:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1489,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "23060:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23039:48:0"
									},
									"returnParameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "23111:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1492,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "23111:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23110:8:0"
									},
									"scope": 1520,
									"src": "23025:162:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1518,
										"nodeType": "Block",
										"src": "23244:98:0",
										"statements": [
											{
												"assignments": [
													1513
												],
												"declarations": [
													{
														"constant": false,
														"id": 1513,
														"name": "chainId",
														"nodeType": "VariableDeclaration",
														"scope": 1518,
														"src": "23254:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1512,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23254:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1514,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "23254:15:0"
											},
											{
												"externalReferences": [
													{
														"chainId": {
															"declaration": 1513,
															"isOffset": false,
															"isSlot": false,
															"src": "23290:7:0",
															"valueSize": 1
														}
													}
												],
												"id": 1515,
												"nodeType": "InlineAssembly",
												"operations": "{ chainId := chainid() }",
												"src": "23279:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1516,
													"name": "chainId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1513,
													"src": "23328:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1511,
												"id": 1517,
												"nodeType": "Return",
												"src": "23321:14:0"
											}
										]
									},
									"documentation": null,
									"id": 1519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getChainId",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23212:2:0"
									},
									"returnParameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "23238:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1509,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "23238:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23237:6:0"
									},
									"scope": 1520,
									"src": "23193:149:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1521,
							"src": "6581:16763:0"
						}
					],
					"src": "134:23210:0"
				},
				"id": 0
			}
		}
	}
}